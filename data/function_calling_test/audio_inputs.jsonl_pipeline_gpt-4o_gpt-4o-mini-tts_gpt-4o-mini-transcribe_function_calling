{"filename": "stop_data/stop/test_1/weather_test/00005524.wav", "split": "test", "intent": "[IN:GET_WEATHER what 's the [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER local ] ] ] radar ]", "parameters": {}, "sentence": "what's the local radar", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT 'S THE LOCAL RADAR", "normalized_seqlogical": "[IN:GET_WEATHER WHAT 'S THE [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER LOCAL ] ] ] RADAR ]", "raw_data": {"file_id": "test_1/weather_test/00005524.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "what's the local radar", "seqlogical": "[IN:GET_WEATHER what 's the [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER local ] ] ] radar ]", "normalized_utterance": "WHAT 'S THE LOCAL RADAR", "normalized_seqlogical": "[IN:GET_WEATHER WHAT 'S THE [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER LOCAL ] ] ] RADAR ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER LOCAL ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "radar"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00004414.wav", "split": "test", "intent": "[IN:GET_WEATHER Will there be [SL:WEATHER_ATTRIBUTE rain ] in [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_USER my current location ] ] ] ? ]", "parameters": {}, "sentence": "Will there be rain in my current location?", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "WILL THERE BE RAIN IN MY CURRENT LOCATION", "normalized_seqlogical": "[IN:GET_WEATHER WILL THERE BE [SL:WEATHER_ATTRIBUTE RAIN ] IN [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_USER MY CURRENT LOCATION ] ] ] ]", "raw_data": {"file_id": "test_1/weather_test/00004414.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "Will there be rain in my current location?", "seqlogical": "[IN:GET_WEATHER Will there be [SL:WEATHER_ATTRIBUTE rain ] in [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_USER my current location ] ] ] ? ]", "normalized_utterance": "WILL THERE BE RAIN IN MY CURRENT LOCATION", "normalized_seqlogical": "[IN:GET_WEATHER WILL THERE BE [SL:WEATHER_ATTRIBUTE RAIN ] IN [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_USER MY CURRENT LOCATION ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE RAIN ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_USER MY CURRENT LOCATION ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "current location"}}, {"name": "get_weather", "arguments": {"location": "current location"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00004414.wav", "split": "test", "intent": "[IN:GET_WEATHER Will there be [SL:WEATHER_ATTRIBUTE rain ] in [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_USER my current location ] ] ] ? ]", "parameters": {}, "sentence": "Will there be rain in my current location?", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "WILL THERE BE RAIN IN MY CURRENT LOCATION", "normalized_seqlogical": "[IN:GET_WEATHER WILL THERE BE [SL:WEATHER_ATTRIBUTE RAIN ] IN [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_USER MY CURRENT LOCATION ] ] ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00004414.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "Will there be rain in my current location?", "seqlogical": "[IN:GET_WEATHER Will there be [SL:WEATHER_ATTRIBUTE rain ] in [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_USER my current location ] ] ] ? ]", "normalized_utterance": "WILL THERE BE RAIN IN MY CURRENT LOCATION", "normalized_seqlogical": "[IN:GET_WEATHER WILL THERE BE [SL:WEATHER_ATTRIBUTE RAIN ] IN [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_USER MY CURRENT LOCATION ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE RAIN ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_USER MY CURRENT LOCATION ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "current"}}, {"name": "get_weather", "arguments": {"location": "MOCK_RESPONSE(get_location)", "weather_attribute": "rain"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00003977.wav", "split": "test", "intent": "[IN:GET_WEATHER what is the weather at the [SL:LOCATION buffalo zoo ] right now ]", "parameters": {}, "sentence": "what is the weather at the buffalo zoo right now", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT IS THE WEATHER AT THE BUFFALO ZOO RIGHT NOW", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE WEATHER AT THE [SL:LOCATION BUFFALO ZOO ] RIGHT NOW ]", "raw_data": {"file_id": "test_1/weather_test/00003977.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "what is the weather at the buffalo zoo right now", "seqlogical": "[IN:GET_WEATHER what is the weather at the [SL:LOCATION buffalo zoo ] right now ]", "normalized_utterance": "WHAT IS THE WEATHER AT THE BUFFALO ZOO RIGHT NOW", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE WEATHER AT THE [SL:LOCATION BUFFALO ZOO ] RIGHT NOW ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:LOCATION BUFFALO ZOO ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"location": "Buffalo Zoo"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00005329.wav", "split": "test", "intent": "[IN:GET_WEATHER Give me the weather for [SL:LOCATION Halifax ] [SL:DATE_TIME at 3 pm this coming Monday ] ]", "parameters": {}, "sentence": "Give me the weather for Halifax at 3pm this coming Monday", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "GIVE ME THE WEATHER FOR HALIFAX AT THREE PM THIS COMING MONDAY", "normalized_seqlogical": "[IN:GET_WEATHER GIVE ME THE WEATHER FOR [SL:LOCATION HALIFAX ] [SL:DATE_TIME AT THREE PM THIS COMING MONDAY ] ]", "raw_data": {"file_id": "test_1/weather_test/00005329.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "Give me the weather for Halifax at 3pm this coming Monday", "seqlogical": "[IN:GET_WEATHER Give me the weather for [SL:LOCATION Halifax ] [SL:DATE_TIME at 3 pm this coming Monday ] ]", "normalized_utterance": "GIVE ME THE WEATHER FOR HALIFAX AT THREE PM THIS COMING MONDAY", "normalized_seqlogical": "[IN:GET_WEATHER GIVE ME THE WEATHER FOR [SL:LOCATION HALIFAX ] [SL:DATE_TIME AT THREE PM THIS COMING MONDAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:LOCATION HALIFAX ] [SL:DATE_TIME AT THREE PM THIS COMING MONDAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"location": "Halifax", "date_time": "this coming Monday at 3 PM"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00003133.wav", "split": "test", "intent": "[IN:GET_WEATHER How [SL:WEATHER_ATTRIBUTE hot ] will it be ]", "parameters": {}, "sentence": "How hot will it be", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "HOW HOT WILL IT BE", "normalized_seqlogical": "[IN:GET_WEATHER HOW [SL:WEATHER_ATTRIBUTE HOT ] WILL IT BE ]", "raw_data": {"file_id": "test_1/weather_test/00003133.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "How hot will it be", "seqlogical": "[IN:GET_WEATHER How [SL:WEATHER_ATTRIBUTE hot ] will it be ]", "normalized_utterance": "HOW HOT WILL IT BE", "normalized_seqlogical": "[IN:GET_WEATHER HOW [SL:WEATHER_ATTRIBUTE HOT ] WILL IT BE ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE HOT ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "high temperature"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00002122.wav", "split": "test", "intent": "[IN:GET_WEATHER Can I wear [SL:WEATHER_ATTRIBUTE shorts ] [SL:DATE_TIME today ] ? ]", "parameters": {}, "sentence": "Can I wear shorts today?", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "CAN I WEAR SHORTS TODAY", "normalized_seqlogical": "[IN:GET_WEATHER CAN I WEAR [SL:WEATHER_ATTRIBUTE SHORTS ] [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00002122.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "Can I wear shorts today?", "seqlogical": "[IN:GET_WEATHER Can I wear [SL:WEATHER_ATTRIBUTE shorts ] [SL:DATE_TIME today ] ? ]", "normalized_utterance": "CAN I WEAR SHORTS TODAY", "normalized_seqlogical": "[IN:GET_WEATHER CAN I WEAR [SL:WEATHER_ATTRIBUTE SHORTS ] [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE SHORTS ] [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "temperature"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00001332.wav", "split": "test", "intent": "[IN:GET_WEATHER What is the [SL:WEATHER_ATTRIBUTE humidity ] in [SL:LOCATION Spokane ] ? ]", "parameters": {}, "sentence": "What is the humidity in Spokane?", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT IS THE HUMIDITY IN SPOKANE", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE [SL:WEATHER_ATTRIBUTE HUMIDITY ] IN [SL:LOCATION SPOKANE ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00001332.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "What is the humidity in Spokane?", "seqlogical": "[IN:GET_WEATHER What is the [SL:WEATHER_ATTRIBUTE humidity ] in [SL:LOCATION Spokane ] ? ]", "normalized_utterance": "WHAT IS THE HUMIDITY IN SPOKANE", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE [SL:WEATHER_ATTRIBUTE HUMIDITY ] IN [SL:LOCATION SPOKANE ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE HUMIDITY ] [SL:LOCATION SPOKANE ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "humidity", "location": "Spokane"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00004126.wav", "split": "test", "intent": "[IN:GET_WEATHER How [SL:WEATHER_ATTRIBUTE warm ] is it around [SL:LOCATION Dublin ] [SL:DATE_TIME next week ] in degrees [SL:WEATHER_TEMPERATURE_UNIT fahrenheit ] ]", "parameters": {}, "sentence": "How warm is it around Dublin next week in degrees fahrenheit", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "HOW WARM IS IT AROUND DUBLIN NEXT WEEK IN DEGREES FAHRENHEIT", "normalized_seqlogical": "[IN:GET_WEATHER HOW [SL:WEATHER_ATTRIBUTE WARM ] IS IT AROUND [SL:LOCATION DUBLIN ] [SL:DATE_TIME NEXT WEEK ] IN DEGREES [SL:WEATHER_TEMPERATURE_UNIT FAHRENHEIT ] ]", "raw_data": {"file_id": "test_1/weather_test/00004126.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "How warm is it around Dublin next week in degrees fahrenheit", "seqlogical": "[IN:GET_WEATHER How [SL:WEATHER_ATTRIBUTE warm ] is it around [SL:LOCATION Dublin ] [SL:DATE_TIME next week ] in degrees [SL:WEATHER_TEMPERATURE_UNIT fahrenheit ] ]", "normalized_utterance": "HOW WARM IS IT AROUND DUBLIN NEXT WEEK IN DEGREES FAHRENHEIT", "normalized_seqlogical": "[IN:GET_WEATHER HOW [SL:WEATHER_ATTRIBUTE WARM ] IS IT AROUND [SL:LOCATION DUBLIN ] [SL:DATE_TIME NEXT WEEK ] IN DEGREES [SL:WEATHER_TEMPERATURE_UNIT FAHRENHEIT ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE WARM ] [SL:LOCATION DUBLIN ] [SL:DATE_TIME NEXT WEEK ] [SL:WEATHER_TEMPERATURE_UNIT FAHRENHEIT ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"location": "Dublin", "date_time": "next week", "weather_temperature_unit": "Fahrenheit"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00001787.wav", "split": "test", "intent": "[IN:GET_WEATHER How much [SL:WEATHER_ATTRIBUTE snow ] is expected to fall [SL:DATE_TIME today ] ? ]", "parameters": {}, "sentence": "How much snow is expected to fall today?", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "HOW MUCH SNOW IS EXPECTED TO FALL TODAY", "normalized_seqlogical": "[IN:GET_WEATHER HOW MUCH [SL:WEATHER_ATTRIBUTE SNOW ] IS EXPECTED TO FALL [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00001787.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "How much snow is expected to fall today?", "seqlogical": "[IN:GET_WEATHER How much [SL:WEATHER_ATTRIBUTE snow ] is expected to fall [SL:DATE_TIME today ] ? ]", "normalized_utterance": "HOW MUCH SNOW IS EXPECTED TO FALL TODAY", "normalized_seqlogical": "[IN:GET_WEATHER HOW MUCH [SL:WEATHER_ATTRIBUTE SNOW ] IS EXPECTED TO FALL [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE SNOW ] [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "snowfall"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00000021.wav", "split": "test", "intent": "[IN:GET_WEATHER What will the weather be like [SL:DATE_TIME tomorrow ] ? ]", "parameters": {}, "sentence": "What will the weather be like tomorrow?", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT WILL THE WEATHER BE LIKE TOMORROW", "normalized_seqlogical": "[IN:GET_WEATHER WHAT WILL THE WEATHER BE LIKE [SL:DATE_TIME TOMORROW ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00000021.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "What will the weather be like tomorrow?", "seqlogical": "[IN:GET_WEATHER What will the weather be like [SL:DATE_TIME tomorrow ] ? ]", "normalized_utterance": "WHAT WILL THE WEATHER BE LIKE TOMORROW", "normalized_seqlogical": "[IN:GET_WEATHER WHAT WILL THE WEATHER BE LIKE [SL:DATE_TIME TOMORROW ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:DATE_TIME TOMORROW ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"date_time": "tomorrow"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00004667.wav", "split": "test", "intent": "[IN:GET_WEATHER Can you tell me the forecast [SL:DATE_TIME for Friday ] . ]", "parameters": {}, "sentence": "Can you tell me the forecast for Friday.", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "CAN YOU TELL ME THE FORECAST FOR FRIDAY", "normalized_seqlogical": "[IN:GET_WEATHER CAN YOU TELL ME THE FORECAST [SL:DATE_TIME FOR FRIDAY ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00004667.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "Can you tell me the forecast for Friday.", "seqlogical": "[IN:GET_WEATHER Can you tell me the forecast [SL:DATE_TIME for Friday ] . ]", "normalized_utterance": "CAN YOU TELL ME THE FORECAST FOR FRIDAY", "normalized_seqlogical": "[IN:GET_WEATHER CAN YOU TELL ME THE FORECAST [SL:DATE_TIME FOR FRIDAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:DATE_TIME FOR FRIDAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"date_time": "Friday"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00005650.wav", "split": "test", "intent": "[IN:GET_WEATHER Forecast [SL:DATE_TIME in a fortnight ] ]", "parameters": {}, "sentence": "Forecast in a fortnight", "domain": "weather", "gender": "Male", "native": "No", "normalized_utterance": "FORECAST IN A FORTNIGHT", "normalized_seqlogical": "[IN:GET_WEATHER FORECAST [SL:DATE_TIME IN A FORTNIGHT ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00005650.wav", "domain": "weather", "gender": "Male", "native": "No", "utterance": "Forecast in a fortnight", "seqlogical": "[IN:GET_WEATHER Forecast [SL:DATE_TIME in a fortnight ] ]", "normalized_utterance": "FORECAST IN A FORTNIGHT", "normalized_seqlogical": "[IN:GET_WEATHER FORECAST [SL:DATE_TIME IN A FORTNIGHT ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:DATE_TIME IN A FORTNIGHT ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"date_time": "in a fortnight"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00005194.wav", "split": "test", "intent": "[IN:GET_WEATHER Is it going to [SL:WEATHER_ATTRIBUTE rain ] ? ]", "parameters": {}, "sentence": "Is it going to rain?", "domain": "weather", "gender": "Male", "native": "No", "normalized_utterance": "IS IT GOING TO RAIN", "normalized_seqlogical": "[IN:GET_WEATHER IS IT GOING TO [SL:WEATHER_ATTRIBUTE RAIN ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00005194.wav", "domain": "weather", "gender": "Male", "native": "No", "utterance": "Is it going to rain?", "seqlogical": "[IN:GET_WEATHER Is it going to [SL:WEATHER_ATTRIBUTE rain ] ? ]", "normalized_utterance": "IS IT GOING TO RAIN", "normalized_seqlogical": "[IN:GET_WEATHER IS IT GOING TO [SL:WEATHER_ATTRIBUTE RAIN ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE RAIN ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "rain"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00002430.wav", "split": "test", "intent": "[IN:GET_WEATHER What is the weather [SL:DATE_TIME for the week ] ? ]", "parameters": {}, "sentence": "What is the weather for the week?", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT IS THE WEATHER FOR THE WEEK", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE WEATHER [SL:DATE_TIME FOR THE WEEK ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00002430.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "What is the weather for the week?", "seqlogical": "[IN:GET_WEATHER What is the weather [SL:DATE_TIME for the week ] ? ]", "normalized_utterance": "WHAT IS THE WEATHER FOR THE WEEK", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE WEATHER [SL:DATE_TIME FOR THE WEEK ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:DATE_TIME FOR THE WEEK ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"date_time": "this week"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00004563.wav", "split": "test", "intent": "[IN:GET_WEATHER What is the weather in [SL:LOCATION Italy ] ]", "parameters": {}, "sentence": "What is the weather in Italy", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT IS THE WEATHER IN ITALY", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE WEATHER IN [SL:LOCATION ITALY ] ]", "raw_data": {"file_id": "test_1/weather_test/00004563.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "What is the weather in Italy", "seqlogical": "[IN:GET_WEATHER What is the weather in [SL:LOCATION Italy ] ]", "normalized_utterance": "WHAT IS THE WEATHER IN ITALY", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE WEATHER IN [SL:LOCATION ITALY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:LOCATION ITALY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"location": "Italy"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00000512.wav", "split": "test", "intent": "[IN:GET_WEATHER Is it going to [SL:WEATHER_ATTRIBUTE snow ] [SL:DATE_TIME tomorrow ] ? ]", "parameters": {}, "sentence": "Is it going to snow tomorrow?", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "IS IT GOING TO SNOW TOMORROW", "normalized_seqlogical": "[IN:GET_WEATHER IS IT GOING TO [SL:WEATHER_ATTRIBUTE SNOW ] [SL:DATE_TIME TOMORROW ] ]", "raw_data": {"file_id": "test_1/weather_test/00000512.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "Is it going to snow tomorrow?", "seqlogical": "[IN:GET_WEATHER Is it going to [SL:WEATHER_ATTRIBUTE snow ] [SL:DATE_TIME tomorrow ] ? ]", "normalized_utterance": "IS IT GOING TO SNOW TOMORROW", "normalized_seqlogical": "[IN:GET_WEATHER IS IT GOING TO [SL:WEATHER_ATTRIBUTE SNOW ] [SL:DATE_TIME TOMORROW ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE SNOW ] [SL:DATE_TIME TOMORROW ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "snow", "date_time": "tomorrow"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00005514.wav", "split": "test", "intent": "[IN:GET_WEATHER What is the expected accumulation of [SL:WEATHER_ATTRIBUTE rain ] in millimetres [SL:DATE_TIME for tonight ] ? ]", "parameters": {}, "sentence": "What is the expected accumulation of rain in millimetres for tonight?", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT IS THE EXPECTED ACCUMULATION OF RAIN IN MILLIMETRES FOR TONIGHT", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE EXPECTED ACCUMULATION OF [SL:WEATHER_ATTRIBUTE RAIN ] IN MILLIMETRES [SL:DATE_TIME FOR TONIGHT ] ]", "raw_data": {"file_id": "test_1/weather_test/00005514.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "What is the expected accumulation of rain in millimetres for tonight?", "seqlogical": "[IN:GET_WEATHER What is the expected accumulation of [SL:WEATHER_ATTRIBUTE rain ] in millimetres [SL:DATE_TIME for tonight ] ? ]", "normalized_utterance": "WHAT IS THE EXPECTED ACCUMULATION OF RAIN IN MILLIMETRES FOR TONIGHT", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE EXPECTED ACCUMULATION OF [SL:WEATHER_ATTRIBUTE RAIN ] IN MILLIMETRES [SL:DATE_TIME FOR TONIGHT ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE RAIN ] [SL:DATE_TIME FOR TONIGHT ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"measurement_unit": "millimeters", "weather_attribute": "rainfall", "date_time": "tonight"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00004191.wav", "split": "test", "intent": "[IN:GET_WEATHER Is it [SL:WEATHER_ATTRIBUTE above ] [SL:WEATHER_ATTRIBUTE 43 ] in degrees [SL:WEATHER_TEMPERATURE_UNIT fahrenheit ] for [SL:LOCATION Dublin ] [SL:DATE_TIME today ] ]", "parameters": {}, "sentence": "Is it above 43 in degrees fahrenheit for Dublin today", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "IS IT ABOVE FORTY THREE IN DEGREES FAHRENHEIT FOR DUBLIN TODAY", "normalized_seqlogical": "[IN:GET_WEATHER IS IT [SL:WEATHER_ATTRIBUTE ABOVE ] [SL:WEATHER_ATTRIBUTE FORTY THREE ] IN DEGREES [SL:WEATHER_TEMPERATURE_UNIT FAHRENHEIT ] FOR [SL:LOCATION DUBLIN ] [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_1/weather_test/00004191.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "Is it above 43 in degrees fahrenheit for Dublin today", "seqlogical": "[IN:GET_WEATHER Is it [SL:WEATHER_ATTRIBUTE above ] [SL:WEATHER_ATTRIBUTE 43 ] in degrees [SL:WEATHER_TEMPERATURE_UNIT fahrenheit ] for [SL:LOCATION Dublin ] [SL:DATE_TIME today ] ]", "normalized_utterance": "IS IT ABOVE FORTY THREE IN DEGREES FAHRENHEIT FOR DUBLIN TODAY", "normalized_seqlogical": "[IN:GET_WEATHER IS IT [SL:WEATHER_ATTRIBUTE ABOVE ] [SL:WEATHER_ATTRIBUTE FORTY THREE ] IN DEGREES [SL:WEATHER_TEMPERATURE_UNIT FAHRENHEIT ] FOR [SL:LOCATION DUBLIN ] [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE ABOVE ] [SL:WEATHER_ATTRIBUTE FORTY THREE ] [SL:WEATHER_TEMPERATURE_UNIT FAHRENHEIT ] [SL:LOCATION DUBLIN ] [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_temperature_unit": "Fahrenheit", "weather_attribute": "temperature", "location": "Dublin", "date_time": "today"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00002113.wav", "split": "test", "intent": "[IN:GET_WEATHER temperature in [SL:LOCATION raleigh North Carolina ] ]", "parameters": {}, "sentence": "temperature in raleigh North Carolina", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "TEMPERATURE IN RALEIGH NORTH CAROLINA", "normalized_seqlogical": "[IN:GET_WEATHER TEMPERATURE IN [SL:LOCATION RALEIGH NORTH CAROLINA ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00002113.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "temperature in raleigh North Carolina", "seqlogical": "[IN:GET_WEATHER temperature in [SL:LOCATION raleigh North Carolina ] ]", "normalized_utterance": "TEMPERATURE IN RALEIGH NORTH CAROLINA", "normalized_seqlogical": "[IN:GET_WEATHER TEMPERATURE IN [SL:LOCATION RALEIGH NORTH CAROLINA ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:LOCATION RALEIGH NORTH CAROLINA ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"location": "Raleigh, North Carolina", "weather_attribute": "temperature"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00005235.wav", "split": "test", "intent": "[IN:GET_WEATHER What is it like [SL:DATE_TIME today ] in [SL:LOCATION Maui ] ? ]", "parameters": {}, "sentence": "What is it like today in Maui?", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT IS IT LIKE TODAY IN MAUI", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS IT LIKE [SL:DATE_TIME TODAY ] IN [SL:LOCATION MAUI ] ]", "raw_data": {"file_id": "test_1/weather_test/00005235.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "What is it like today in Maui?", "seqlogical": "[IN:GET_WEATHER What is it like [SL:DATE_TIME today ] in [SL:LOCATION Maui ] ? ]", "normalized_utterance": "WHAT IS IT LIKE TODAY IN MAUI", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS IT LIKE [SL:DATE_TIME TODAY ] IN [SL:LOCATION MAUI ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:DATE_TIME TODAY ] [SL:LOCATION MAUI ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"location": "Maui"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00003250.wav", "split": "test", "intent": "[IN:GET_WEATHER What is the weather [SL:DATE_TIME for the week ] ]", "parameters": {}, "sentence": "What is the weather for the week", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT IS THE WEATHER FOR THE WEEK", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE WEATHER [SL:DATE_TIME FOR THE WEEK ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00003250.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "What is the weather for the week", "seqlogical": "[IN:GET_WEATHER What is the weather [SL:DATE_TIME for the week ] ]", "normalized_utterance": "WHAT IS THE WEATHER FOR THE WEEK", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE WEATHER [SL:DATE_TIME FOR THE WEEK ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:DATE_TIME FOR THE WEEK ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"date_time": "this week"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00000165.wav", "split": "test", "intent": "[IN:GET_WEATHER is it going to [SL:WEATHER_ATTRIBUTE rain ] [SL:DATE_TIME tomorrow ] ]", "parameters": {}, "sentence": "is it going to rain tomorrow", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "IS IT GOING TO RAIN TOMORROW", "normalized_seqlogical": "[IN:GET_WEATHER IS IT GOING TO [SL:WEATHER_ATTRIBUTE RAIN ] [SL:DATE_TIME TOMORROW ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00000165.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "is it going to rain tomorrow", "seqlogical": "[IN:GET_WEATHER is it going to [SL:WEATHER_ATTRIBUTE rain ] [SL:DATE_TIME tomorrow ] ]", "normalized_utterance": "IS IT GOING TO RAIN TOMORROW", "normalized_seqlogical": "[IN:GET_WEATHER IS IT GOING TO [SL:WEATHER_ATTRIBUTE RAIN ] [SL:DATE_TIME TOMORROW ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE RAIN ] [SL:DATE_TIME TOMORROW ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "rain", "date_time": "tomorrow"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00001671.wav", "split": "test", "intent": "[IN:GET_WEATHER Is a [SL:WEATHER_ATTRIBUTE hot ] right now in [SL:LOCATION Hawaii ] [SL:DATE_TIME at 9 PM ] ]", "parameters": {}, "sentence": "Is a hot right now in Hawaii at 9 PM", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "IS A HOT RIGHT NOW IN HAWAII AT NINE PM", "normalized_seqlogical": "[IN:GET_WEATHER IS A [SL:WEATHER_ATTRIBUTE HOT ] RIGHT NOW IN [SL:LOCATION HAWAII ] [SL:DATE_TIME AT NINE PM ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00001671.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "Is a hot right now in Hawaii at 9 PM", "seqlogical": "[IN:GET_WEATHER Is a [SL:WEATHER_ATTRIBUTE hot ] right now in [SL:LOCATION Hawaii ] [SL:DATE_TIME at 9 PM ] ]", "normalized_utterance": "IS A HOT RIGHT NOW IN HAWAII AT NINE PM", "normalized_seqlogical": "[IN:GET_WEATHER IS A [SL:WEATHER_ATTRIBUTE HOT ] RIGHT NOW IN [SL:LOCATION HAWAII ] [SL:DATE_TIME AT NINE PM ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE HOT ] [SL:LOCATION HAWAII ] [SL:DATE_TIME AT NINE PM ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"location": "Hawaii", "date_time": "9 PM"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00002377.wav", "split": "test", "intent": "[IN:GET_WEATHER Is it [SL:WEATHER_ATTRIBUTE cold ] outside ? ]", "parameters": {}, "sentence": "Is it cold outside?", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "IS IT COLD OUTSIDE", "normalized_seqlogical": "[IN:GET_WEATHER IS IT [SL:WEATHER_ATTRIBUTE COLD ] OUTSIDE ]", "raw_data": {"file_id": "test_1/weather_test/00002377.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "Is it cold outside?", "seqlogical": "[IN:GET_WEATHER Is it [SL:WEATHER_ATTRIBUTE cold ] outside ? ]", "normalized_utterance": "IS IT COLD OUTSIDE", "normalized_seqlogical": "[IN:GET_WEATHER IS IT [SL:WEATHER_ATTRIBUTE COLD ] OUTSIDE ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE COLD ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "temperature"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00005513.wav", "split": "test", "intent": "[IN:GET_WEATHER How many [SL:WEATHER_TEMPERATURE_UNIT degrees Celsius ] is it outside ? ]", "parameters": {}, "sentence": "How many degrees Celsius is it outside?", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "HOW MANY DEGREES CELSIUS IS IT OUTSIDE", "normalized_seqlogical": "[IN:GET_WEATHER HOW MANY [SL:WEATHER_TEMPERATURE_UNIT DEGREES CELSIUS ] IS IT OUTSIDE ]", "raw_data": {"file_id": "test_1/weather_test/00005513.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "How many degrees Celsius is it outside?", "seqlogical": "[IN:GET_WEATHER How many [SL:WEATHER_TEMPERATURE_UNIT degrees Celsius ] is it outside ? ]", "normalized_utterance": "HOW MANY DEGREES CELSIUS IS IT OUTSIDE", "normalized_seqlogical": "[IN:GET_WEATHER HOW MANY [SL:WEATHER_TEMPERATURE_UNIT DEGREES CELSIUS ] IS IT OUTSIDE ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_TEMPERATURE_UNIT DEGREES CELSIUS ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_temperature_unit": "Celsius"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00003322.wav", "split": "test", "intent": "[IN:GET_WEATHER does it [SL:WEATHER_ATTRIBUTE snow ] in [SL:LOCATION San Diego ] ]", "parameters": {}, "sentence": "does it snow in San Diego", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "DOES IT SNOW IN SAN DIEGO", "normalized_seqlogical": "[IN:GET_WEATHER DOES IT [SL:WEATHER_ATTRIBUTE SNOW ] IN [SL:LOCATION SAN DIEGO ] ]", "raw_data": {"file_id": "test_1/weather_test/00003322.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "does it snow in San Diego", "seqlogical": "[IN:GET_WEATHER does it [SL:WEATHER_ATTRIBUTE snow ] in [SL:LOCATION San Diego ] ]", "normalized_utterance": "DOES IT SNOW IN SAN DIEGO", "normalized_seqlogical": "[IN:GET_WEATHER DOES IT [SL:WEATHER_ATTRIBUTE SNOW ] IN [SL:LOCATION SAN DIEGO ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE SNOW ] [SL:LOCATION SAN DIEGO ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"location": "San Diego", "weather_attribute": "snow"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00000193.wav", "split": "test", "intent": "[IN:GET_WEATHER should I bring an [SL:WEATHER_ATTRIBUTE umbrella ] ]", "parameters": {}, "sentence": "should I bring an umbrella", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "SHOULD I BRING AN UMBRELLA", "normalized_seqlogical": "[IN:GET_WEATHER SHOULD I BRING AN [SL:WEATHER_ATTRIBUTE UMBRELLA ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00000193.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "should I bring an umbrella", "seqlogical": "[IN:GET_WEATHER should I bring an [SL:WEATHER_ATTRIBUTE umbrella ] ]", "normalized_utterance": "SHOULD I BRING AN UMBRELLA", "normalized_seqlogical": "[IN:GET_WEATHER SHOULD I BRING AN [SL:WEATHER_ATTRIBUTE UMBRELLA ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE UMBRELLA ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "rainfall"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00005322.wav", "split": "test", "intent": "[IN:GET_WEATHER Can you tell me the weather in [SL:LOCATION Toronto ] [SL:DATE_TIME today ] ? ]", "parameters": {}, "sentence": "Can you tell me the weather in  Toronto today ?", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "CAN YOU TELL ME THE WEATHER IN TORONTO TODAY", "normalized_seqlogical": "[IN:GET_WEATHER CAN YOU TELL ME THE WEATHER IN [SL:LOCATION TORONTO ] [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_1/weather_test/00005322.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "Can you tell me the weather in  Toronto today ?", "seqlogical": "[IN:GET_WEATHER Can you tell me the weather in [SL:LOCATION Toronto ] [SL:DATE_TIME today ] ? ]", "normalized_utterance": "CAN YOU TELL ME THE WEATHER IN TORONTO TODAY", "normalized_seqlogical": "[IN:GET_WEATHER CAN YOU TELL ME THE WEATHER IN [SL:LOCATION TORONTO ] [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:LOCATION TORONTO ] [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"location": "Toronto", "date_time": "today"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00004385.wav", "split": "test", "intent": "[IN:GET_WEATHER Will it be under 50 [SL:DATE_TIME today ] ]", "parameters": {}, "sentence": "Will it be under 50 today", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "WILL IT BE UNDER FIFTY TODAY", "normalized_seqlogical": "[IN:GET_WEATHER WILL IT BE UNDER FIFTY [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00004385.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "Will it be under 50 today", "seqlogical": "[IN:GET_WEATHER Will it be under 50 [SL:DATE_TIME today ] ]", "normalized_utterance": "WILL IT BE UNDER FIFTY TODAY", "normalized_seqlogical": "[IN:GET_WEATHER WILL IT BE UNDER FIFTY [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_temperature_unit": "Fahrenheit", "weather_attribute": "temperature"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00005666.wav", "split": "test", "intent": "[IN:GET_WEATHER what 's the forecast looking like [SL:DATE_TIME at three ] ]", "parameters": {}, "sentence": "what's the forecast looking like at three", "domain": "weather", "gender": "Male", "native": "No", "normalized_utterance": "WHAT 'S THE FORECAST LOOKING LIKE AT THREE", "normalized_seqlogical": "[IN:GET_WEATHER WHAT 'S THE FORECAST LOOKING LIKE [SL:DATE_TIME AT THREE ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00005666.wav", "domain": "weather", "gender": "Male", "native": "No", "utterance": "what's the forecast looking like at three", "seqlogical": "[IN:GET_WEATHER what 's the forecast looking like [SL:DATE_TIME at three ] ]", "normalized_utterance": "WHAT 'S THE FORECAST LOOKING LIKE AT THREE", "normalized_seqlogical": "[IN:GET_WEATHER WHAT 'S THE FORECAST LOOKING LIKE [SL:DATE_TIME AT THREE ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:DATE_TIME AT THREE ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"date_time": "today at 3pm"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00003736.wav", "split": "test", "intent": "[IN:UNSUPPORTED_WEATHER What 's the longest time without [SL:WEATHER_ATTRIBUTE rain ] in north carolina ]", "parameters": {}, "sentence": "What's the longest time without rain in north carolina", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT 'S THE LONGEST TIME WITHOUT RAIN IN NORTH CAROLINA", "normalized_seqlogical": "[IN:UNSUPPORTED_WEATHER WHAT 'S THE LONGEST TIME WITHOUT [SL:WEATHER_ATTRIBUTE RAIN ] IN NORTH CAROLINA ]", "raw_data": {"file_id": "test_1/weather_test/00003736.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "What's the longest time without rain in north carolina", "seqlogical": "[IN:UNSUPPORTED_WEATHER What 's the longest time without [SL:WEATHER_ATTRIBUTE rain ] in north carolina ]", "normalized_utterance": "WHAT 'S THE LONGEST TIME WITHOUT RAIN IN NORTH CAROLINA", "normalized_seqlogical": "[IN:UNSUPPORTED_WEATHER WHAT 'S THE LONGEST TIME WITHOUT [SL:WEATHER_ATTRIBUTE RAIN ] IN NORTH CAROLINA ]", "decoupled_normalized_seqlogical": "[IN:UNSUPPORTED_WEATHER [SL:WEATHER_ATTRIBUTE RAIN ] ]"}, "prediction": "", "function_calls": [{"name": "unsupported_weather", "arguments": {"weather_attribute": "longest time without rain", "location": "North Carolina"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00001473.wav", "split": "test", "intent": "[IN:GET_WEATHER what 's the weather like in [SL:LOCATION alabama ] ]", "parameters": {}, "sentence": "what's the weather like in alabama", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT 'S THE WEATHER LIKE IN ALABAMA", "normalized_seqlogical": "[IN:GET_WEATHER WHAT 'S THE WEATHER LIKE IN [SL:LOCATION ALABAMA ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00001473.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "what's the weather like in alabama", "seqlogical": "[IN:GET_WEATHER what 's the weather like in [SL:LOCATION alabama ] ]", "normalized_utterance": "WHAT 'S THE WEATHER LIKE IN ALABAMA", "normalized_seqlogical": "[IN:GET_WEATHER WHAT 'S THE WEATHER LIKE IN [SL:LOCATION ALABAMA ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:LOCATION ALABAMA ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"location": "Alabama"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00001531.wav", "split": "test", "intent": "[IN:GET_WEATHER can i wear [SL:WEATHER_ATTRIBUTE shorts ] ]", "parameters": {}, "sentence": "can i wear shorts", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "CAN I WEAR SHORTS", "normalized_seqlogical": "[IN:GET_WEATHER CAN I WEAR [SL:WEATHER_ATTRIBUTE SHORTS ] ]", "raw_data": {"file_id": "test_1/weather_test/00001531.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "can i wear shorts", "seqlogical": "[IN:GET_WEATHER can i wear [SL:WEATHER_ATTRIBUTE shorts ] ]", "normalized_utterance": "CAN I WEAR SHORTS", "normalized_seqlogical": "[IN:GET_WEATHER CAN I WEAR [SL:WEATHER_ATTRIBUTE SHORTS ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE SHORTS ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "temperature"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00001629.wav", "split": "test", "intent": "[IN:GET_WEATHER will there be [SL:WEATHER_ATTRIBUTE snow ] [SL:DATE_TIME for Christmas ] ]", "parameters": {}, "sentence": "will there be snow for Christmas", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "WILL THERE BE SNOW FOR CHRISTMAS", "normalized_seqlogical": "[IN:GET_WEATHER WILL THERE BE [SL:WEATHER_ATTRIBUTE SNOW ] [SL:DATE_TIME FOR CHRISTMAS ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00001629.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "will there be snow for Christmas", "seqlogical": "[IN:GET_WEATHER will there be [SL:WEATHER_ATTRIBUTE snow ] [SL:DATE_TIME for Christmas ] ]", "normalized_utterance": "WILL THERE BE SNOW FOR CHRISTMAS", "normalized_seqlogical": "[IN:GET_WEATHER WILL THERE BE [SL:WEATHER_ATTRIBUTE SNOW ] [SL:DATE_TIME FOR CHRISTMAS ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE SNOW ] [SL:DATE_TIME FOR CHRISTMAS ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "snow", "date_time": "Christmas"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00004583.wav", "split": "test", "intent": "[IN:GET_WEATHER Tell me please the weather in [SL:LOCATION Italy ] ? ]", "parameters": {}, "sentence": "Tell  me please the weather in Italy?", "domain": "weather", "gender": "Male", "native": "No", "normalized_utterance": "TELL ME PLEASE THE WEATHER IN ITALY", "normalized_seqlogical": "[IN:GET_WEATHER TELL ME PLEASE THE WEATHER IN [SL:LOCATION ITALY ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00004583.wav", "domain": "weather", "gender": "Male", "native": "No", "utterance": "Tell  me please the weather in Italy?", "seqlogical": "[IN:GET_WEATHER Tell me please the weather in [SL:LOCATION Italy ] ? ]", "normalized_utterance": "TELL ME PLEASE THE WEATHER IN ITALY", "normalized_seqlogical": "[IN:GET_WEATHER TELL ME PLEASE THE WEATHER IN [SL:LOCATION ITALY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:LOCATION ITALY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"location": "Italy"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00001487.wav", "split": "test", "intent": "[IN:GET_WEATHER is it going to [SL:WEATHER_ATTRIBUTE snow ] [SL:DATE_TIME today ] ]", "parameters": {}, "sentence": "is it going to snow today", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "IS IT GOING TO SNOW TODAY", "normalized_seqlogical": "[IN:GET_WEATHER IS IT GOING TO [SL:WEATHER_ATTRIBUTE SNOW ] [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_1/weather_test/00001487.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "is it going to snow today", "seqlogical": "[IN:GET_WEATHER is it going to [SL:WEATHER_ATTRIBUTE snow ] [SL:DATE_TIME today ] ]", "normalized_utterance": "IS IT GOING TO SNOW TODAY", "normalized_seqlogical": "[IN:GET_WEATHER IS IT GOING TO [SL:WEATHER_ATTRIBUTE SNOW ] [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE SNOW ] [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "snow"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00001431.wav", "split": "test", "intent": "[IN:GET_WEATHER What will the high temperature be [SL:DATE_TIME today ] ? ]", "parameters": {}, "sentence": "What will the high temperature be today?", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT WILL THE HIGH TEMPERATURE BE TODAY", "normalized_seqlogical": "[IN:GET_WEATHER WHAT WILL THE HIGH TEMPERATURE BE [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_1/weather_test/00001431.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "What will the high temperature be today?", "seqlogical": "[IN:GET_WEATHER What will the high temperature be [SL:DATE_TIME today ] ? ]", "normalized_utterance": "WHAT WILL THE HIGH TEMPERATURE BE TODAY", "normalized_seqlogical": "[IN:GET_WEATHER WHAT WILL THE HIGH TEMPERATURE BE [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "high temperature"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00001393.wav", "split": "test", "intent": "[IN:GET_WEATHER Please tell me the [SL:DATE_TIME weekend ] forecast . ]", "parameters": {}, "sentence": "Please tell me the weekend forecast.", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "PLEASE TELL ME THE WEEKEND FORECAST", "normalized_seqlogical": "[IN:GET_WEATHER PLEASE TELL ME THE [SL:DATE_TIME WEEKEND ] FORECAST ]", "raw_data": {"file_id": "test_1/weather_test/00001393.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "Please tell me the weekend forecast.", "seqlogical": "[IN:GET_WEATHER Please tell me the [SL:DATE_TIME weekend ] forecast . ]", "normalized_utterance": "PLEASE TELL ME THE WEEKEND FORECAST", "normalized_seqlogical": "[IN:GET_WEATHER PLEASE TELL ME THE [SL:DATE_TIME WEEKEND ] FORECAST ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:DATE_TIME WEEKEND ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"date_time": "this weekend"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00002172.wav", "split": "test", "intent": "[IN:GET_WEATHER What is the forecast [SL:DATE_TIME next week ] in [SL:LOCATION Arizona ] ? ]", "parameters": {}, "sentence": "What is the forecast next week in Arizona?", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT IS THE FORECAST NEXT WEEK IN ARIZONA", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE FORECAST [SL:DATE_TIME NEXT WEEK ] IN [SL:LOCATION ARIZONA ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00002172.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "What is the forecast next week in Arizona?", "seqlogical": "[IN:GET_WEATHER What is the forecast [SL:DATE_TIME next week ] in [SL:LOCATION Arizona ] ? ]", "normalized_utterance": "WHAT IS THE FORECAST NEXT WEEK IN ARIZONA", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE FORECAST [SL:DATE_TIME NEXT WEEK ] IN [SL:LOCATION ARIZONA ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:DATE_TIME NEXT WEEK ] [SL:LOCATION ARIZONA ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"location": "Arizona", "date_time": "next week"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00001085.wav", "split": "test", "intent": "[IN:GET_WEATHER Tell me the chances of a [SL:WEATHER_ATTRIBUTE hurricane ] . ]", "parameters": {}, "sentence": "Tell me the chances of a hurricane.", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "TELL ME THE CHANCES OF A HURRICANE", "normalized_seqlogical": "[IN:GET_WEATHER TELL ME THE CHANCES OF A [SL:WEATHER_ATTRIBUTE HURRICANE ] ]", "raw_data": {"file_id": "test_1/weather_test/00001085.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "Tell me the chances of a hurricane.", "seqlogical": "[IN:GET_WEATHER Tell me the chances of a [SL:WEATHER_ATTRIBUTE hurricane ] . ]", "normalized_utterance": "TELL ME THE CHANCES OF A HURRICANE", "normalized_seqlogical": "[IN:GET_WEATHER TELL ME THE CHANCES OF A [SL:WEATHER_ATTRIBUTE HURRICANE ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE HURRICANE ] ]"}, "prediction": "", "function_calls": [{"name": "unsupported_weather", "arguments": {"weather_attribute": "hurricane"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00004163.wav", "split": "test", "intent": "[IN:GET_WEATHER How [SL:WEATHER_ATTRIBUTE cold ] is it [SL:DATE_TIME next week ] [SL:LOCATION beijing ] in [SL:WEATHER_TEMPERATURE_UNIT Fahrenheit ] ]", "parameters": {}, "sentence": "How cold is it next week beijing in Fahrenheit", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "HOW COLD IS IT NEXT WEEK BEIJING IN FAHRENHEIT", "normalized_seqlogical": "[IN:GET_WEATHER HOW [SL:WEATHER_ATTRIBUTE COLD ] IS IT [SL:DATE_TIME NEXT WEEK ] [SL:LOCATION BEIJING ] IN [SL:WEATHER_TEMPERATURE_UNIT FAHRENHEIT ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00004163.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "How cold is it next week beijing in Fahrenheit", "seqlogical": "[IN:GET_WEATHER How [SL:WEATHER_ATTRIBUTE cold ] is it [SL:DATE_TIME next week ] [SL:LOCATION beijing ] in [SL:WEATHER_TEMPERATURE_UNIT Fahrenheit ] ]", "normalized_utterance": "HOW COLD IS IT NEXT WEEK BEIJING IN FAHRENHEIT", "normalized_seqlogical": "[IN:GET_WEATHER HOW [SL:WEATHER_ATTRIBUTE COLD ] IS IT [SL:DATE_TIME NEXT WEEK ] [SL:LOCATION BEIJING ] IN [SL:WEATHER_TEMPERATURE_UNIT FAHRENHEIT ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE COLD ] [SL:DATE_TIME NEXT WEEK ] [SL:LOCATION BEIJING ] [SL:WEATHER_TEMPERATURE_UNIT FAHRENHEIT ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"location": "Beijing", "date_time": "next week", "weather_temperature_unit": "Fahrenheit", "weather_attribute": "temperature"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00002682.wav", "split": "test", "intent": "[IN:GET_WEATHER Do I need an [SL:WEATHER_ATTRIBUTE umbrella ] ? ]", "parameters": {}, "sentence": "Do I need an umbrella?", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "DO I NEED AN UMBRELLA", "normalized_seqlogical": "[IN:GET_WEATHER DO I NEED AN [SL:WEATHER_ATTRIBUTE UMBRELLA ] ]", "raw_data": {"file_id": "test_1/weather_test/00002682.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "Do I need an umbrella?", "seqlogical": "[IN:GET_WEATHER Do I need an [SL:WEATHER_ATTRIBUTE umbrella ] ? ]", "normalized_utterance": "DO I NEED AN UMBRELLA", "normalized_seqlogical": "[IN:GET_WEATHER DO I NEED AN [SL:WEATHER_ATTRIBUTE UMBRELLA ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE UMBRELLA ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "rainfall"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00002180.wav", "split": "test", "intent": "[IN:GET_WEATHER when is it supposed to be [SL:WEATHER_ATTRIBUTE warmest ] [SL:DATE_TIME today ] ? ]", "parameters": {}, "sentence": "when is it supposed to be warmest today?", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "WHEN IS IT SUPPOSED TO BE WARMEST TODAY", "normalized_seqlogical": "[IN:GET_WEATHER WHEN IS IT SUPPOSED TO BE [SL:WEATHER_ATTRIBUTE WARMEST ] [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00002180.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "when is it supposed to be warmest today?", "seqlogical": "[IN:GET_WEATHER when is it supposed to be [SL:WEATHER_ATTRIBUTE warmest ] [SL:DATE_TIME today ] ? ]", "normalized_utterance": "WHEN IS IT SUPPOSED TO BE WARMEST TODAY", "normalized_seqlogical": "[IN:GET_WEATHER WHEN IS IT SUPPOSED TO BE [SL:WEATHER_ATTRIBUTE WARMEST ] [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE WARMEST ] [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "high temperature"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00003643.wav", "split": "test", "intent": "[IN:GET_SUNRISE what time will the sun come up [SL:DATE_TIME in the morning ] ]", "parameters": {}, "sentence": "what time will the sun come up in the morning", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT TIME WILL THE SUN COME UP IN THE MORNING", "normalized_seqlogical": "[IN:GET_SUNRISE WHAT TIME WILL THE SUN COME UP [SL:DATE_TIME IN THE MORNING ] ]", "raw_data": {"file_id": "test_1/weather_test/00003643.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "what time will the sun come up in the morning", "seqlogical": "[IN:GET_SUNRISE what time will the sun come up [SL:DATE_TIME in the morning ] ]", "normalized_utterance": "WHAT TIME WILL THE SUN COME UP IN THE MORNING", "normalized_seqlogical": "[IN:GET_SUNRISE WHAT TIME WILL THE SUN COME UP [SL:DATE_TIME IN THE MORNING ] ]", "decoupled_normalized_seqlogical": "[IN:GET_SUNRISE [SL:DATE_TIME IN THE MORNING ] ]"}, "prediction": "", "function_calls": [{"name": "get_sunrise", "arguments": {"date_time": "tomorrow"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00004426.wav", "split": "test", "intent": "[IN:GET_WEATHER Is it likely to [SL:WEATHER_ATTRIBUTE rain ] [SL:DATE_TIME tomorrow morning ] ? ]", "parameters": {}, "sentence": "Is it likely to rain tomorrow morning?", "domain": "weather", "gender": "Male", "native": "No", "normalized_utterance": "IS IT LIKELY TO RAIN TOMORROW MORNING", "normalized_seqlogical": "[IN:GET_WEATHER IS IT LIKELY TO [SL:WEATHER_ATTRIBUTE RAIN ] [SL:DATE_TIME TOMORROW MORNING ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00004426.wav", "domain": "weather", "gender": "Male", "native": "No", "utterance": "Is it likely to rain tomorrow morning?", "seqlogical": "[IN:GET_WEATHER Is it likely to [SL:WEATHER_ATTRIBUTE rain ] [SL:DATE_TIME tomorrow morning ] ? ]", "normalized_utterance": "IS IT LIKELY TO RAIN TOMORROW MORNING", "normalized_seqlogical": "[IN:GET_WEATHER IS IT LIKELY TO [SL:WEATHER_ATTRIBUTE RAIN ] [SL:DATE_TIME TOMORROW MORNING ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE RAIN ] [SL:DATE_TIME TOMORROW MORNING ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "rainfall", "date_time": "tomorrow morning"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00000509.wav", "split": "test", "intent": "[IN:GET_WEATHER What is the [SL:DATE_TIME 10 day ] outlook ? ]", "parameters": {}, "sentence": "What is the 10 day outlook?", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT IS THE TEN DAY OUTLOOK", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE [SL:DATE_TIME TEN DAY ] OUTLOOK ]", "raw_data": {"file_id": "test_1/weather_test/00000509.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "What is the 10 day outlook?", "seqlogical": "[IN:GET_WEATHER What is the [SL:DATE_TIME 10 day ] outlook ? ]", "normalized_utterance": "WHAT IS THE TEN DAY OUTLOOK", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE [SL:DATE_TIME TEN DAY ] OUTLOOK ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:DATE_TIME TEN DAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"date_time": "next 10 days"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00001237.wav", "split": "test", "intent": "[IN:GET_WEATHER Will I need a [SL:WEATHER_ATTRIBUTE hat ] [SL:DATE_TIME today ] ? ]", "parameters": {}, "sentence": "Will I need a hat today?", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "WILL I NEED A HAT TODAY", "normalized_seqlogical": "[IN:GET_WEATHER WILL I NEED A [SL:WEATHER_ATTRIBUTE HAT ] [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_1/weather_test/00001237.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "Will I need a hat today?", "seqlogical": "[IN:GET_WEATHER Will I need a [SL:WEATHER_ATTRIBUTE hat ] [SL:DATE_TIME today ] ? ]", "normalized_utterance": "WILL I NEED A HAT TODAY", "normalized_seqlogical": "[IN:GET_WEATHER WILL I NEED A [SL:WEATHER_ATTRIBUTE HAT ] [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE HAT ] [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "condition"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00003928.wav", "split": "test", "intent": "[IN:UNSUPPORTED_WEATHER can you show some places that are [SL:WEATHER_ATTRIBUTE hottest ] right now ]", "parameters": {}, "sentence": "can you show some places that are hottest right now", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "CAN YOU SHOW SOME PLACES THAT ARE HOTTEST RIGHT NOW", "normalized_seqlogical": "[IN:UNSUPPORTED_WEATHER CAN YOU SHOW SOME PLACES THAT ARE [SL:WEATHER_ATTRIBUTE HOTTEST ] RIGHT NOW ]", "raw_data": {"file_id": "test_0/weather_test_0/00003928.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "can you show some places that are hottest right now", "seqlogical": "[IN:UNSUPPORTED_WEATHER can you show some places that are [SL:WEATHER_ATTRIBUTE hottest ] right now ]", "normalized_utterance": "CAN YOU SHOW SOME PLACES THAT ARE HOTTEST RIGHT NOW", "normalized_seqlogical": "[IN:UNSUPPORTED_WEATHER CAN YOU SHOW SOME PLACES THAT ARE [SL:WEATHER_ATTRIBUTE HOTTEST ] RIGHT NOW ]", "decoupled_normalized_seqlogical": "[IN:UNSUPPORTED_WEATHER [SL:WEATHER_ATTRIBUTE HOTTEST ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "hottest"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00004232.wav", "split": "test", "intent": "[IN:GET_WEATHER Is it going to be [SL:WEATHER_ATTRIBUTE below ] [SL:WEATHER_ATTRIBUTE 40 ] [SL:WEATHER_TEMPERATURE_UNIT c ] [SL:LOCATION san francisco ] [SL:DATE_TIME tomorrow morning ] ]", "parameters": {}, "sentence": "Is it going to be below 40 c san francisco tomorrow morning", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "IS IT GOING TO BE BELOW FORTY CELSIUS SAN FRANCISCO TOMORROW MORNING", "normalized_seqlogical": "[IN:GET_WEATHER IS IT GOING TO BE [SL:WEATHER_ATTRIBUTE BELOW ] [SL:WEATHER_ATTRIBUTE FORTY ] [SL:WEATHER_TEMPERATURE_UNIT CELSIUS ] [SL:LOCATION SAN FRANCISCO ] [SL:DATE_TIME TOMORROW MORNING ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00004232.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "Is it going to be below 40 c san francisco tomorrow morning", "seqlogical": "[IN:GET_WEATHER Is it going to be [SL:WEATHER_ATTRIBUTE below ] [SL:WEATHER_ATTRIBUTE 40 ] [SL:WEATHER_TEMPERATURE_UNIT c ] [SL:LOCATION san francisco ] [SL:DATE_TIME tomorrow morning ] ]", "normalized_utterance": "IS IT GOING TO BE BELOW FORTY CELSIUS SAN FRANCISCO TOMORROW MORNING", "normalized_seqlogical": "[IN:GET_WEATHER IS IT GOING TO BE [SL:WEATHER_ATTRIBUTE BELOW ] [SL:WEATHER_ATTRIBUTE FORTY ] [SL:WEATHER_TEMPERATURE_UNIT CELSIUS ] [SL:LOCATION SAN FRANCISCO ] [SL:DATE_TIME TOMORROW MORNING ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE BELOW ] [SL:WEATHER_ATTRIBUTE FORTY ] [SL:WEATHER_TEMPERATURE_UNIT CELSIUS ] [SL:LOCATION SAN FRANCISCO ] [SL:DATE_TIME TOMORROW MORNING ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_temperature_unit": "Celsius", "weather_attribute": "temperature", "location": "San Francisco", "date_time": "tomorrow morning"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00002093.wav", "split": "test", "intent": "[IN:GET_WEATHER Will it [SL:WEATHER_ATTRIBUTE snow ] [SL:DATE_TIME today ] ? ]", "parameters": {}, "sentence": "Will it snow today?", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "WILL IT SNOW TODAY", "normalized_seqlogical": "[IN:GET_WEATHER WILL IT [SL:WEATHER_ATTRIBUTE SNOW ] [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00002093.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "Will it snow today?", "seqlogical": "[IN:GET_WEATHER Will it [SL:WEATHER_ATTRIBUTE snow ] [SL:DATE_TIME today ] ? ]", "normalized_utterance": "WILL IT SNOW TODAY", "normalized_seqlogical": "[IN:GET_WEATHER WILL IT [SL:WEATHER_ATTRIBUTE SNOW ] [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE SNOW ] [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "snow"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00004955.wav", "split": "test", "intent": "[IN:GET_WEATHER Can you tell me the [SL:WEATHER_ATTRIBUTE temp ] in [SL:WEATHER_TEMPERATURE_UNIT Celsius ] ? ]", "parameters": {}, "sentence": "Can you tell me the temp in Celsius?", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "CAN YOU TELL ME THE TEMP IN CELSIUS", "normalized_seqlogical": "[IN:GET_WEATHER CAN YOU TELL ME THE [SL:WEATHER_ATTRIBUTE TEMP ] IN [SL:WEATHER_TEMPERATURE_UNIT CELSIUS ] ]", "raw_data": {"file_id": "test_1/weather_test/00004955.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "Can you tell me the temp in Celsius?", "seqlogical": "[IN:GET_WEATHER Can you tell me the [SL:WEATHER_ATTRIBUTE temp ] in [SL:WEATHER_TEMPERATURE_UNIT Celsius ] ? ]", "normalized_utterance": "CAN YOU TELL ME THE TEMP IN CELSIUS", "normalized_seqlogical": "[IN:GET_WEATHER CAN YOU TELL ME THE [SL:WEATHER_ATTRIBUTE TEMP ] IN [SL:WEATHER_TEMPERATURE_UNIT CELSIUS ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE TEMP ] [SL:WEATHER_TEMPERATURE_UNIT CELSIUS ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_temperature_unit": "Celsius"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00000905.wav", "split": "test", "intent": "[IN:GET_WEATHER Will it [SL:WEATHER_ATTRIBUTE freeze ] [SL:DATE_TIME tomorrow ] ]", "parameters": {}, "sentence": "Will it freeze tomorrow", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "WILL IT FREEZE TOMORROW", "normalized_seqlogical": "[IN:GET_WEATHER WILL IT [SL:WEATHER_ATTRIBUTE FREEZE ] [SL:DATE_TIME TOMORROW ] ]", "raw_data": {"file_id": "test_1/weather_test/00000905.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "Will it freeze tomorrow", "seqlogical": "[IN:GET_WEATHER Will it [SL:WEATHER_ATTRIBUTE freeze ] [SL:DATE_TIME tomorrow ] ]", "normalized_utterance": "WILL IT FREEZE TOMORROW", "normalized_seqlogical": "[IN:GET_WEATHER WILL IT [SL:WEATHER_ATTRIBUTE FREEZE ] [SL:DATE_TIME TOMORROW ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE FREEZE ] [SL:DATE_TIME TOMORROW ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "freeze", "date_time": "tomorrow"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00001035.wav", "split": "test", "intent": "[IN:GET_WEATHER is it [SL:WEATHER_ATTRIBUTE hot ] in [SL:LOCATION Florida ] ]", "parameters": {}, "sentence": "is it hot in Florida", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "IS IT HOT IN FLORIDA", "normalized_seqlogical": "[IN:GET_WEATHER IS IT [SL:WEATHER_ATTRIBUTE HOT ] IN [SL:LOCATION FLORIDA ] ]", "raw_data": {"file_id": "test_1/weather_test/00001035.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "is it hot in Florida", "seqlogical": "[IN:GET_WEATHER is it [SL:WEATHER_ATTRIBUTE hot ] in [SL:LOCATION Florida ] ]", "normalized_utterance": "IS IT HOT IN FLORIDA", "normalized_seqlogical": "[IN:GET_WEATHER IS IT [SL:WEATHER_ATTRIBUTE HOT ] IN [SL:LOCATION FLORIDA ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE HOT ] [SL:LOCATION FLORIDA ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"location": "Florida", "weather_attribute": "temperature"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00002357.wav", "split": "test", "intent": "[IN:GET_WEATHER What is the temperature forecast between [SL:DATE_TIME 2 pm to 7 pm ] ? ]", "parameters": {}, "sentence": "What is the temperature forecast between 2 pm to 7 pm?", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT IS THE TEMPERATURE FORECAST BETWEEN TWO PM TO SEVEN PM", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE TEMPERATURE FORECAST BETWEEN [SL:DATE_TIME TWO PM TO SEVEN PM ] ]", "raw_data": {"file_id": "test_1/weather_test/00002357.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "What is the temperature forecast between 2 pm to 7 pm?", "seqlogical": "[IN:GET_WEATHER What is the temperature forecast between [SL:DATE_TIME 2 pm to 7 pm ] ? ]", "normalized_utterance": "WHAT IS THE TEMPERATURE FORECAST BETWEEN TWO PM TO SEVEN PM", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE TEMPERATURE FORECAST BETWEEN [SL:DATE_TIME TWO PM TO SEVEN PM ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:DATE_TIME TWO PM TO SEVEN PM ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"date_time": "today", "weather_attribute": "temperature"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00001428.wav", "split": "test", "intent": "[IN:GET_WEATHER Can i leave my [SL:WEATHER_ATTRIBUTE umbrella ] at [SL:LOCATION home ] ]", "parameters": {}, "sentence": "Can i leave my umbrella at home", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "CAN I LEAVE MY UMBRELLA AT HOME", "normalized_seqlogical": "[IN:GET_WEATHER CAN I LEAVE MY [SL:WEATHER_ATTRIBUTE UMBRELLA ] AT [SL:LOCATION HOME ] ]", "raw_data": {"file_id": "test_1/weather_test/00001428.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "Can i leave my umbrella at home", "seqlogical": "[IN:GET_WEATHER Can i leave my [SL:WEATHER_ATTRIBUTE umbrella ] at [SL:LOCATION home ] ]", "normalized_utterance": "CAN I LEAVE MY UMBRELLA AT HOME", "normalized_seqlogical": "[IN:GET_WEATHER CAN I LEAVE MY [SL:WEATHER_ATTRIBUTE UMBRELLA ] AT [SL:LOCATION HOME ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE UMBRELLA ] [SL:LOCATION HOME ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "rain", "location": "current location"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00003066.wav", "split": "test", "intent": "[IN:GET_WEATHER Is it going to be [SL:WEATHER_ATTRIBUTE cloudy ] [SL:DATE_TIME today ] ? ]", "parameters": {}, "sentence": "Is it going to be cloudy today?", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "IS IT GOING TO BE CLOUDY TODAY", "normalized_seqlogical": "[IN:GET_WEATHER IS IT GOING TO BE [SL:WEATHER_ATTRIBUTE CLOUDY ] [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00003066.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "Is it going to be cloudy today?", "seqlogical": "[IN:GET_WEATHER Is it going to be [SL:WEATHER_ATTRIBUTE cloudy ] [SL:DATE_TIME today ] ? ]", "normalized_utterance": "IS IT GOING TO BE CLOUDY TODAY", "normalized_seqlogical": "[IN:GET_WEATHER IS IT GOING TO BE [SL:WEATHER_ATTRIBUTE CLOUDY ] [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE CLOUDY ] [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "cloudy"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00002726.wav", "split": "test", "intent": "[IN:GET_WEATHER What is the [SL:WEATHER_ATTRIBUTE humidity ] [SL:DATE_TIME for the day ] ]", "parameters": {}, "sentence": "What is the humidity for the day", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT IS THE HUMIDITY FOR THE DAY", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE [SL:WEATHER_ATTRIBUTE HUMIDITY ] [SL:DATE_TIME FOR THE DAY ] ]", "raw_data": {"file_id": "test_1/weather_test/00002726.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "What is the humidity for the day", "seqlogical": "[IN:GET_WEATHER What is the [SL:WEATHER_ATTRIBUTE humidity ] [SL:DATE_TIME for the day ] ]", "normalized_utterance": "WHAT IS THE HUMIDITY FOR THE DAY", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE [SL:WEATHER_ATTRIBUTE HUMIDITY ] [SL:DATE_TIME FOR THE DAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE HUMIDITY ] [SL:DATE_TIME FOR THE DAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "humidity"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00001409.wav", "split": "test", "intent": "[IN:GET_WEATHER Do I need a [SL:WEATHER_ATTRIBUTE coat ] ? ]", "parameters": {}, "sentence": "Do I need a coat?", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "DO I NEED A COAT", "normalized_seqlogical": "[IN:GET_WEATHER DO I NEED A [SL:WEATHER_ATTRIBUTE COAT ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00001409.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "Do I need a coat?", "seqlogical": "[IN:GET_WEATHER Do I need a [SL:WEATHER_ATTRIBUTE coat ] ? ]", "normalized_utterance": "DO I NEED A COAT", "normalized_seqlogical": "[IN:GET_WEATHER DO I NEED A [SL:WEATHER_ATTRIBUTE COAT ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE COAT ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "temperature"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00003212.wav", "split": "test", "intent": "[IN:GET_WEATHER What is the highest temperature in [SL:LOCATION Las Vegas ] ]", "parameters": {}, "sentence": "What is the highest temperature in Las Vegas", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT IS THE HIGHEST TEMPERATURE IN LAS VEGAS", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE HIGHEST TEMPERATURE IN [SL:LOCATION LAS VEGAS ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00003212.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "What is the highest temperature in Las Vegas", "seqlogical": "[IN:GET_WEATHER What is the highest temperature in [SL:LOCATION Las Vegas ] ]", "normalized_utterance": "WHAT IS THE HIGHEST TEMPERATURE IN LAS VEGAS", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE HIGHEST TEMPERATURE IN [SL:LOCATION LAS VEGAS ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:LOCATION LAS VEGAS ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"location": "Las Vegas", "weather_attribute": "highest temperature"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00002670.wav", "split": "test", "intent": "[IN:GET_WEATHER Is it going to [SL:WEATHER_ATTRIBUTE rain ] [SL:DATE_TIME on Monday ] ? ]", "parameters": {}, "sentence": "Is it going to rain on Monday?", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "IS IT GOING TO RAIN ON MONDAY", "normalized_seqlogical": "[IN:GET_WEATHER IS IT GOING TO [SL:WEATHER_ATTRIBUTE RAIN ] [SL:DATE_TIME ON MONDAY ] ]", "raw_data": {"file_id": "test_1/weather_test/00002670.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "Is it going to rain on Monday?", "seqlogical": "[IN:GET_WEATHER Is it going to [SL:WEATHER_ATTRIBUTE rain ] [SL:DATE_TIME on Monday ] ? ]", "normalized_utterance": "IS IT GOING TO RAIN ON MONDAY", "normalized_seqlogical": "[IN:GET_WEATHER IS IT GOING TO [SL:WEATHER_ATTRIBUTE RAIN ] [SL:DATE_TIME ON MONDAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE RAIN ] [SL:DATE_TIME ON MONDAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "rainfall", "date_time": "Monday"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00003641.wav", "split": "test", "intent": "[IN:GET_WEATHER is [SL:DATE_TIME today ] 's temperature [SL:WEATHER_ATTRIBUTE higher ] than average ]", "parameters": {}, "sentence": "is today's temperature higher than average", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "IS TODAY 'S TEMPERATURE HIGHER THAN AVERAGE", "normalized_seqlogical": "[IN:GET_WEATHER IS [SL:DATE_TIME TODAY ] 'S TEMPERATURE [SL:WEATHER_ATTRIBUTE HIGHER ] THAN AVERAGE ]", "raw_data": {"file_id": "test_1/weather_test/00003641.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "is today's temperature higher than average", "seqlogical": "[IN:GET_WEATHER is [SL:DATE_TIME today ] 's temperature [SL:WEATHER_ATTRIBUTE higher ] than average ]", "normalized_utterance": "IS TODAY 'S TEMPERATURE HIGHER THAN AVERAGE", "normalized_seqlogical": "[IN:GET_WEATHER IS [SL:DATE_TIME TODAY ] 'S TEMPERATURE [SL:WEATHER_ATTRIBUTE HIGHER ] THAN AVERAGE ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:DATE_TIME TODAY ] [SL:WEATHER_ATTRIBUTE HIGHER ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "average temperature"}}, {"name": "get_weather", "arguments": {"weather_attribute": "current temperature"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00004802.wav", "split": "test", "intent": "[IN:GET_WEATHER In [SL:LOCATION Kent , England ] , what is the weather like ? ]", "parameters": {}, "sentence": "In Kent, England, what is the weather like?", "domain": "weather", "gender": "Male", "native": "Yes", "normalized_utterance": "IN KENT ENGLAND WHAT IS THE WEATHER LIKE", "normalized_seqlogical": "[IN:GET_WEATHER IN [SL:LOCATION KENT ENGLAND ] WHAT IS THE WEATHER LIKE ]", "raw_data": {"file_id": "test_0/weather_test_0/00004802.wav", "domain": "weather", "gender": "Male", "native": "Yes", "utterance": "In Kent, England, what is the weather like?", "seqlogical": "[IN:GET_WEATHER In [SL:LOCATION Kent , England ] , what is the weather like ? ]", "normalized_utterance": "IN KENT ENGLAND WHAT IS THE WEATHER LIKE", "normalized_seqlogical": "[IN:GET_WEATHER IN [SL:LOCATION KENT ENGLAND ] WHAT IS THE WEATHER LIKE ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:LOCATION KENT ENGLAND ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"location": "Kent, England"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00000042.wav", "split": "test", "intent": "[IN:GET_ALARM List what alarms I have set up [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for Sunday ] ] ] ]", "parameters": {}, "sentence": "List what alarms I have set up for Sunday", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "LIST WHAT ALARMS I HAVE SET UP FOR SUNDAY", "normalized_seqlogical": "[IN:GET_ALARM LIST WHAT ALARMS I HAVE SET UP [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR SUNDAY ] ] ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00000042.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "List what alarms I have set up for Sunday", "seqlogical": "[IN:GET_ALARM List what alarms I have set up [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for Sunday ] ] ] ]", "normalized_utterance": "LIST WHAT ALARMS I HAVE SET UP FOR SUNDAY", "normalized_seqlogical": "[IN:GET_ALARM LIST WHAT ALARMS I HAVE SET UP [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR SUNDAY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR SUNDAY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"date_time": "Sunday"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00003139.wav", "split": "test", "intent": "[IN:UPDATE_ALARM Change my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME on Saturday from 3 pm ] ] ] [SL:DATE_TIME to 8 pm ] ]", "parameters": {}, "sentence": "Change my alarm on Saturday from 3pm to 8pm", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "CHANGE MY ALARM ON SATURDAY FROM THREE PM TO EIGHT PM", "normalized_seqlogical": "[IN:UPDATE_ALARM CHANGE MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME ON SATURDAY FROM THREE PM ] ] ] [SL:DATE_TIME TO EIGHT PM ] ]", "raw_data": {"file_id": "test_1/alarm_test/00003139.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "Change my alarm on Saturday from 3pm to 8pm", "seqlogical": "[IN:UPDATE_ALARM Change my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME on Saturday from 3 pm ] ] ] [SL:DATE_TIME to 8 pm ] ]", "normalized_utterance": "CHANGE MY ALARM ON SATURDAY FROM THREE PM TO EIGHT PM", "normalized_seqlogical": "[IN:UPDATE_ALARM CHANGE MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME ON SATURDAY FROM THREE PM ] ] ] [SL:DATE_TIME TO EIGHT PM ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME ON SATURDAY FROM THREE PM ] ] ] [SL:DATE_TIME TO EIGHT PM ] ]"}, "prediction": "", "function_calls": [{"name": "update_alarm", "arguments": {"alarm_name": "Church", "date_time": "Saturday 3pm"}}, {"name": "update_alarm", "arguments": {"alarm_name": "Church", "date_time": "Saturday 8pm"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00001745.wav", "split": "test", "intent": "[IN:DELETE_ALARM Cancel [SL:AMOUNT all ] alarms I made [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME today ] ] ] ]", "parameters": {}, "sentence": "Cancel all alarms I made today", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "CANCEL ALL ALARMS I MADE TODAY", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL [SL:AMOUNT ALL ] ALARMS I MADE [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TODAY ] ] ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00001745.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "Cancel all alarms I made today", "seqlogical": "[IN:DELETE_ALARM Cancel [SL:AMOUNT all ] alarms I made [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME today ] ] ] ]", "normalized_utterance": "CANCEL ALL ALARMS I MADE TODAY", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL [SL:AMOUNT ALL ] ALARMS I MADE [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TODAY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:AMOUNT ALL ] [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TODAY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "today"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00003052.wav", "split": "test", "intent": "[IN:GET_ALARM What alarms are set [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for Friday ] ] ] ? ]", "parameters": {}, "sentence": "What alarms are set for Friday?", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT ALARMS ARE SET FOR FRIDAY", "normalized_seqlogical": "[IN:GET_ALARM WHAT ALARMS ARE SET [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR FRIDAY ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00003052.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "What alarms are set for Friday?", "seqlogical": "[IN:GET_ALARM What alarms are set [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for Friday ] ] ] ? ]", "normalized_utterance": "WHAT ALARMS ARE SET FOR FRIDAY", "normalized_seqlogical": "[IN:GET_ALARM WHAT ALARMS ARE SET [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR FRIDAY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR FRIDAY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"date_time": "Friday"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00001570.wav", "split": "test", "intent": "[IN:DELETE_ALARM Delete my [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 5 am ] ] ] alarm ]", "parameters": {}, "sentence": "Delete my 5 am alarm", "domain": "alarm", "gender": "Male", "native": "No", "normalized_utterance": "DELETE MY FIVE AM ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE MY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FIVE AM ] ] ] ALARM ]", "raw_data": {"file_id": "test_0/alarm_test_0/00001570.wav", "domain": "alarm", "gender": "Male", "native": "No", "utterance": "Delete my 5 am alarm", "seqlogical": "[IN:DELETE_ALARM Delete my [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 5 am ] ] ] alarm ]", "normalized_utterance": "DELETE MY FIVE AM ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE MY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FIVE AM ] ] ] ALARM ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FIVE AM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "5am"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00001567.wav", "split": "test", "intent": "[IN:DELETE_ALARM Delete alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME tomorrow morning ] ] ] ]", "parameters": {}, "sentence": "Delete alarm tomorrow morning", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "DELETE ALARM TOMORROW MORNING", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TOMORROW MORNING ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00001567.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "Delete alarm tomorrow morning", "seqlogical": "[IN:DELETE_ALARM Delete alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME tomorrow morning ] ] ] ]", "normalized_utterance": "DELETE ALARM TOMORROW MORNING", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TOMORROW MORNING ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TOMORROW MORNING ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "tomorrow morning"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00000486.wav", "split": "test", "intent": "[IN:GET_ALARM show alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for this evening ] ] ] ]", "parameters": {}, "sentence": "show alarms for this evening", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "SHOW ALARMS FOR THIS EVENING", "normalized_seqlogical": "[IN:GET_ALARM SHOW ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR THIS EVENING ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00000486.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "show alarms for this evening", "seqlogical": "[IN:GET_ALARM show alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for this evening ] ] ] ]", "normalized_utterance": "SHOW ALARMS FOR THIS EVENING", "normalized_seqlogical": "[IN:GET_ALARM SHOW ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR THIS EVENING ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR THIS EVENING ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"date_time": "this evening"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00002847.wav", "split": "test", "intent": "[IN:DELETE_ALARM Remove my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tomorrow at 6 am ] ] ] ]", "parameters": {}, "sentence": "Remove my alarm for tomorrow at 6am", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "REMOVE MY ALARM FOR TOMORROW AT SIX AM", "normalized_seqlogical": "[IN:DELETE_ALARM REMOVE MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW AT SIX AM ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00002847.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "Remove my alarm for tomorrow at 6am", "seqlogical": "[IN:DELETE_ALARM Remove my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tomorrow at 6 am ] ] ] ]", "normalized_utterance": "REMOVE MY ALARM FOR TOMORROW AT SIX AM", "normalized_seqlogical": "[IN:DELETE_ALARM REMOVE MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW AT SIX AM ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW AT SIX AM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "tomorrow at 6am"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00000188.wav", "split": "test", "intent": "[IN:DELETE_ALARM Delete [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 10 pm ] ] ] alarm ]", "parameters": {}, "sentence": "Delete 10pm alarm", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "DELETE TEN PM ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TEN PM ] ] ] ALARM ]", "raw_data": {"file_id": "test_1/alarm_test/00000188.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "Delete 10pm alarm", "seqlogical": "[IN:DELETE_ALARM Delete [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 10 pm ] ] ] alarm ]", "normalized_utterance": "DELETE TEN PM ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TEN PM ] ] ] ALARM ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TEN PM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "10pm"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00006531.wav", "split": "test", "intent": "[IN:DELETE_ALARM please delete my [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 2 : 00 am ] ] ] alarm ]", "parameters": {}, "sentence": "please delete my 2:00 am alarm", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "PLEASE DELETE MY TWO AM ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM PLEASE DELETE MY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TWO AM ] ] ] ALARM ]", "raw_data": {"file_id": "test_0/alarm_test_0/00006531.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "please delete my 2:00 am alarm", "seqlogical": "[IN:DELETE_ALARM please delete my [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 2 : 00 am ] ] ] alarm ]", "normalized_utterance": "PLEASE DELETE MY TWO AM ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM PLEASE DELETE MY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TWO AM ] ] ] ALARM ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TWO AM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "Delhi"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00003083.wav", "split": "test", "intent": "[IN:UPDATE_ALARM Change the alarm I set [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tomorrow at 8 am ] ] ] [SL:DATE_TIME to 10 am ] . ]", "parameters": {}, "sentence": "Change the alarm I set for tomorrow at 8am to 10am.", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "CHANGE THE ALARM I SET FOR TOMORROW AT EIGHT AM TO TEN AM", "normalized_seqlogical": "[IN:UPDATE_ALARM CHANGE THE ALARM I SET [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW AT EIGHT AM ] ] ] [SL:DATE_TIME TO TEN AM ] ]", "raw_data": {"file_id": "test_1/alarm_test/00003083.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "Change the alarm I set for tomorrow at 8am to 10am.", "seqlogical": "[IN:UPDATE_ALARM Change the alarm I set [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tomorrow at 8 am ] ] ] [SL:DATE_TIME to 10 am ] . ]", "normalized_utterance": "CHANGE THE ALARM I SET FOR TOMORROW AT EIGHT AM TO TEN AM", "normalized_seqlogical": "[IN:UPDATE_ALARM CHANGE THE ALARM I SET [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW AT EIGHT AM ] ] ] [SL:DATE_TIME TO TEN AM ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW AT EIGHT AM ] ] ] [SL:DATE_TIME TO TEN AM ] ]"}, "prediction": "", "function_calls": [{"name": "update_alarm", "arguments": {"alarm_name": "alarm", "date_time": "tomorrow at 10am"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00003054.wav", "split": "test", "intent": "[IN:GET_ALARM Show me [SL:AMOUNT all ] my alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for this week ] ] ] ]", "parameters": {}, "sentence": "Show me all my alarms for this week", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "SHOW ME ALL MY ALARMS FOR THIS WEEK", "normalized_seqlogical": "[IN:GET_ALARM SHOW ME [SL:AMOUNT ALL ] MY ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR THIS WEEK ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00003054.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "Show me all my alarms for this week", "seqlogical": "[IN:GET_ALARM Show me [SL:AMOUNT all ] my alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for this week ] ] ] ]", "normalized_utterance": "SHOW ME ALL MY ALARMS FOR THIS WEEK", "normalized_seqlogical": "[IN:GET_ALARM SHOW ME [SL:AMOUNT ALL ] MY ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR THIS WEEK ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:AMOUNT ALL ] [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR THIS WEEK ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"date_time_recurring": "this week"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00000999.wav", "split": "test", "intent": "[IN:SILENCE_ALARM turn off my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tomorrow morning ] ] ] ]", "parameters": {}, "sentence": "turn off my alarm for tomorrow morning", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "TURN OFF MY ALARM FOR TOMORROW MORNING", "normalized_seqlogical": "[IN:SILENCE_ALARM TURN OFF MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW MORNING ] ] ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00000999.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "turn off my alarm for tomorrow morning", "seqlogical": "[IN:SILENCE_ALARM turn off my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tomorrow morning ] ] ] ]", "normalized_utterance": "TURN OFF MY ALARM FOR TOMORROW MORNING", "normalized_seqlogical": "[IN:SILENCE_ALARM TURN OFF MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW MORNING ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:SILENCE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW MORNING ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "tomorrow morning"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00006655.wav", "split": "test", "intent": "[IN:GET_ALARM What are my alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tomorrow ] ] ] ? ]", "parameters": {}, "sentence": "What are my alarms for tomorrow?", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT ARE MY ALARMS FOR TOMORROW", "normalized_seqlogical": "[IN:GET_ALARM WHAT ARE MY ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW ] ] ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00006655.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "What are my alarms for tomorrow?", "seqlogical": "[IN:GET_ALARM What are my alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tomorrow ] ] ] ? ]", "normalized_utterance": "WHAT ARE MY ALARMS FOR TOMORROW", "normalized_seqlogical": "[IN:GET_ALARM WHAT ARE MY ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"date_time": "tomorrow"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00000973.wav", "split": "test", "intent": "[IN:DELETE_ALARM Delete [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 4 pm ] ] ] alarm ]", "parameters": {}, "sentence": "Delete 4pm alarm", "domain": "alarm", "gender": "Male", "native": "No", "normalized_utterance": "DELETE FOUR PM ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOUR PM ] ] ] ALARM ]", "raw_data": {"file_id": "test_0/alarm_test_0/00000973.wav", "domain": "alarm", "gender": "Male", "native": "No", "utterance": "Delete 4pm alarm", "seqlogical": "[IN:DELETE_ALARM Delete [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 4 pm ] ] ] alarm ]", "normalized_utterance": "DELETE FOUR PM ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOUR PM ] ] ] ALARM ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOUR PM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "4 PM"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00002273.wav", "split": "test", "intent": "[IN:DELETE_ALARM Delete any [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME weekend ] ] ] alarms ]", "parameters": {}, "sentence": "Delete any weekend alarms", "domain": "alarm", "gender": "Male", "native": "No", "normalized_utterance": "DELETE ANY WEEKEND ALARMS", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE ANY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME WEEKEND ] ] ] ALARMS ]", "raw_data": {"file_id": "test_0/alarm_test_0/00002273.wav", "domain": "alarm", "gender": "Male", "native": "No", "utterance": "Delete any weekend alarms", "seqlogical": "[IN:DELETE_ALARM Delete any [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME weekend ] ] ] alarms ]", "normalized_utterance": "DELETE ANY WEEKEND ALARMS", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE ANY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME WEEKEND ] ] ] ALARMS ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME WEEKEND ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"period": "weekend"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00001147.wav", "split": "test", "intent": "[IN:DELETE_ALARM Cancel [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME the evening ] ] ] alarm ]", "parameters": {}, "sentence": "Cancel the evening alarm", "domain": "alarm", "gender": "Male", "native": "No", "normalized_utterance": "CANCEL THE EVENING ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME THE EVENING ] ] ] ALARM ]", "raw_data": {"file_id": "test_0/alarm_test_0/00001147.wav", "domain": "alarm", "gender": "Male", "native": "No", "utterance": "Cancel the evening alarm", "seqlogical": "[IN:DELETE_ALARM Cancel [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME the evening ] ] ] alarm ]", "normalized_utterance": "CANCEL THE EVENING ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME THE EVENING ] ] ] ALARM ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME THE EVENING ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"location": "Iveni"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00005966.wav", "split": "test", "intent": "[IN:GET_ALARM please list [SL:AMOUNT all ] the alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for Tuesday ] ] ] ]", "parameters": {}, "sentence": "please list all the alarms for Tuesday", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "PLEASE LIST ALL THE ALARMS FOR TUESDAY", "normalized_seqlogical": "[IN:GET_ALARM PLEASE LIST [SL:AMOUNT ALL ] THE ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TUESDAY ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00005966.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "please list all the alarms for Tuesday", "seqlogical": "[IN:GET_ALARM please list [SL:AMOUNT all ] the alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for Tuesday ] ] ] ]", "normalized_utterance": "PLEASE LIST ALL THE ALARMS FOR TUESDAY", "normalized_seqlogical": "[IN:GET_ALARM PLEASE LIST [SL:AMOUNT ALL ] THE ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TUESDAY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:AMOUNT ALL ] [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TUESDAY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"date_time": "Tuesday"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00006883.wav", "split": "test", "intent": "[IN:DELETE_ALARM delete my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for today ] ] ] ]", "parameters": {}, "sentence": "delete my alarm for today", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "DELETE MY ALARM FOR TODAY", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TODAY ] ] ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00006883.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "delete my alarm for today", "seqlogical": "[IN:DELETE_ALARM delete my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for today ] ] ] ]", "normalized_utterance": "DELETE MY ALARM FOR TODAY", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TODAY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TODAY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "today"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00007040.wav", "split": "test", "intent": "[IN:DELETE_ALARM Delete this alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for 5 PM ] ] ] ]", "parameters": {}, "sentence": "Delete this alarm for 5PM", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "DELETE THIS ALARM FOR FIVE PM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE THIS ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR FIVE PM ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00007040.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "Delete this alarm for 5PM", "seqlogical": "[IN:DELETE_ALARM Delete this alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for 5 PM ] ] ] ]", "normalized_utterance": "DELETE THIS ALARM FOR FIVE PM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE THIS ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR FIVE PM ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR FIVE PM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "today at 5pm"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00003079.wav", "split": "test", "intent": "[IN:UPDATE_ALARM Modify my [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME Tuesday ] ] ] alarm [SL:DATE_TIME to 6 am ] ]", "parameters": {}, "sentence": "Modify my Tuesday alarm to 6 am", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "MODIFY MY TUESDAY ALARM TO SIX AM", "normalized_seqlogical": "[IN:UPDATE_ALARM MODIFY MY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TUESDAY ] ] ] ALARM [SL:DATE_TIME TO SIX AM ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00003079.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "Modify my Tuesday alarm to 6 am", "seqlogical": "[IN:UPDATE_ALARM Modify my [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME Tuesday ] ] ] alarm [SL:DATE_TIME to 6 am ] ]", "normalized_utterance": "MODIFY MY TUESDAY ALARM TO SIX AM", "normalized_seqlogical": "[IN:UPDATE_ALARM MODIFY MY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TUESDAY ] ] ] ALARM [SL:DATE_TIME TO SIX AM ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TUESDAY ] ] ] [SL:DATE_TIME TO SIX AM ] ]"}, "prediction": "", "function_calls": [{"name": "update_alarm", "arguments": {"alarm_name": "Tuesday alarm", "date_time": "6 AM"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00006928.wav", "split": "test", "intent": "[IN:DELETE_ALARM Please delete that [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 2 : 00 am ] ] ] . ]", "parameters": {}, "sentence": "Please delete that 2:00 am.", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "PLEASE DELETE THAT TWO AM", "normalized_seqlogical": "[IN:DELETE_ALARM PLEASE DELETE THAT [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TWO AM ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00006928.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "Please delete that 2:00 am.", "seqlogical": "[IN:DELETE_ALARM Please delete that [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 2 : 00 am ] ] ] . ]", "normalized_utterance": "PLEASE DELETE THAT TWO AM", "normalized_seqlogical": "[IN:DELETE_ALARM PLEASE DELETE THAT [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TWO AM ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TWO AM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "2am"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00002920.wav", "split": "test", "intent": "[IN:DELETE_ALARM Remove [SL:AMOUNT all ] alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for this weekend ] ] ] . ]", "parameters": {}, "sentence": "Remove all alarms for this weekend.", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "REMOVE ALL ALARMS FOR THIS WEEKEND", "normalized_seqlogical": "[IN:DELETE_ALARM REMOVE [SL:AMOUNT ALL ] ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR THIS WEEKEND ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00002920.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "Remove all alarms for this weekend.", "seqlogical": "[IN:DELETE_ALARM Remove [SL:AMOUNT all ] alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for this weekend ] ] ] . ]", "normalized_utterance": "REMOVE ALL ALARMS FOR THIS WEEKEND", "normalized_seqlogical": "[IN:DELETE_ALARM REMOVE [SL:AMOUNT ALL ] ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR THIS WEEKEND ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:AMOUNT ALL ] [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR THIS WEEKEND ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time_recurring": "this week"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00006633.wav", "split": "test", "intent": "[IN:DELETE_ALARM Get rid of [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME today ] ] ] 's alarm . ]", "parameters": {}, "sentence": "Get rid of today's alarm.", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "GET RID OF TODAY 'S ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM GET RID OF [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TODAY ] ] ] 'S ALARM ]", "raw_data": {"file_id": "test_0/alarm_test_0/00006633.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "Get rid of today's alarm.", "seqlogical": "[IN:DELETE_ALARM Get rid of [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME today ] ] ] 's alarm . ]", "normalized_utterance": "GET RID OF TODAY 'S ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM GET RID OF [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TODAY ] ] ] 'S ALARM ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TODAY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "today"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00002176.wav", "split": "test", "intent": "[IN:GET_ALARM What is on [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME January 2 ] ] ] ]", "parameters": {}, "sentence": "What is on January 2", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT IS ON JANUARY TWO", "normalized_seqlogical": "[IN:GET_ALARM WHAT IS ON [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME JANUARY TWO ] ] ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00002176.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "What is on January 2", "seqlogical": "[IN:GET_ALARM What is on [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME January 2 ] ] ] ]", "normalized_utterance": "WHAT IS ON JANUARY TWO", "normalized_seqlogical": "[IN:GET_ALARM WHAT IS ON [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME JANUARY TWO ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME JANUARY TWO ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"date_time": "January 2"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00001562.wav", "split": "test", "intent": "[IN:DELETE_ALARM Cancel my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for 6 am tomorrow ] ] ] . ]", "parameters": {}, "sentence": "Cancel my alarm for 6 am tomorrow.", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "CANCEL MY ALARM FOR SIX AM TOMORROW", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR SIX AM TOMORROW ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00001562.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "Cancel my alarm for 6 am tomorrow.", "seqlogical": "[IN:DELETE_ALARM Cancel my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for 6 am tomorrow ] ] ] . ]", "normalized_utterance": "CANCEL MY ALARM FOR SIX AM TOMORROW", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR SIX AM TOMORROW ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR SIX AM TOMORROW ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "6am"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00003021.wav", "split": "test", "intent": "[IN:GET_ALARM Show [SL:AMOUNT all ] my alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for next day ] ] ] ]", "parameters": {}, "sentence": "Show all my alarms for next day", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "SHOW ALL MY ALARMS FOR NEXT DAY", "normalized_seqlogical": "[IN:GET_ALARM SHOW [SL:AMOUNT ALL ] MY ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR NEXT DAY ] ] ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00003021.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "Show all my alarms for next day", "seqlogical": "[IN:GET_ALARM Show [SL:AMOUNT all ] my alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for next day ] ] ] ]", "normalized_utterance": "SHOW ALL MY ALARMS FOR NEXT DAY", "normalized_seqlogical": "[IN:GET_ALARM SHOW [SL:AMOUNT ALL ] MY ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR NEXT DAY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:AMOUNT ALL ] [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR NEXT DAY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"date_time": "next day"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00001186.wav", "split": "test", "intent": "[IN:DELETE_ALARM Cancel [SL:AMOUNT all ] alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for Saturday ] ] ] ]", "parameters": {}, "sentence": "Cancel all alarms for Saturday", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "CANCEL ALL ALARMS FOR SATURDAY", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL [SL:AMOUNT ALL ] ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR SATURDAY ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00001186.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "Cancel all alarms for Saturday", "seqlogical": "[IN:DELETE_ALARM Cancel [SL:AMOUNT all ] alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for Saturday ] ] ] ]", "normalized_utterance": "CANCEL ALL ALARMS FOR SATURDAY", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL [SL:AMOUNT ALL ] ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR SATURDAY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:AMOUNT ALL ] [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR SATURDAY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "Saturday"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00005952.wav", "split": "test", "intent": "[IN:UPDATE_ALARM Update my [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME late afternoon 5 pm ] ] ] alarm ]", "parameters": {}, "sentence": "Update my late afternoon 5pm alarm", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "UPDATE MY LATE AFTERNOON FIVE PM ALARM", "normalized_seqlogical": "[IN:UPDATE_ALARM UPDATE MY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME LATE AFTERNOON FIVE PM ] ] ] ALARM ]", "raw_data": {"file_id": "test_0/alarm_test_0/00005952.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "Update my late afternoon 5pm alarm", "seqlogical": "[IN:UPDATE_ALARM Update my [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME late afternoon 5 pm ] ] ] alarm ]", "normalized_utterance": "UPDATE MY LATE AFTERNOON FIVE PM ALARM", "normalized_seqlogical": "[IN:UPDATE_ALARM UPDATE MY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME LATE AFTERNOON FIVE PM ] ] ] ALARM ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME LATE AFTERNOON FIVE PM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"date_time": "today"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00006388.wav", "split": "test", "intent": "[IN:DELETE_ALARM Delete the alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for 5 pm ] ] ] ]", "parameters": {}, "sentence": "Delete the alarm for 5 pm", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "DELETE THE ALARM FOR FIVE PM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE THE ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR FIVE PM ] ] ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00006388.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "Delete the alarm for 5 pm", "seqlogical": "[IN:DELETE_ALARM Delete the alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for 5 pm ] ] ] ]", "normalized_utterance": "DELETE THE ALARM FOR FIVE PM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE THE ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR FIVE PM ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR FIVE PM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "today at 5pm"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00006323.wav", "split": "test", "intent": "[IN:GET_ALARM How many alarms have I set [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for this week ] ] ] ? ]", "parameters": {}, "sentence": "How many alarms have I set for this week?", "domain": "alarm", "gender": "Male", "native": "No", "normalized_utterance": "HOW MANY ALARMS HAVE I SET FOR THIS WEEK", "normalized_seqlogical": "[IN:GET_ALARM HOW MANY ALARMS HAVE I SET [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR THIS WEEK ] ] ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00006323.wav", "domain": "alarm", "gender": "Male", "native": "No", "utterance": "How many alarms have I set for this week?", "seqlogical": "[IN:GET_ALARM How many alarms have I set [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for this week ] ] ] ? ]", "normalized_utterance": "HOW MANY ALARMS HAVE I SET FOR THIS WEEK", "normalized_seqlogical": "[IN:GET_ALARM HOW MANY ALARMS HAVE I SET [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR THIS WEEK ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR THIS WEEK ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"date_time_recurring": "this week"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00000857.wav", "split": "test", "intent": "[IN:DELETE_ALARM can you cancel my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for 10 pm ] ] ] ]", "parameters": {}, "sentence": "can you cancel my alarm for 10 pm", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "CAN YOU CANCEL MY ALARM FOR TEN PM", "normalized_seqlogical": "[IN:DELETE_ALARM CAN YOU CANCEL MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TEN PM ] ] ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00000857.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "can you cancel my alarm for 10 pm", "seqlogical": "[IN:DELETE_ALARM can you cancel my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for 10 pm ] ] ] ]", "normalized_utterance": "CAN YOU CANCEL MY ALARM FOR TEN PM", "normalized_seqlogical": "[IN:DELETE_ALARM CAN YOU CANCEL MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TEN PM ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TEN PM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "10 PM"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00006645.wav", "split": "test", "intent": "[IN:DELETE_ALARM you should cancel my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tonight ] ] ] ]", "parameters": {}, "sentence": "you should cancel my  alarm for tonight", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "YOU SHOULD CANCEL MY ALARM FOR TONIGHT", "normalized_seqlogical": "[IN:DELETE_ALARM YOU SHOULD CANCEL MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TONIGHT ] ] ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00006645.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "you should cancel my  alarm for tonight", "seqlogical": "[IN:DELETE_ALARM you should cancel my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tonight ] ] ] ]", "normalized_utterance": "YOU SHOULD CANCEL MY ALARM FOR TONIGHT", "normalized_seqlogical": "[IN:DELETE_ALARM YOU SHOULD CANCEL MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TONIGHT ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TONIGHT ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "tonight"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00006047.wav", "split": "test", "intent": "[IN:DELETE_ALARM Cancel the alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tonight ] ] ] ]", "parameters": {}, "sentence": "Cancel the alarm for tonight", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "CANCEL THE ALARM FOR TONIGHT", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL THE ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TONIGHT ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00006047.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "Cancel the alarm for tonight", "seqlogical": "[IN:DELETE_ALARM Cancel the alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tonight ] ] ] ]", "normalized_utterance": "CANCEL THE ALARM FOR TONIGHT", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL THE ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TONIGHT ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TONIGHT ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "tonight"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00000773.wav", "split": "test", "intent": "[IN:GET_ALARM show my alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tomorrow ] ] ] ]", "parameters": {}, "sentence": "show my alarms for tomorrow", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "SHOW MY ALARMS FOR TOMORROW", "normalized_seqlogical": "[IN:GET_ALARM SHOW MY ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00000773.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "show my alarms for tomorrow", "seqlogical": "[IN:GET_ALARM show my alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tomorrow ] ] ] ]", "normalized_utterance": "SHOW MY ALARMS FOR TOMORROW", "normalized_seqlogical": "[IN:GET_ALARM SHOW MY ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"date_time": "tomorrow"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00006783.wav", "split": "test", "intent": "[IN:GET_ALARM Any alarms set [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for this week ] ] ] ? ]", "parameters": {}, "sentence": "Any alarms set for this week?", "domain": "alarm", "gender": "Male", "native": "Unanswered", "normalized_utterance": "ANY ALARMS SET FOR THIS WEEK", "normalized_seqlogical": "[IN:GET_ALARM ANY ALARMS SET [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR THIS WEEK ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00006783.wav", "domain": "alarm", "gender": "Male", "native": "Unanswered", "utterance": "Any alarms set for this week?", "seqlogical": "[IN:GET_ALARM Any alarms set [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for this week ] ] ] ? ]", "normalized_utterance": "ANY ALARMS SET FOR THIS WEEK", "normalized_seqlogical": "[IN:GET_ALARM ANY ALARMS SET [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR THIS WEEK ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR THIS WEEK ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"date_time_recurring": "this week"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00000003.wav", "split": "test", "intent": "[IN:DELETE_ALARM cancel [SL:AMOUNT all ] alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for thursday ] ] ] ]", "parameters": {}, "sentence": "cancel all alarms for thursday", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "CANCEL ALL ALARMS FOR THURSDAY", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL [SL:AMOUNT ALL ] ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR THURSDAY ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00000003.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "cancel all alarms for thursday", "seqlogical": "[IN:DELETE_ALARM cancel [SL:AMOUNT all ] alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for thursday ] ] ] ]", "normalized_utterance": "CANCEL ALL ALARMS FOR THURSDAY", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL [SL:AMOUNT ALL ] ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR THURSDAY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:AMOUNT ALL ] [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR THURSDAY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "Thursday"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00000463.wav", "split": "test", "intent": "[IN:DELETE_ALARM Cancel [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME tomorrow 's morning ] ] ] alarm ]", "parameters": {}, "sentence": "Cancel tomorrow's morning alarm", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "CANCEL TOMORROW 'S MORNING ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TOMORROW 'S MORNING ] ] ] ALARM ]", "raw_data": {"file_id": "test_1/alarm_test/00000463.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "Cancel tomorrow's morning alarm", "seqlogical": "[IN:DELETE_ALARM Cancel [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME tomorrow 's morning ] ] ] alarm ]", "normalized_utterance": "CANCEL TOMORROW 'S MORNING ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TOMORROW 'S MORNING ] ] ] ALARM ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TOMORROW 'S MORNING ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "tomorrow morning"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00001223.wav", "split": "test", "intent": "[IN:DELETE_ALARM Delete my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for 6 PM ] ] ] . ]", "parameters": {}, "sentence": "Delete my alarm for 6 PM.", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "DELETE MY ALARM FOR SIX PM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR SIX PM ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00001223.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "Delete my alarm for 6 PM.", "seqlogical": "[IN:DELETE_ALARM Delete my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for 6 PM ] ] ] . ]", "normalized_utterance": "DELETE MY ALARM FOR SIX PM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR SIX PM ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR SIX PM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "6 PM"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00006282.wav", "split": "test", "intent": "[IN:GET_ALARM What alarms are scheduled [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for today ] ] ] ? ]", "parameters": {}, "sentence": "What alarms are scheduled for today?", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT ALARMS ARE SCHEDULED FOR TODAY", "normalized_seqlogical": "[IN:GET_ALARM WHAT ALARMS ARE SCHEDULED [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TODAY ] ] ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00006282.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "What alarms are scheduled for today?", "seqlogical": "[IN:GET_ALARM What alarms are scheduled [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for today ] ] ] ? ]", "normalized_utterance": "WHAT ALARMS ARE SCHEDULED FOR TODAY", "normalized_seqlogical": "[IN:GET_ALARM WHAT ALARMS ARE SCHEDULED [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TODAY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TODAY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"date_time": "today"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00000981.wav", "split": "test", "intent": "[IN:GET_ALARM do i have an alarm set [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tomorrow ] ] ] ]", "parameters": {}, "sentence": "do i have an alarm set for tomorrow", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "DO I HAVE AN ALARM SET FOR TOMORROW", "normalized_seqlogical": "[IN:GET_ALARM DO I HAVE AN ALARM SET [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00000981.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "do i have an alarm set for tomorrow", "seqlogical": "[IN:GET_ALARM do i have an alarm set [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tomorrow ] ] ] ]", "normalized_utterance": "DO I HAVE AN ALARM SET FOR TOMORROW", "normalized_seqlogical": "[IN:GET_ALARM DO I HAVE AN ALARM SET [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"date_time": "tomorrow"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00003107.wav", "split": "test", "intent": "[IN:UPDATE_ALARM Change my alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME from 12 pm ] ] ] [SL:DATE_TIME to 1 pm ] [SL:DURATION for next 2 weekends ] ]", "parameters": {}, "sentence": "Change my alarms from 12pm to 1 pm for next 2 weekends", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "CHANGE MY ALARMS FROM TWELVE PM TO ONE PM FOR NEXT TWO WEEKENDS", "normalized_seqlogical": "[IN:UPDATE_ALARM CHANGE MY ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FROM TWELVE PM ] ] ] [SL:DATE_TIME TO ONE PM ] [SL:DURATION FOR NEXT TWO WEEKENDS ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00003107.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "Change my alarms from 12pm to 1 pm for next 2 weekends", "seqlogical": "[IN:UPDATE_ALARM Change my alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME from 12 pm ] ] ] [SL:DATE_TIME to 1 pm ] [SL:DURATION for next 2 weekends ] ]", "normalized_utterance": "CHANGE MY ALARMS FROM TWELVE PM TO ONE PM FOR NEXT TWO WEEKENDS", "normalized_seqlogical": "[IN:UPDATE_ALARM CHANGE MY ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FROM TWELVE PM ] ] ] [SL:DATE_TIME TO ONE PM ] [SL:DURATION FOR NEXT TWO WEEKENDS ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FROM TWELVE PM ] ] ] [SL:DATE_TIME TO ONE PM ] [SL:DURATION FOR NEXT TWO WEEKENDS ] ]"}, "prediction": "", "function_calls": [{"name": "update_alarm", "arguments": {"alarm_name": "12pm", "date_time": "1pm", "date_time_recurring": "next two weekends"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00003960.wav", "split": "test", "intent": "[IN:DELETE_ALARM remove alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tuesday ] ] ] . ]", "parameters": {}, "sentence": "remove alarm for tuesday.", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "REMOVE ALARM FOR TUESDAY", "normalized_seqlogical": "[IN:DELETE_ALARM REMOVE ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TUESDAY ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00003960.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "remove alarm for tuesday.", "seqlogical": "[IN:DELETE_ALARM remove alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tuesday ] ] ] . ]", "normalized_utterance": "REMOVE ALARM FOR TUESDAY", "normalized_seqlogical": "[IN:DELETE_ALARM REMOVE ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TUESDAY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TUESDAY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "Tuesday"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00000412.wav", "split": "test", "intent": "[IN:DELETE_ALARM cancel [SL:AMOUNT all ] my [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME weekend ] ] ] alarms ]", "parameters": {}, "sentence": "cancel all my weekend alarms", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "CANCEL ALL MY WEEKEND ALARMS", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL [SL:AMOUNT ALL ] MY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME WEEKEND ] ] ] ALARMS ]", "raw_data": {"file_id": "test_0/alarm_test_0/00000412.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "cancel all my weekend alarms", "seqlogical": "[IN:DELETE_ALARM cancel [SL:AMOUNT all ] my [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME weekend ] ] ] alarms ]", "normalized_utterance": "CANCEL ALL MY WEEKEND ALARMS", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL [SL:AMOUNT ALL ] MY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME WEEKEND ] ] ] ALARMS ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:AMOUNT ALL ] [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME WEEKEND ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"period": "weekend"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00006391.wav", "split": "test", "intent": "[IN:DELETE_ALARM Could you delete my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for today ] ] ] ]", "parameters": {}, "sentence": "Could you delete my alarm for today", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "COULD YOU DELETE MY ALARM FOR TODAY", "normalized_seqlogical": "[IN:DELETE_ALARM COULD YOU DELETE MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TODAY ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00006391.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "Could you delete my alarm for today", "seqlogical": "[IN:DELETE_ALARM Could you delete my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for today ] ] ] ]", "normalized_utterance": "COULD YOU DELETE MY ALARM FOR TODAY", "normalized_seqlogical": "[IN:DELETE_ALARM COULD YOU DELETE MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TODAY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TODAY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "today"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00006664.wav", "split": "test", "intent": "[IN:DELETE_ALARM Delete the alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for 2 : 00 am ] ] ] ]", "parameters": {}, "sentence": "Delete the alarm for 2:00 am", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "DELETE THE ALARM FOR TWO AM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE THE ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TWO AM ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00006664.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "Delete the alarm for 2:00 am", "seqlogical": "[IN:DELETE_ALARM Delete the alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for 2 : 00 am ] ] ] ]", "normalized_utterance": "DELETE THE ALARM FOR TWO AM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE THE ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TWO AM ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TWO AM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "2:00 AM"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00002328.wav", "split": "test", "intent": "[IN:GET_ALARM What time is my [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME morning ] ] ] alarm set for ]", "parameters": {}, "sentence": "What time is my morning alarm set for", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT TIME IS MY MORNING ALARM SET FOR", "normalized_seqlogical": "[IN:GET_ALARM WHAT TIME IS MY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME MORNING ] ] ] ALARM SET FOR ]", "raw_data": {"file_id": "test_0/alarm_test_0/00002328.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "What time is my morning alarm set for", "seqlogical": "[IN:GET_ALARM What time is my [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME morning ] ] ] alarm set for ]", "normalized_utterance": "WHAT TIME IS MY MORNING ALARM SET FOR", "normalized_seqlogical": "[IN:GET_ALARM WHAT TIME IS MY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME MORNING ] ] ] ALARM SET FOR ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME MORNING ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"period": "morning"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00002978.wav", "split": "test", "intent": "[IN:GET_ALARM Display [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME tomorrow ] ] ] 's alarms ]", "parameters": {}, "sentence": "Display tomorrow's alarms", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "DISPLAY TOMORROW 'S ALARMS", "normalized_seqlogical": "[IN:GET_ALARM DISPLAY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TOMORROW ] ] ] 'S ALARMS ]", "raw_data": {"file_id": "test_1/alarm_test/00002978.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "Display tomorrow's alarms", "seqlogical": "[IN:GET_ALARM Display [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME tomorrow ] ] ] 's alarms ]", "normalized_utterance": "DISPLAY TOMORROW 'S ALARMS", "normalized_seqlogical": "[IN:GET_ALARM DISPLAY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TOMORROW ] ] ] 'S ALARMS ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TOMORROW ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"date_time": "tomorrow"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00003075.wav", "split": "test", "intent": "[IN:UPDATE_ALARM Start an alarm [SL:DATE_TIME at eight ] , not [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME at 7 : 30 ] ] ] . ]", "parameters": {}, "sentence": "Start an alarm at eight, not at 7:30.", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "START AN ALARM AT EIGHT NOT AT SEVEN THIRTY", "normalized_seqlogical": "[IN:UPDATE_ALARM START AN ALARM [SL:DATE_TIME AT EIGHT ] NOT [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME AT SEVEN THIRTY ] ] ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00003075.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "Start an alarm at eight, not at 7:30.", "seqlogical": "[IN:UPDATE_ALARM Start an alarm [SL:DATE_TIME at eight ] , not [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME at 7 : 30 ] ] ] . ]", "normalized_utterance": "START AN ALARM AT EIGHT NOT AT SEVEN THIRTY", "normalized_seqlogical": "[IN:UPDATE_ALARM START AN ALARM [SL:DATE_TIME AT EIGHT ] NOT [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME AT SEVEN THIRTY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_ALARM [SL:DATE_TIME AT EIGHT ] [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME AT SEVEN THIRTY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_alarm", "arguments": {"date_time": "7:30"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00006768.wav", "split": "test", "intent": "[IN:DELETE_ALARM Delete the [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 6 : 00 am ] ] ] alarm ]", "parameters": {}, "sentence": "Delete the 6:00 am alarm", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "DELETE THE SIX AM ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE THE [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME SIX AM ] ] ] ALARM ]", "raw_data": {"file_id": "test_0/alarm_test_0/00006768.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "Delete the 6:00 am alarm", "seqlogical": "[IN:DELETE_ALARM Delete the [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 6 : 00 am ] ] ] alarm ]", "normalized_utterance": "DELETE THE SIX AM ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE THE [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME SIX AM ] ] ] ALARM ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME SIX AM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "6am"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00000359.wav", "split": "test", "intent": "[IN:DELETE_ALARM Cancel [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME tomorrow ] ] ] 's alarm ]", "parameters": {}, "sentence": "Cancel tomorrow's alarm", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "CANCEL TOMORROW 'S ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TOMORROW ] ] ] 'S ALARM ]", "raw_data": {"file_id": "test_0/alarm_test_0/00000359.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "Cancel tomorrow's alarm", "seqlogical": "[IN:DELETE_ALARM Cancel [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME tomorrow ] ] ] 's alarm ]", "normalized_utterance": "CANCEL TOMORROW 'S ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TOMORROW ] ] ] 'S ALARM ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TOMORROW ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "tomorrow"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00000301.wav", "split": "test", "intent": "[IN:GET_ALARM How much time is left on my [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME morning ] ] ] alarm ? ]", "parameters": {}, "sentence": "How much time is left on my morning alarm?", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "HOW MUCH TIME IS LEFT ON MY MORNING ALARM", "normalized_seqlogical": "[IN:GET_ALARM HOW MUCH TIME IS LEFT ON MY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME MORNING ] ] ] ALARM ]", "raw_data": {"file_id": "test_1/alarm_test/00000301.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "How much time is left on my morning alarm?", "seqlogical": "[IN:GET_ALARM How much time is left on my [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME morning ] ] ] alarm ? ]", "normalized_utterance": "HOW MUCH TIME IS LEFT ON MY MORNING ALARM", "normalized_seqlogical": "[IN:GET_ALARM HOW MUCH TIME IS LEFT ON MY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME MORNING ] ] ] ALARM ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME MORNING ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"alarm_name": "morning"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00007097.wav", "split": "test", "intent": "[IN:DELETE_ALARM Cancel the alarm set [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for weekends ] ] ] ]", "parameters": {}, "sentence": "Cancel the alarm set for weekends", "domain": "alarm", "gender": "Male", "native": "No", "normalized_utterance": "CANCEL THE ALARM SET FOR WEEKENDS", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL THE ALARM SET [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR WEEKENDS ] ] ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00007097.wav", "domain": "alarm", "gender": "Male", "native": "No", "utterance": "Cancel the alarm set for weekends", "seqlogical": "[IN:DELETE_ALARM Cancel the alarm set [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for weekends ] ] ] ]", "normalized_utterance": "CANCEL THE ALARM SET FOR WEEKENDS", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL THE ALARM SET [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR WEEKENDS ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR WEEKENDS ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"period": "weekends"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00000720.wav", "split": "test", "intent": "[IN:GET_ALARM Please show [SL:AMOUNT all ] alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for friday ] ] ] ]", "parameters": {}, "sentence": "Please show all alarms for friday", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "PLEASE SHOW ALL ALARMS FOR FRIDAY", "normalized_seqlogical": "[IN:GET_ALARM PLEASE SHOW [SL:AMOUNT ALL ] ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR FRIDAY ] ] ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00000720.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "Please show all alarms for friday", "seqlogical": "[IN:GET_ALARM Please show [SL:AMOUNT all ] alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for friday ] ] ] ]", "normalized_utterance": "PLEASE SHOW ALL ALARMS FOR FRIDAY", "normalized_seqlogical": "[IN:GET_ALARM PLEASE SHOW [SL:AMOUNT ALL ] ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR FRIDAY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:AMOUNT ALL ] [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR FRIDAY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"date_time": "Friday"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00006575.wav", "split": "test", "intent": "[IN:DELETE_ALARM Delete the alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for today ] ] ] . ]", "parameters": {}, "sentence": "Delete the alarm for today.", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "DELETE THE ALARM FOR TODAY", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE THE ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TODAY ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00006575.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "Delete the alarm for today.", "seqlogical": "[IN:DELETE_ALARM Delete the alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for today ] ] ] . ]", "normalized_utterance": "DELETE THE ALARM FOR TODAY", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE THE ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TODAY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TODAY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "today"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00006576.wav", "split": "test", "intent": "[IN:GET_ALARM List [SL:AMOUNT all ] the alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tomorrow ] ] ] ]", "parameters": {}, "sentence": "List all the alarms for tomorrow", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "LIST ALL THE ALARMS FOR TOMORROW", "normalized_seqlogical": "[IN:GET_ALARM LIST [SL:AMOUNT ALL ] THE ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00006576.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "List all the alarms for tomorrow", "seqlogical": "[IN:GET_ALARM List [SL:AMOUNT all ] the alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tomorrow ] ] ] ]", "normalized_utterance": "LIST ALL THE ALARMS FOR TOMORROW", "normalized_seqlogical": "[IN:GET_ALARM LIST [SL:AMOUNT ALL ] THE ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:AMOUNT ALL ] [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"date_time": "tomorrow"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00002975.wav", "split": "test", "intent": "[IN:GET_ALARM Display my alarm set [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tomorrow morning ] ] ] ]", "parameters": {}, "sentence": "Display my alarm set for tomorrow morning", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "DISPLAY MY ALARM SET FOR TOMORROW MORNING", "normalized_seqlogical": "[IN:GET_ALARM DISPLAY MY ALARM SET [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW MORNING ] ] ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00002975.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "Display my alarm set for tomorrow morning", "seqlogical": "[IN:GET_ALARM Display my alarm set [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tomorrow morning ] ] ] ]", "normalized_utterance": "DISPLAY MY ALARM SET FOR TOMORROW MORNING", "normalized_seqlogical": "[IN:GET_ALARM DISPLAY MY ALARM SET [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW MORNING ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW MORNING ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"date_time": "tomorrow morning"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00005841.wav", "split": "test", "intent": "[IN:GET_ALARM Alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for next week ] ] ] ]", "parameters": {}, "sentence": "Alarms for next week", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "ALARMS FOR NEXT WEEK", "normalized_seqlogical": "[IN:GET_ALARM ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR NEXT WEEK ] ] ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00005841.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "Alarms for next week", "seqlogical": "[IN:GET_ALARM Alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for next week ] ] ] ]", "normalized_utterance": "ALARMS FOR NEXT WEEK", "normalized_seqlogical": "[IN:GET_ALARM ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR NEXT WEEK ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR NEXT WEEK ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"date_time_recurring": "next week"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00006132.wav", "split": "test", "intent": "[IN:DELETE_ALARM Delete the alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for 2 : 00 am ] ] ] . ]", "parameters": {}, "sentence": "Delete the alarm for 2:00 am.", "domain": "alarm", "gender": "Male", "native": "No", "normalized_utterance": "DELETE THE ALARM FOR TWO AM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE THE ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TWO AM ] ] ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00006132.wav", "domain": "alarm", "gender": "Male", "native": "No", "utterance": "Delete the alarm for 2:00 am.", "seqlogical": "[IN:DELETE_ALARM Delete the alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for 2 : 00 am ] ] ] . ]", "normalized_utterance": "DELETE THE ALARM FOR TWO AM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE THE ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TWO AM ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TWO AM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "2 AM"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00006575.wav", "split": "test", "intent": "[IN:DELETE_ALARM Delete the alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for today ] ] ] . ]", "parameters": {}, "sentence": "Delete the alarm for today.", "domain": "alarm", "gender": "Male", "native": "No", "normalized_utterance": "DELETE THE ALARM FOR TODAY", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE THE ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TODAY ] ] ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00006575.wav", "domain": "alarm", "gender": "Male", "native": "No", "utterance": "Delete the alarm for today.", "seqlogical": "[IN:DELETE_ALARM Delete the alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for today ] ] ] . ]", "normalized_utterance": "DELETE THE ALARM FOR TODAY", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE THE ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TODAY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TODAY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "today"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00005946.wav", "split": "test", "intent": "[IN:DELETE_ALARM Get rid of my [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME early am ] ] ] alarm ]", "parameters": {}, "sentence": "Get rid of my early am alarm", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "GET RID OF MY EARLY AM ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM GET RID OF MY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME EARLY AM ] ] ] ALARM ]", "raw_data": {"file_id": "test_0/alarm_test_0/00005946.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "Get rid of my early am alarm", "seqlogical": "[IN:DELETE_ALARM Get rid of my [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME early am ] ] ] alarm ]", "normalized_utterance": "GET RID OF MY EARLY AM ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM GET RID OF MY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME EARLY AM ] ] ] ALARM ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME EARLY AM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"period": "AM"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00002330.wav", "split": "test", "intent": "[IN:DELETE_ALARM cancel my [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME nightly ] ] ] alarm ]", "parameters": {}, "sentence": "cancel my nightly alarm", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "CANCEL MY NIGHTLY ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL MY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME NIGHTLY ] ] ] ALARM ]", "raw_data": {"file_id": "test_0/alarm_test_0/00002330.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "cancel my nightly alarm", "seqlogical": "[IN:DELETE_ALARM cancel my [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME nightly ] ] ] alarm ]", "normalized_utterance": "CANCEL MY NIGHTLY ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL MY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME NIGHTLY ] ] ] ALARM ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME NIGHTLY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"period": "nightly"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00006607.wav", "split": "test", "intent": "[IN:DELETE_ALARM Can you cancel that alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tonight ] ] ] ]", "parameters": {}, "sentence": "Can you cancel that alarm for tonight", "domain": "alarm", "gender": "Male", "native": "Yes", "normalized_utterance": "CAN YOU CANCEL THAT ALARM FOR TONIGHT", "normalized_seqlogical": "[IN:DELETE_ALARM CAN YOU CANCEL THAT ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TONIGHT ] ] ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00006607.wav", "domain": "alarm", "gender": "Male", "native": "Yes", "utterance": "Can you cancel that alarm for tonight", "seqlogical": "[IN:DELETE_ALARM Can you cancel that alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tonight ] ] ] ]", "normalized_utterance": "CAN YOU CANCEL THAT ALARM FOR TONIGHT", "normalized_seqlogical": "[IN:DELETE_ALARM CAN YOU CANCEL THAT ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TONIGHT ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TONIGHT ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "tonight"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00001586.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Text [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Dad ] ] ] through [SL:RESOURCE Facebook ] that [SL:CONTENT_EXACT I am on my way ] . ]", "parameters": {}, "sentence": "Text Dad through Facebook that I am on my way.", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "TEXT DAD THROUGH FACEBOOK THAT I AM ON MY WAY", "normalized_seqlogical": "[IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] THROUGH [SL:RESOURCE FACEBOOK ] THAT [SL:CONTENT_EXACT I AM ON MY WAY ] ]", "raw_data": {"file_id": "test_1/messaging_test/00001586.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "Text Dad through Facebook that I am on my way.", "seqlogical": "[IN:SEND_MESSAGE Text [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Dad ] ] ] through [SL:RESOURCE Facebook ] that [SL:CONTENT_EXACT I am on my way ] . ]", "normalized_utterance": "TEXT DAD THROUGH FACEBOOK THAT I AM ON MY WAY", "normalized_seqlogical": "[IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] THROUGH [SL:RESOURCE FACEBOOK ] THAT [SL:CONTENT_EXACT I AM ON MY WAY ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] [SL:RESOURCE FACEBOOK ] [SL:CONTENT_EXACT I AM ON MY WAY ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "Dad", "content_exact": "I am on my way.", "name_app": "Facebook"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00002928.wav", "split": "test", "intent": "[IN:SEND_MESSAGE text [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION dad ] ] ] say [SL:CONTENT_EXACT I won't make it ] . ]", "parameters": {}, "sentence": "text my dad say I won't make it.", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "TEXT MY DAD SAY I WON'T MAKE IT", "normalized_seqlogical": "[IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAD ] ] ] SAY [SL:CONTENT_EXACT I WON'T MAKE IT ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00002928.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "text my dad say I won't make it.", "seqlogical": "[IN:SEND_MESSAGE text [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION dad ] ] ] say [SL:CONTENT_EXACT I won't make it ] . ]", "normalized_utterance": "TEXT MY DAD SAY I WON'T MAKE IT", "normalized_seqlogical": "[IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAD ] ] ] SAY [SL:CONTENT_EXACT I WON'T MAKE IT ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAD ] ] ] [SL:CONTENT_EXACT I WON'T MAKE IT ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "dad", "content_exact": "I won't make it."}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00000209.wav", "split": "test", "intent": "[IN:SEND_MESSAGE send a message to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION parents ] ] ] telling them [SL:CONTENT_EXACT i will be there for dinner ] ]", "parameters": {}, "sentence": "send a message to my parents telling them i will be there for dinner", "domain": "messaging", "gender": "Male", "native": "No", "normalized_utterance": "SEND A MESSAGE TO MY PARENTS TELLING THEM I WILL BE THERE FOR DINNER", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND A MESSAGE TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION PARENTS ] ] ] TELLING THEM [SL:CONTENT_EXACT I WILL BE THERE FOR DINNER ] ]", "raw_data": {"file_id": "test_1/messaging_test/00000209.wav", "domain": "messaging", "gender": "Male", "native": "No", "utterance": "send a message to my parents telling them i will be there for dinner", "seqlogical": "[IN:SEND_MESSAGE send a message to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION parents ] ] ] telling them [SL:CONTENT_EXACT i will be there for dinner ] ]", "normalized_utterance": "SEND A MESSAGE TO MY PARENTS TELLING THEM I WILL BE THERE FOR DINNER", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND A MESSAGE TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION PARENTS ] ] ] TELLING THEM [SL:CONTENT_EXACT I WILL BE THERE FOR DINNER ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION PARENTS ] ] ] [SL:CONTENT_EXACT I WILL BE THERE FOR DINNER ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "my parents", "content_exact": "I will be there for dinner."}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00002411.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Send a text to [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION husband ] ] ] saying [SL:CONTENT_EXACT Don’t forget milk ] ]", "parameters": {}, "sentence": "Send a text to husband saying Don’t forget milk", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "SEND A TEXT TO HUSBAND SAYING DON'T FORGET MILK", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND A TEXT TO [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION HUSBAND ] ] ] SAYING [SL:CONTENT_EXACT DON'T FORGET MILK ] ]", "raw_data": {"file_id": "test_1/messaging_test/00002411.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "Send a text to husband saying Don’t forget milk", "seqlogical": "[IN:SEND_MESSAGE Send a text to [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION husband ] ] ] saying [SL:CONTENT_EXACT Don’t forget milk ] ]", "normalized_utterance": "SEND A TEXT TO HUSBAND SAYING DON'T FORGET MILK", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND A TEXT TO [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION HUSBAND ] ] ] SAYING [SL:CONTENT_EXACT DON'T FORGET MILK ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION HUSBAND ] ] ] [SL:CONTENT_EXACT DON'T FORGET MILK ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "Senatex's husband", "content_exact": "Don't forget milk."}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00000097.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION father ] ] ] and ask if [SL:CONTENT_EXACT he will be home at 2 pm on Friday ] ]", "parameters": {}, "sentence": "Message my father and ask if he will be home at 2pm on Friday", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "MESSAGE MY FATHER AND ASK IF HE WILL BE HOME AT TWO PM ON FRIDAY", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION FATHER ] ] ] AND ASK IF [SL:CONTENT_EXACT HE WILL BE HOME AT TWO PM ON FRIDAY ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00000097.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "Message my father and ask if he will be home at 2pm on Friday", "seqlogical": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION father ] ] ] and ask if [SL:CONTENT_EXACT he will be home at 2 pm on Friday ] ]", "normalized_utterance": "MESSAGE MY FATHER AND ASK IF HE WILL BE HOME AT TWO PM ON FRIDAY", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION FATHER ] ] ] AND ASK IF [SL:CONTENT_EXACT HE WILL BE HOME AT TWO PM ON FRIDAY ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION FATHER ] ] ] [SL:CONTENT_EXACT HE WILL BE HOME AT TWO PM ON FRIDAY ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "Will you be home at 2 p.m. on Friday?", "recipient": "father"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00001828.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION grandpa ] ] ] on [SL:RESOURCE WhatsApp ] asking if [SL:CONTENT_EXACT he needs anything from the store ] ]", "parameters": {}, "sentence": "Message grandpa on WhatsApp asking if he needs anything from the store", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "MESSAGE GRANDPA ON WHATSAPP ASKING IF HE NEEDS ANYTHING FROM THE STORE", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION GRANDPA ] ] ] ON [SL:RESOURCE WHATSAPP ] ASKING IF [SL:CONTENT_EXACT HE NEEDS ANYTHING FROM THE STORE ] ]", "raw_data": {"file_id": "test_1/messaging_test/00001828.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "Message grandpa on WhatsApp asking if he needs anything from the store", "seqlogical": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION grandpa ] ] ] on [SL:RESOURCE WhatsApp ] asking if [SL:CONTENT_EXACT he needs anything from the store ] ]", "normalized_utterance": "MESSAGE GRANDPA ON WHATSAPP ASKING IF HE NEEDS ANYTHING FROM THE STORE", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION GRANDPA ] ] ] ON [SL:RESOURCE WHATSAPP ] ASKING IF [SL:CONTENT_EXACT HE NEEDS ANYTHING FROM THE STORE ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION GRANDPA ] ] ] [SL:RESOURCE WHATSAPP ] [SL:CONTENT_EXACT HE NEEDS ANYTHING FROM THE STORE ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "grandpa", "content_exact": "asking if he needs anything from the store", "name_app": "WhatsApp"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00000482.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Send message to [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] that [SL:CONTENT_EXACT I made it to the doctor 's office but my car 's GPS took me really off course today ] . ]", "parameters": {}, "sentence": "Send message to mom that I made it to the doctor's office but my car's GPS took me really off course today.", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "SEND MESSAGE TO MOM THAT I MADE IT TO THE DOCTOR 'S OFFICE BUT MY CAR 'S GPS TOOK ME REALLY OFF COURSE TODAY", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND MESSAGE TO [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] THAT [SL:CONTENT_EXACT I MADE IT TO THE DOCTOR 'S OFFICE BUT MY CAR 'S GPS TOOK ME REALLY OFF COURSE TODAY ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00000482.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "Send message to mom that I made it to the doctor's office but my car's GPS took me really off course today.", "seqlogical": "[IN:SEND_MESSAGE Send message to [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] that [SL:CONTENT_EXACT I made it to the doctor 's office but my car 's GPS took me really off course today ] . ]", "normalized_utterance": "SEND MESSAGE TO MOM THAT I MADE IT TO THE DOCTOR 'S OFFICE BUT MY CAR 'S GPS TOOK ME REALLY OFF COURSE TODAY", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND MESSAGE TO [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] THAT [SL:CONTENT_EXACT I MADE IT TO THE DOCTOR 'S OFFICE BUT MY CAR 'S GPS TOOK ME REALLY OFF COURSE TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT I MADE IT TO THE DOCTOR 'S OFFICE BUT MY CAR 'S GPS TOOK ME REALLY OFF COURSE TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "mom", "content_exact": "I made it to the doctor's office, but my car's GPS took me really off course today."}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00003030.wav", "split": "test", "intent": "[IN:SEND_MESSAGE tell [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION dad ] ] ] to [SL:CONTENT_EXACT buy some cookies ] . ]", "parameters": {}, "sentence": "tell my dad to buy some cookies.", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "TELL MY DAD TO BUY SOME COOKIES", "normalized_seqlogical": "[IN:SEND_MESSAGE TELL [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAD ] ] ] TO [SL:CONTENT_EXACT BUY SOME COOKIES ] ]", "raw_data": {"file_id": "test_1/messaging_test/00003030.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "tell my dad to buy some cookies.", "seqlogical": "[IN:SEND_MESSAGE tell [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION dad ] ] ] to [SL:CONTENT_EXACT buy some cookies ] . ]", "normalized_utterance": "TELL MY DAD TO BUY SOME COOKIES", "normalized_seqlogical": "[IN:SEND_MESSAGE TELL [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAD ] ] ] TO [SL:CONTENT_EXACT BUY SOME COOKIES ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAD ] ] ] [SL:CONTENT_EXACT BUY SOME COOKIES ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "buy some cookies", "recipient": "dad"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00002722.wav", "split": "test", "intent": "[IN:SEND_MESSAGE message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Dad ] ] ] to [SL:CONTENT_EXACT buy cheese ] . ]", "parameters": {}, "sentence": "message Dad to buy cheese.", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "MESSAGE DAD TO BUY CHEESE", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] TO [SL:CONTENT_EXACT BUY CHEESE ] ]", "raw_data": {"file_id": "test_1/messaging_test/00002722.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "message Dad to buy cheese.", "seqlogical": "[IN:SEND_MESSAGE message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Dad ] ] ] to [SL:CONTENT_EXACT buy cheese ] . ]", "normalized_utterance": "MESSAGE DAD TO BUY CHEESE", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] TO [SL:CONTENT_EXACT BUY CHEESE ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] [SL:CONTENT_EXACT BUY CHEESE ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "dat by cheese", "recipient": "Message"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00000215.wav", "split": "test", "intent": "[IN:REACT_MESSAGE leave a [SL:TYPE_REACTION smile ] reaction on [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] ] ] 's [SL:ORDINAL last ] message ]", "parameters": {}, "sentence": "leave a smile reaction on my mom's last message", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "LEAVE A SMILE REACTION ON MY MOM 'S LAST MESSAGE", "normalized_seqlogical": "[IN:REACT_MESSAGE LEAVE A [SL:TYPE_REACTION SMILE ] REACTION ON [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] 'S [SL:ORDINAL LAST ] MESSAGE ]", "raw_data": {"file_id": "test_0/messaging_test_0/00000215.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "leave a smile reaction on my mom's last message", "seqlogical": "[IN:REACT_MESSAGE leave a [SL:TYPE_REACTION smile ] reaction on [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] ] ] 's [SL:ORDINAL last ] message ]", "normalized_utterance": "LEAVE A SMILE REACTION ON MY MOM 'S LAST MESSAGE", "normalized_seqlogical": "[IN:REACT_MESSAGE LEAVE A [SL:TYPE_REACTION SMILE ] REACTION ON [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] 'S [SL:ORDINAL LAST ] MESSAGE ]", "decoupled_normalized_seqlogical": "[IN:REACT_MESSAGE [SL:TYPE_REACTION SMILE ] [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] [SL:ORDINAL LAST ] ]"}, "prediction": "", "function_calls": [{"name": "react_message", "arguments": {"recipient": "mom", "type_reaction": "smile"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00002180.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Let 's reply to that text from [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION auntie ] ] ] ]", "parameters": {}, "sentence": "Let's reply to that text from auntie", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "LET 'S REPLY TO THAT TEXT FROM AUNTIE", "normalized_seqlogical": "[IN:SEND_MESSAGE LET 'S REPLY TO THAT TEXT FROM [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION AUNTIE ] ] ] ]", "raw_data": {"file_id": "test_1/messaging_test/00002180.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "Let's reply to that text from auntie", "seqlogical": "[IN:SEND_MESSAGE Let 's reply to that text from [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION auntie ] ] ] ]", "normalized_utterance": "LET 'S REPLY TO THAT TEXT FROM AUNTIE", "normalized_seqlogical": "[IN:SEND_MESSAGE LET 'S REPLY TO THAT TEXT FROM [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION AUNTIE ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION AUNTIE ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_message", "arguments": {"recipient": "Aunty"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00000054.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Ask [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] ] ] if [SL:CONTENT_EXACT there 's anything she needs from the store ] . ]", "parameters": {}, "sentence": "Ask my mom if there's anything she needs from the store.", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "ASK MY MOM IF THERE 'S ANYTHING SHE NEEDS FROM THE STORE", "normalized_seqlogical": "[IN:SEND_MESSAGE ASK [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] IF [SL:CONTENT_EXACT THERE 'S ANYTHING SHE NEEDS FROM THE STORE ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00000054.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "Ask my mom if there's anything she needs from the store.", "seqlogical": "[IN:SEND_MESSAGE Ask [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] ] ] if [SL:CONTENT_EXACT there 's anything she needs from the store ] . ]", "normalized_utterance": "ASK MY MOM IF THERE 'S ANYTHING SHE NEEDS FROM THE STORE", "normalized_seqlogical": "[IN:SEND_MESSAGE ASK [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] IF [SL:CONTENT_EXACT THERE 'S ANYTHING SHE NEEDS FROM THE STORE ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT THERE 'S ANYTHING SHE NEEDS FROM THE STORE ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "Is there anything you need from the store?", "recipient": "mom"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00000904.wav", "split": "test", "intent": "[IN:SEND_MESSAGE ask [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION cousin ] [SL:CONTACT Tony ] ] ] [SL:CONTENT_EXACT what where and when will his open mic event take place ] ]", "parameters": {}, "sentence": "ask cousin Tony what where and when will his open mic event take place", "domain": "messaging", "gender": "Male", "native": "No", "normalized_utterance": "ASK COUSIN TONY WHAT WHERE AND WHEN WILL HIS OPEN MIC EVENT TAKE PLACE", "normalized_seqlogical": "[IN:SEND_MESSAGE ASK [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION COUSIN ] [SL:CONTACT TONY ] ] ] [SL:CONTENT_EXACT WHAT WHERE AND WHEN WILL HIS OPEN MIC EVENT TAKE PLACE ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00000904.wav", "domain": "messaging", "gender": "Male", "native": "No", "utterance": "ask cousin Tony what where and when will his open mic event take place", "seqlogical": "[IN:SEND_MESSAGE ask [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION cousin ] [SL:CONTACT Tony ] ] ] [SL:CONTENT_EXACT what where and when will his open mic event take place ] ]", "normalized_utterance": "ASK COUSIN TONY WHAT WHERE AND WHEN WILL HIS OPEN MIC EVENT TAKE PLACE", "normalized_seqlogical": "[IN:SEND_MESSAGE ASK [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION COUSIN ] [SL:CONTACT TONY ] ] ] [SL:CONTENT_EXACT WHAT WHERE AND WHEN WILL HIS OPEN MIC EVENT TAKE PLACE ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION COUSIN ] [SL:CONTACT TONY ] ] ] [SL:CONTENT_EXACT WHAT WHERE AND WHEN WILL HIS OPEN MIC EVENT TAKE PLACE ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "what, where, and when will his open mic event take place", "recipient": "Cousin Tony"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00000736.wav", "split": "test", "intent": "[IN:GET_MESSAGE How many times did [SL:SENDER [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION Dad ] ] ] message [SL:RECIPIENT me ] [SL:DATE_TIME last year ] ]", "parameters": {}, "sentence": "How many times did my Dad message me last year", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "HOW MANY TIMES DID MY DAD MESSAGE ME LAST YEAR", "normalized_seqlogical": "[IN:GET_MESSAGE HOW MANY TIMES DID [SL:SENDER [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAD ] ] ] MESSAGE [SL:RECIPIENT ME ] [SL:DATE_TIME LAST YEAR ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00000736.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "How many times did my Dad message me last year", "seqlogical": "[IN:GET_MESSAGE How many times did [SL:SENDER [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION Dad ] ] ] message [SL:RECIPIENT me ] [SL:DATE_TIME last year ] ]", "normalized_utterance": "HOW MANY TIMES DID MY DAD MESSAGE ME LAST YEAR", "normalized_seqlogical": "[IN:GET_MESSAGE HOW MANY TIMES DID [SL:SENDER [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAD ] ] ] MESSAGE [SL:RECIPIENT ME ] [SL:DATE_TIME LAST YEAR ] ]", "decoupled_normalized_seqlogical": "[IN:GET_MESSAGE [SL:SENDER [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAD ] ] ] [SL:RECIPIENT ME ] [SL:DATE_TIME LAST YEAR ] ]"}, "prediction": "", "function_calls": [{"name": "get_message", "arguments": {"sender": "dad", "date_time": "last year"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00001769.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Tell [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION grandma ] ] ] and [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION grampa ] ] ] [SL:CONTENT_EXACT I love them ] . ]", "parameters": {}, "sentence": "Tell grandma and grampa I love them.", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "TELL GRANDMA AND GRAMPA I LOVE THEM", "normalized_seqlogical": "[IN:SEND_MESSAGE TELL [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION GRANDMA ] ] ] AND [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION GRAMPA ] ] ] [SL:CONTENT_EXACT I LOVE THEM ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00001769.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "Tell grandma and grampa I love them.", "seqlogical": "[IN:SEND_MESSAGE Tell [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION grandma ] ] ] and [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION grampa ] ] ] [SL:CONTENT_EXACT I love them ] . ]", "normalized_utterance": "TELL GRANDMA AND GRAMPA I LOVE THEM", "normalized_seqlogical": "[IN:SEND_MESSAGE TELL [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION GRANDMA ] ] ] AND [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION GRAMPA ] ] ] [SL:CONTENT_EXACT I LOVE THEM ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION GRANDMA ] ] ] [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION GRAMPA ] ] ] [SL:CONTENT_EXACT I LOVE THEM ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "I love them.", "recipient": "Grandma and Grandpa"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00000927.wav", "split": "test", "intent": "[IN:SEND_MESSAGE message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION aunt ] [SL:CONTACT rosi ] ] ] and ask her [SL:CONTENT_EXACT if she can attend the baptism ] ]", "parameters": {}, "sentence": "message aunt rosi and ask her if she can attend the baptism", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "MESSAGE AUNT ROSI AND ASK HER IF SHE CAN ATTEND THE BAPTISM", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION AUNT ] [SL:CONTACT ROSI ] ] ] AND ASK HER [SL:CONTENT_EXACT IF SHE CAN ATTEND THE BAPTISM ] ]", "raw_data": {"file_id": "test_1/messaging_test/00000927.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "message aunt rosi and ask her if she can attend the baptism", "seqlogical": "[IN:SEND_MESSAGE message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION aunt ] [SL:CONTACT rosi ] ] ] and ask her [SL:CONTENT_EXACT if she can attend the baptism ] ]", "normalized_utterance": "MESSAGE AUNT ROSI AND ASK HER IF SHE CAN ATTEND THE BAPTISM", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION AUNT ] [SL:CONTACT ROSI ] ] ] AND ASK HER [SL:CONTENT_EXACT IF SHE CAN ATTEND THE BAPTISM ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION AUNT ] [SL:CONTACT ROSI ] ] ] [SL:CONTENT_EXACT IF SHE CAN ATTEND THE BAPTISM ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "ask her if she can attend the baptism", "recipient": "Aunt Rosie"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00002262.wav", "split": "test", "intent": "[IN:GET_MESSAGE Show [SL:SENDER [IN:GET_CONTACT [SL:TYPE_RELATION dad ] ] ] 's texts ]", "parameters": {}, "sentence": "Show dad's texts", "domain": "messaging", "gender": "Male", "native": "Unanswered", "normalized_utterance": "SHOW DAD 'S TEXTS", "normalized_seqlogical": "[IN:GET_MESSAGE SHOW [SL:SENDER [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] 'S TEXTS ]", "raw_data": {"file_id": "test_1/messaging_test/00002262.wav", "domain": "messaging", "gender": "Male", "native": "Unanswered", "utterance": "Show dad's texts", "seqlogical": "[IN:GET_MESSAGE Show [SL:SENDER [IN:GET_CONTACT [SL:TYPE_RELATION dad ] ] ] 's texts ]", "normalized_utterance": "SHOW DAD 'S TEXTS", "normalized_seqlogical": "[IN:GET_MESSAGE SHOW [SL:SENDER [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] 'S TEXTS ]", "decoupled_normalized_seqlogical": "[IN:GET_MESSAGE [SL:SENDER [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_message", "arguments": {"recipient": "Dad"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00000139.wav", "split": "test", "intent": "[IN:SEND_MESSAGE DM [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION husband ] ] ] that [SL:CONTENT_EXACT I'm on my way ] . ]", "parameters": {}, "sentence": "DM my husband that I'm on my way.", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "DM MY HUSBAND THAT I'M ON MY WAY", "normalized_seqlogical": "[IN:SEND_MESSAGE DM [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION HUSBAND ] ] ] THAT [SL:CONTENT_EXACT I'M ON MY WAY ] ]", "raw_data": {"file_id": "test_1/messaging_test/00000139.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "DM my husband that I'm on my way.", "seqlogical": "[IN:SEND_MESSAGE DM [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION husband ] ] ] that [SL:CONTENT_EXACT I'm on my way ] . ]", "normalized_utterance": "DM MY HUSBAND THAT I'M ON MY WAY", "normalized_seqlogical": "[IN:SEND_MESSAGE DM [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION HUSBAND ] ] ] THAT [SL:CONTENT_EXACT I'M ON MY WAY ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION HUSBAND ] ] ] [SL:CONTENT_EXACT I'M ON MY WAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "nearest", "location_user": "me"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00000225.wav", "split": "test", "intent": "[IN:SEND_MESSAGE message [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION friends ] ] ] that [SL:CONTENT_EXACT there is a fundraiser going on at RuffHouse Rescue and they can donate ] ]", "parameters": {}, "sentence": "message my friends that there is a fundraiser going on at RuffHouse Rescue and they can donate", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "MESSAGE MY FRIENDS THAT THERE IS A FUNDRAISER GOING ON AT RUFFHOUSE RESCUE AND THEY CAN DONATE", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION FRIENDS ] ] ] THAT [SL:CONTENT_EXACT THERE IS A FUNDRAISER GOING ON AT RUFFHOUSE RESCUE AND THEY CAN DONATE ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00000225.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "message my friends that there is a fundraiser going on at RuffHouse Rescue and they can donate", "seqlogical": "[IN:SEND_MESSAGE message [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION friends ] ] ] that [SL:CONTENT_EXACT there is a fundraiser going on at RuffHouse Rescue and they can donate ] ]", "normalized_utterance": "MESSAGE MY FRIENDS THAT THERE IS A FUNDRAISER GOING ON AT RUFFHOUSE RESCUE AND THEY CAN DONATE", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION FRIENDS ] ] ] THAT [SL:CONTENT_EXACT THERE IS A FUNDRAISER GOING ON AT RUFFHOUSE RESCUE AND THEY CAN DONATE ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION FRIENDS ] ] ] [SL:CONTENT_EXACT THERE IS A FUNDRAISER GOING ON AT RUFFHOUSE RESCUE AND THEY CAN DONATE ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "my friends", "content_exact": "there is a fundraiser going on at Rough House Rescue and they can donate."}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00002271.wav", "split": "test", "intent": "[IN:GET_MESSAGE Find messages from [SL:SENDER [IN:GET_CONTACT [SL:TYPE_RELATION Dad ] ] ] . ]", "parameters": {}, "sentence": "Find messages from Dad.", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "FIND MESSAGES FROM DAD", "normalized_seqlogical": "[IN:GET_MESSAGE FIND MESSAGES FROM [SL:SENDER [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00002271.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "Find messages from Dad.", "seqlogical": "[IN:GET_MESSAGE Find messages from [SL:SENDER [IN:GET_CONTACT [SL:TYPE_RELATION Dad ] ] ] . ]", "normalized_utterance": "FIND MESSAGES FROM DAD", "normalized_seqlogical": "[IN:GET_MESSAGE FIND MESSAGES FROM [SL:SENDER [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_MESSAGE [SL:SENDER [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_message", "arguments": {"sender": "dad"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00002262.wav", "split": "test", "intent": "[IN:GET_MESSAGE Show [SL:SENDER [IN:GET_CONTACT [SL:TYPE_RELATION dad ] ] ] 's texts ]", "parameters": {}, "sentence": "Show dad's texts", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "SHOW DAD 'S TEXTS", "normalized_seqlogical": "[IN:GET_MESSAGE SHOW [SL:SENDER [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] 'S TEXTS ]", "raw_data": {"file_id": "test_0/messaging_test_0/00002262.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "Show dad's texts", "seqlogical": "[IN:GET_MESSAGE Show [SL:SENDER [IN:GET_CONTACT [SL:TYPE_RELATION dad ] ] ] 's texts ]", "normalized_utterance": "SHOW DAD 'S TEXTS", "normalized_seqlogical": "[IN:GET_MESSAGE SHOW [SL:SENDER [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] 'S TEXTS ]", "decoupled_normalized_seqlogical": "[IN:GET_MESSAGE [SL:SENDER [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_message", "arguments": {"type_content": "text"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00000279.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Tell [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION brother ] ] ] that [SL:CONTENT_EXACT Mentor Library is hosting a Dahmer reading tonight ] . ]", "parameters": {}, "sentence": "Tell my brother that Mentor Library is hosting a Dahmer reading tonight.", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "TELL MY BROTHER THAT MENTOR LIBRARY IS HOSTING A DAHMER READING TONIGHT", "normalized_seqlogical": "[IN:SEND_MESSAGE TELL [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION BROTHER ] ] ] THAT [SL:CONTENT_EXACT MENTOR LIBRARY IS HOSTING A DAHMER READING TONIGHT ] ]", "raw_data": {"file_id": "test_1/messaging_test/00000279.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "Tell my brother that Mentor Library is hosting a Dahmer reading tonight.", "seqlogical": "[IN:SEND_MESSAGE Tell [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION brother ] ] ] that [SL:CONTENT_EXACT Mentor Library is hosting a Dahmer reading tonight ] . ]", "normalized_utterance": "TELL MY BROTHER THAT MENTOR LIBRARY IS HOSTING A DAHMER READING TONIGHT", "normalized_seqlogical": "[IN:SEND_MESSAGE TELL [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION BROTHER ] ] ] THAT [SL:CONTENT_EXACT MENTOR LIBRARY IS HOSTING A DAHMER READING TONIGHT ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION BROTHER ] ] ] [SL:CONTENT_EXACT MENTOR LIBRARY IS HOSTING A DAHMER READING TONIGHT ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "Mentor Library is hosting a Dharma reading tonight.", "recipient": "brother"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00002114.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Send a message to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION husband ] ] ] ]", "parameters": {}, "sentence": "Send a message to my husband", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "SEND A MESSAGE TO MY HUSBAND", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND A MESSAGE TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION HUSBAND ] ] ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00002114.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "Send a message to my husband", "seqlogical": "[IN:SEND_MESSAGE Send a message to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION husband ] ] ] ]", "normalized_utterance": "SEND A MESSAGE TO MY HUSBAND", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND A MESSAGE TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION HUSBAND ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION HUSBAND ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "my husband", "content_exact": "Hello!"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00001852.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Write [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION dad ] ] ] and ask if [SL:CONTENT_EXACT he wants to go fishing ] ]", "parameters": {}, "sentence": "Write dad and ask if he wants to go fishing", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "WRITE DAD AND ASK IF HE WANTS TO GO FISHING", "normalized_seqlogical": "[IN:SEND_MESSAGE WRITE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] AND ASK IF [SL:CONTENT_EXACT HE WANTS TO GO FISHING ] ]", "raw_data": {"file_id": "test_1/messaging_test/00001852.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "Write dad and ask if he wants to go fishing", "seqlogical": "[IN:SEND_MESSAGE Write [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION dad ] ] ] and ask if [SL:CONTENT_EXACT he wants to go fishing ] ]", "normalized_utterance": "WRITE DAD AND ASK IF HE WANTS TO GO FISHING", "normalized_seqlogical": "[IN:SEND_MESSAGE WRITE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] AND ASK IF [SL:CONTENT_EXACT HE WANTS TO GO FISHING ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] [SL:CONTENT_EXACT HE WANTS TO GO FISHING ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "Do you want to go fishing?", "recipient": "dad"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00000593.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Send a message to [SL:RECIPIENT [IN:GET_MESSAGE the [SL:ORDINAL last ] person who texted [SL:RECIPIENT me ] ] ] asking [SL:CONTENT_EXACT when it 's happening ] ]", "parameters": {}, "sentence": "Send a message to the last person who texted me asking when it's happening", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "SEND A MESSAGE TO THE LAST PERSON WHO TEXTED ME ASKING WHEN IT 'S HAPPENING", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND A MESSAGE TO [SL:RECIPIENT [IN:GET_MESSAGE THE [SL:ORDINAL LAST ] PERSON WHO TEXTED [SL:RECIPIENT ME ] ] ] ASKING [SL:CONTENT_EXACT WHEN IT 'S HAPPENING ] ]", "raw_data": {"file_id": "test_1/messaging_test/00000593.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "Send a message to the last person who texted me asking when it's happening", "seqlogical": "[IN:SEND_MESSAGE Send a message to [SL:RECIPIENT [IN:GET_MESSAGE the [SL:ORDINAL last ] person who texted [SL:RECIPIENT me ] ] ] asking [SL:CONTENT_EXACT when it 's happening ] ]", "normalized_utterance": "SEND A MESSAGE TO THE LAST PERSON WHO TEXTED ME ASKING WHEN IT 'S HAPPENING", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND A MESSAGE TO [SL:RECIPIENT [IN:GET_MESSAGE THE [SL:ORDINAL LAST ] PERSON WHO TEXTED [SL:RECIPIENT ME ] ] ] ASKING [SL:CONTENT_EXACT WHEN IT 'S HAPPENING ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_MESSAGE [SL:ORDINAL LAST ] [SL:RECIPIENT ME ] ] ] [SL:CONTENT_EXACT WHEN IT 'S HAPPENING ] ]"}, "prediction": "", "function_calls": [{"name": "get_message", "arguments": {"tag_message": "last"}}, {"name": "send_message", "arguments": {"recipient": "last", "content_exact": "When is it happening?"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00000972.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] [SL:CONTENT_EXACT please make your potato salad for the party ] ]", "parameters": {}, "sentence": "Message mom please make your potato salad for the party", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "MESSAGE MOM PLEASE MAKE YOUR POTATO SALAD FOR THE PARTY", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT PLEASE MAKE YOUR POTATO SALAD FOR THE PARTY ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00000972.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "Message mom please make your potato salad for the party", "seqlogical": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] [SL:CONTENT_EXACT please make your potato salad for the party ] ]", "normalized_utterance": "MESSAGE MOM PLEASE MAKE YOUR POTATO SALAD FOR THE PARTY", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT PLEASE MAKE YOUR POTATO SALAD FOR THE PARTY ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT PLEASE MAKE YOUR POTATO SALAD FOR THE PARTY ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "mom", "content_exact": "Please make your potato salad for the party."}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00001337.wav", "split": "test", "intent": "[IN:SEND_MESSAGE tell [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] ] ] and [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION dad ] ] ] [SL:CONTENT_EXACT i'm going to be late ] ]", "parameters": {}, "sentence": "tell my mom and dad i'm going to be late", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "TELL MY MOM AND DAD I'M GOING TO BE LATE", "normalized_seqlogical": "[IN:SEND_MESSAGE TELL [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] AND [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] [SL:CONTENT_EXACT I'M GOING TO BE LATE ] ]", "raw_data": {"file_id": "test_1/messaging_test/00001337.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "tell my mom and dad i'm going to be late", "seqlogical": "[IN:SEND_MESSAGE tell [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] ] ] and [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION dad ] ] ] [SL:CONTENT_EXACT i'm going to be late ] ]", "normalized_utterance": "TELL MY MOM AND DAD I'M GOING TO BE LATE", "normalized_seqlogical": "[IN:SEND_MESSAGE TELL [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] AND [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] [SL:CONTENT_EXACT I'M GOING TO BE LATE ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] [SL:CONTENT_EXACT I'M GOING TO BE LATE ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "mom and dad", "content_exact": "I'm going to be late."}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00000739.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Send a text to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION family ] ] ] saying [SL:CONTENT_EXACT Hi ] ]", "parameters": {}, "sentence": "Send a text to my family saying Hi", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "SEND A TEXT TO MY FAMILY SAYING HI", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND A TEXT TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION FAMILY ] ] ] SAYING [SL:CONTENT_EXACT HI ] ]", "raw_data": {"file_id": "test_1/messaging_test/00000739.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "Send a text to my family saying Hi", "seqlogical": "[IN:SEND_MESSAGE Send a text to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION family ] ] ] saying [SL:CONTENT_EXACT Hi ] ]", "normalized_utterance": "SEND A TEXT TO MY FAMILY SAYING HI", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND A TEXT TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION FAMILY ] ] ] SAYING [SL:CONTENT_EXACT HI ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION FAMILY ] ] ] [SL:CONTENT_EXACT HI ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "hi", "recipient": "my family"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00002366.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION wife ] ] ] that [SL:CONTENT_EXACT Our Dog is not feeling well ] . ]", "parameters": {}, "sentence": "Message my wife that Our Dog is not feeling well.", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "MESSAGE MY WIFE THAT OUR DOG IS NOT FEELING WELL", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION WIFE ] ] ] THAT [SL:CONTENT_EXACT OUR DOG IS NOT FEELING WELL ] ]", "raw_data": {"file_id": "test_1/messaging_test/00002366.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "Message my wife that Our Dog is not feeling well.", "seqlogical": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION wife ] ] ] that [SL:CONTENT_EXACT Our Dog is not feeling well ] . ]", "normalized_utterance": "MESSAGE MY WIFE THAT OUR DOG IS NOT FEELING WELL", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION WIFE ] ] ] THAT [SL:CONTENT_EXACT OUR DOG IS NOT FEELING WELL ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION WIFE ] ] ] [SL:CONTENT_EXACT OUR DOG IS NOT FEELING WELL ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "our dog is not feeling well.", "recipient": "my wife"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00001541.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Message [SL:RECIPIENT Sally ] and [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED her ] [SL:TYPE_RELATION girlfriend ] ] ] ]", "parameters": {}, "sentence": "Message Sally and her girlfriend", "domain": "messaging", "gender": "Male", "native": "Unanswered", "normalized_utterance": "MESSAGE SALLY AND HER GIRLFRIEND", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT SALLY ] AND [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED HER ] [SL:TYPE_RELATION GIRLFRIEND ] ] ] ]", "raw_data": {"file_id": "test_1/messaging_test/00001541.wav", "domain": "messaging", "gender": "Male", "native": "Unanswered", "utterance": "Message Sally and her girlfriend", "seqlogical": "[IN:SEND_MESSAGE Message [SL:RECIPIENT Sally ] and [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED her ] [SL:TYPE_RELATION girlfriend ] ] ] ]", "normalized_utterance": "MESSAGE SALLY AND HER GIRLFRIEND", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT SALLY ] AND [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED HER ] [SL:TYPE_RELATION GIRLFRIEND ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT SALLY ] [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED HER ] [SL:TYPE_RELATION GIRLFRIEND ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "Sally", "content_exact": "Message Sally and her girlfriend."}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00002967.wav", "split": "test", "intent": "[IN:SEND_MESSAGE can you tell [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION husband ] ] ] [SL:CONTENT_EXACT I left the oven on ] . ]", "parameters": {}, "sentence": "can you tell my husband I left the oven on.", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "CAN YOU TELL MY HUSBAND I LEFT THE OVEN ON", "normalized_seqlogical": "[IN:SEND_MESSAGE CAN YOU TELL [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION HUSBAND ] ] ] [SL:CONTENT_EXACT I LEFT THE OVEN ON ] ]", "raw_data": {"file_id": "test_1/messaging_test/00002967.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "can you tell my husband I left the oven on.", "seqlogical": "[IN:SEND_MESSAGE can you tell [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION husband ] ] ] [SL:CONTENT_EXACT I left the oven on ] . ]", "normalized_utterance": "CAN YOU TELL MY HUSBAND I LEFT THE OVEN ON", "normalized_seqlogical": "[IN:SEND_MESSAGE CAN YOU TELL [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION HUSBAND ] ] ] [SL:CONTENT_EXACT I LEFT THE OVEN ON ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION HUSBAND ] ] ] [SL:CONTENT_EXACT I LEFT THE OVEN ON ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "husband", "content_exact": "I left the oven on."}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00002586.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] saying [SL:CONTENT_EXACT I’m late for dinner ] . ]", "parameters": {}, "sentence": "Message mom saying I’m late for dinner.", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "MESSAGE MOM SAYING I'M LATE FOR DINNER", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] SAYING [SL:CONTENT_EXACT I'M LATE FOR DINNER ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00002586.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "Message mom saying I’m late for dinner.", "seqlogical": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] saying [SL:CONTENT_EXACT I’m late for dinner ] . ]", "normalized_utterance": "MESSAGE MOM SAYING I'M LATE FOR DINNER", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] SAYING [SL:CONTENT_EXACT I'M LATE FOR DINNER ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT I'M LATE FOR DINNER ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "I'm late for dinner.", "recipient": "mom"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00002965.wav", "split": "test", "intent": "[IN:SEND_MESSAGE message for [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION brother ] ] ] : [SL:CONTENT_EXACT let 's go out ] ! ]", "parameters": {}, "sentence": "message for brother : let's go out!", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "MESSAGE FOR BROTHER LET 'S GO OUT", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE FOR [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION BROTHER ] ] ] [SL:CONTENT_EXACT LET 'S GO OUT ] ]", "raw_data": {"file_id": "test_1/messaging_test/00002965.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "message for brother : let's go out!", "seqlogical": "[IN:SEND_MESSAGE message for [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION brother ] ] ] : [SL:CONTENT_EXACT let 's go out ] ! ]", "normalized_utterance": "MESSAGE FOR BROTHER LET 'S GO OUT", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE FOR [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION BROTHER ] ] ] [SL:CONTENT_EXACT LET 'S GO OUT ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION BROTHER ] ] ] [SL:CONTENT_EXACT LET 'S GO OUT ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "brother", "content_exact": "Message for brother."}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00001398.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Send that [SL:TYPE_CONTENT pic ] to [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Uncle ] [SL:CONTACT Ralph ] ] ] ]", "parameters": {}, "sentence": "Send that pic to Uncle Ralph", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "SEND THAT PIC TO UNCLE RALPH", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND THAT [SL:TYPE_CONTENT PIC ] TO [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION UNCLE ] [SL:CONTACT RALPH ] ] ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00001398.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "Send that pic to Uncle Ralph", "seqlogical": "[IN:SEND_MESSAGE Send that [SL:TYPE_CONTENT pic ] to [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Uncle ] [SL:CONTACT Ralph ] ] ] ]", "normalized_utterance": "SEND THAT PIC TO UNCLE RALPH", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND THAT [SL:TYPE_CONTENT PIC ] TO [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION UNCLE ] [SL:CONTACT RALPH ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:TYPE_CONTENT PIC ] [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION UNCLE ] [SL:CONTACT RALPH ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "that pic", "recipient": "Uncle Ralph"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00001796.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Tell [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION dad ] ] ] [SL:CONTENT_EXACT happy birthday ] ! ]", "parameters": {}, "sentence": "Tell my dad happy birthday!", "domain": "messaging", "gender": "Male", "native": "Unanswered", "normalized_utterance": "TELL MY DAD HAPPY BIRTHDAY", "normalized_seqlogical": "[IN:SEND_MESSAGE TELL [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAD ] ] ] [SL:CONTENT_EXACT HAPPY BIRTHDAY ] ]", "raw_data": {"file_id": "test_1/messaging_test/00001796.wav", "domain": "messaging", "gender": "Male", "native": "Unanswered", "utterance": "Tell my dad happy birthday!", "seqlogical": "[IN:SEND_MESSAGE Tell [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION dad ] ] ] [SL:CONTENT_EXACT happy birthday ] ! ]", "normalized_utterance": "TELL MY DAD HAPPY BIRTHDAY", "normalized_seqlogical": "[IN:SEND_MESSAGE TELL [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAD ] ] ] [SL:CONTENT_EXACT HAPPY BIRTHDAY ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAD ] ] ] [SL:CONTENT_EXACT HAPPY BIRTHDAY ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "happy birthday", "recipient": "dad"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00002890.wav", "split": "test", "intent": "[IN:SEND_MESSAGE send a message , “ [SL:CONTENT_EXACT I got it ] ” to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION Mom ] ] ] . ]", "parameters": {}, "sentence": "send a message, “I got it” to my Mom.", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "SEND A MESSAGE I GOT IT TO MY MOM", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND A MESSAGE [SL:CONTENT_EXACT I GOT IT ] TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00002890.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "send a message, “I got it” to my Mom.", "seqlogical": "[IN:SEND_MESSAGE send a message , “ [SL:CONTENT_EXACT I got it ] ” to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION Mom ] ] ] . ]", "normalized_utterance": "SEND A MESSAGE I GOT IT TO MY MOM", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND A MESSAGE [SL:CONTENT_EXACT I GOT IT ] TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:CONTENT_EXACT I GOT IT ] [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "I got it", "recipient": "my mom"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00000326.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Aunt ] [SL:CONTACT Karen ] ] ] to remind her that [SL:CONTENT_EXACT we still need her to bring coffee to the meeting ] . ]", "parameters": {}, "sentence": "Message Aunt Karen to remind her that we still need her to bring coffee to the meeting.", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "MESSAGE AUNT KAREN TO REMIND HER THAT WE STILL NEED HER TO BRING COFFEE TO THE MEETING", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION AUNT ] [SL:CONTACT KAREN ] ] ] TO REMIND HER THAT [SL:CONTENT_EXACT WE STILL NEED HER TO BRING COFFEE TO THE MEETING ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00000326.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "Message Aunt Karen to remind her that we still need her to bring coffee to the meeting.", "seqlogical": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Aunt ] [SL:CONTACT Karen ] ] ] to remind her that [SL:CONTENT_EXACT we still need her to bring coffee to the meeting ] . ]", "normalized_utterance": "MESSAGE AUNT KAREN TO REMIND HER THAT WE STILL NEED HER TO BRING COFFEE TO THE MEETING", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION AUNT ] [SL:CONTACT KAREN ] ] ] TO REMIND HER THAT [SL:CONTENT_EXACT WE STILL NEED HER TO BRING COFFEE TO THE MEETING ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION AUNT ] [SL:CONTACT KAREN ] ] ] [SL:CONTENT_EXACT WE STILL NEED HER TO BRING COFFEE TO THE MEETING ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "remind her that we still need her to bring coffee to the meeting.", "recipient": "Aunt Karen"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00001532.wav", "split": "test", "intent": "[IN:SEND_MESSAGE tell [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] ] ] and [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION dad ] ] ] that [SL:CONTENT_EXACT I'll be late to dinner ] ]", "parameters": {}, "sentence": "tell my mom and dad that I'll be late to dinner", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "TELL MY MOM AND DAD THAT I'LL BE LATE TO DINNER", "normalized_seqlogical": "[IN:SEND_MESSAGE TELL [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] AND [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] THAT [SL:CONTENT_EXACT I'LL BE LATE TO DINNER ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00001532.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "tell my mom and dad that I'll be late to dinner", "seqlogical": "[IN:SEND_MESSAGE tell [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] ] ] and [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION dad ] ] ] that [SL:CONTENT_EXACT I'll be late to dinner ] ]", "normalized_utterance": "TELL MY MOM AND DAD THAT I'LL BE LATE TO DINNER", "normalized_seqlogical": "[IN:SEND_MESSAGE TELL [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] AND [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] THAT [SL:CONTENT_EXACT I'LL BE LATE TO DINNER ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] [SL:CONTENT_EXACT I'LL BE LATE TO DINNER ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "mom and dad", "content_exact": "I'll be late to dinner."}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00001963.wav", "split": "test", "intent": "[IN:REACT_MESSAGE [SL:TYPE_REACTION haha ] at [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION brother ] ] ] 's text ]", "parameters": {}, "sentence": "haha at my brother's text", "domain": "messaging", "gender": "Male", "native": "Unanswered", "normalized_utterance": "HAHA AT MY BROTHER 'S TEXT", "normalized_seqlogical": "[IN:REACT_MESSAGE [SL:TYPE_REACTION HAHA ] AT [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION BROTHER ] ] ] 'S TEXT ]", "raw_data": {"file_id": "test_1/messaging_test/00001963.wav", "domain": "messaging", "gender": "Male", "native": "Unanswered", "utterance": "haha at my brother's text", "seqlogical": "[IN:REACT_MESSAGE [SL:TYPE_REACTION haha ] at [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION brother ] ] ] 's text ]", "normalized_utterance": "HAHA AT MY BROTHER 'S TEXT", "normalized_seqlogical": "[IN:REACT_MESSAGE [SL:TYPE_REACTION HAHA ] AT [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION BROTHER ] ] ] 'S TEXT ]", "decoupled_normalized_seqlogical": "[IN:REACT_MESSAGE [SL:TYPE_REACTION HAHA ] [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION BROTHER ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "react_message", "arguments": {"recipient": "brother", "type_reaction": "Haha"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00000483.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION dad ] ] ] for [SL:CONTENT_EXACT his current location ] . ]", "parameters": {}, "sentence": "Message dad for his current location.", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "MESSAGE DAD FOR HIS CURRENT LOCATION", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] FOR [SL:CONTENT_EXACT HIS CURRENT LOCATION ] ]", "raw_data": {"file_id": "test_1/messaging_test/00000483.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "Message dad for his current location.", "seqlogical": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION dad ] ] ] for [SL:CONTENT_EXACT his current location ] . ]", "normalized_utterance": "MESSAGE DAD FOR HIS CURRENT LOCATION", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] FOR [SL:CONTENT_EXACT HIS CURRENT LOCATION ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] [SL:CONTENT_EXACT HIS CURRENT LOCATION ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "current location"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00000656.wav", "split": "test", "intent": "[IN:GET_MESSAGE have [SL:RECIPIENT i ] received any messages from [SL:SENDER [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION father ] ] ] [SL:DATE_TIME in the last hour ] ? ]", "parameters": {}, "sentence": "have i received any messages from my father in the last hour?", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "HAVE I RECEIVED ANY MESSAGES FROM MY FATHER IN THE LAST HOUR", "normalized_seqlogical": "[IN:GET_MESSAGE HAVE [SL:RECIPIENT I ] RECEIVED ANY MESSAGES FROM [SL:SENDER [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION FATHER ] ] ] [SL:DATE_TIME IN THE LAST HOUR ] ]", "raw_data": {"file_id": "test_1/messaging_test/00000656.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "have i received any messages from my father in the last hour?", "seqlogical": "[IN:GET_MESSAGE have [SL:RECIPIENT i ] received any messages from [SL:SENDER [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION father ] ] ] [SL:DATE_TIME in the last hour ] ? ]", "normalized_utterance": "HAVE I RECEIVED ANY MESSAGES FROM MY FATHER IN THE LAST HOUR", "normalized_seqlogical": "[IN:GET_MESSAGE HAVE [SL:RECIPIENT I ] RECEIVED ANY MESSAGES FROM [SL:SENDER [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION FATHER ] ] ] [SL:DATE_TIME IN THE LAST HOUR ] ]", "decoupled_normalized_seqlogical": "[IN:GET_MESSAGE [SL:RECIPIENT I ] [SL:SENDER [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION FATHER ] ] ] [SL:DATE_TIME IN THE LAST HOUR ] ]"}, "prediction": "", "function_calls": [{"name": "get_message", "arguments": {"sender": "father", "date_time": "last hour"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00002630.wav", "split": "test", "intent": "[IN:SEND_MESSAGE can you text to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION husband ] ] ] ? ]", "parameters": {}, "sentence": "can you text to my husband?", "domain": "messaging", "gender": "Male", "native": "Unanswered", "normalized_utterance": "CAN YOU TEXT TO MY HUSBAND", "normalized_seqlogical": "[IN:SEND_MESSAGE CAN YOU TEXT TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION HUSBAND ] ] ] ]", "raw_data": {"file_id": "test_1/messaging_test/00002630.wav", "domain": "messaging", "gender": "Male", "native": "Unanswered", "utterance": "can you text to my husband?", "seqlogical": "[IN:SEND_MESSAGE can you text to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION husband ] ] ] ? ]", "normalized_utterance": "CAN YOU TEXT TO MY HUSBAND", "normalized_seqlogical": "[IN:SEND_MESSAGE CAN YOU TEXT TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION HUSBAND ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION HUSBAND ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "husband", "content_exact": "Can you text to my husband?"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00002158.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Send message back to [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION cousin ] ] ] ]", "parameters": {}, "sentence": "Send message back to cousin", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "SEND MESSAGE BACK TO COUSIN", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND MESSAGE BACK TO [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION COUSIN ] ] ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00002158.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "Send message back to cousin", "seqlogical": "[IN:SEND_MESSAGE Send message back to [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION cousin ] ] ] ]", "normalized_utterance": "SEND MESSAGE BACK TO COUSIN", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND MESSAGE BACK TO [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION COUSIN ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION COUSIN ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "cousin", "content_exact": "back"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00001394.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Send the [SL:TYPE_CONTENT photo ] to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION parents ] ] ] ]", "parameters": {}, "sentence": "Send the photo to my parents", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "SEND THE PHOTO TO MY PARENTS", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND THE [SL:TYPE_CONTENT PHOTO ] TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION PARENTS ] ] ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00001394.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "Send the photo to my parents", "seqlogical": "[IN:SEND_MESSAGE Send the [SL:TYPE_CONTENT photo ] to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION parents ] ] ] ]", "normalized_utterance": "SEND THE PHOTO TO MY PARENTS", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND THE [SL:TYPE_CONTENT PHOTO ] TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION PARENTS ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:TYPE_CONTENT PHOTO ] [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION PARENTS ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "my parents", "content_exact": "Send the photo"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00002410.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Dad ] ] ] about [SL:CONTENT_EXACT his appointment today ] . ]", "parameters": {}, "sentence": "Message Dad about his appointment today.", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "MESSAGE DAD ABOUT HIS APPOINTMENT TODAY", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ABOUT [SL:CONTENT_EXACT HIS APPOINTMENT TODAY ] ]", "raw_data": {"file_id": "test_1/messaging_test/00002410.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "Message Dad about his appointment today.", "seqlogical": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Dad ] ] ] about [SL:CONTENT_EXACT his appointment today ] . ]", "normalized_utterance": "MESSAGE DAD ABOUT HIS APPOINTMENT TODAY", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ABOUT [SL:CONTENT_EXACT HIS APPOINTMENT TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] [SL:CONTENT_EXACT HIS APPOINTMENT TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "about his appointment today.", "recipient": "dad"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00000544.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Uncle ] [SL:CONTACT Herman ] ] ] to let him know [SL:CONTENT_EXACT I've mailed out the flyer with directions to the family reunion ] ]", "parameters": {}, "sentence": "Message Uncle Herman to let him know I've mailed out the flyer with directions to the family reunion", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "MESSAGE UNCLE HERMAN TO LET HIM KNOW I'VE MAILED OUT THE FLYER WITH DIRECTIONS TO THE FAMILY REUNION", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION UNCLE ] [SL:CONTACT HERMAN ] ] ] TO LET HIM KNOW [SL:CONTENT_EXACT I'VE MAILED OUT THE FLYER WITH DIRECTIONS TO THE FAMILY REUNION ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00000544.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "Message Uncle Herman to let him know I've mailed out the flyer with directions to the family reunion", "seqlogical": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Uncle ] [SL:CONTACT Herman ] ] ] to let him know [SL:CONTENT_EXACT I've mailed out the flyer with directions to the family reunion ] ]", "normalized_utterance": "MESSAGE UNCLE HERMAN TO LET HIM KNOW I'VE MAILED OUT THE FLYER WITH DIRECTIONS TO THE FAMILY REUNION", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION UNCLE ] [SL:CONTACT HERMAN ] ] ] TO LET HIM KNOW [SL:CONTENT_EXACT I'VE MAILED OUT THE FLYER WITH DIRECTIONS TO THE FAMILY REUNION ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION UNCLE ] [SL:CONTACT HERMAN ] ] ] [SL:CONTENT_EXACT I'VE MAILED OUT THE FLYER WITH DIRECTIONS TO THE FAMILY REUNION ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "I've mailed out the flyers with directions to the family reunion.", "recipient": "Uncle Herman"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00002946.wav", "split": "test", "intent": "[IN:SEND_MESSAGE message for [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] : [SL:CONTENT_EXACT how are you doing ] ? ]", "parameters": {}, "sentence": "message for mom: how are you doing?", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "MESSAGE FOR MOM HOW ARE YOU DOING", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE FOR [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT HOW ARE YOU DOING ] ]", "raw_data": {"file_id": "test_1/messaging_test/00002946.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "message for mom: how are you doing?", "seqlogical": "[IN:SEND_MESSAGE message for [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] : [SL:CONTENT_EXACT how are you doing ] ? ]", "normalized_utterance": "MESSAGE FOR MOM HOW ARE YOU DOING", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE FOR [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT HOW ARE YOU DOING ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT HOW ARE YOU DOING ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "mom", "content_exact": "How are you doing?"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00001810.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Dad ] ] ] that [SL:CONTENT_EXACT I'm stopping by the store ] . ]", "parameters": {}, "sentence": "Message Dad that I'm stopping by the store.", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "MESSAGE DAD THAT I'M STOPPING BY THE STORE", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] THAT [SL:CONTENT_EXACT I'M STOPPING BY THE STORE ] ]", "raw_data": {"file_id": "test_1/messaging_test/00001810.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "Message Dad that I'm stopping by the store.", "seqlogical": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Dad ] ] ] that [SL:CONTENT_EXACT I'm stopping by the store ] . ]", "normalized_utterance": "MESSAGE DAD THAT I'M STOPPING BY THE STORE", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] THAT [SL:CONTENT_EXACT I'M STOPPING BY THE STORE ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] [SL:CONTENT_EXACT I'M STOPPING BY THE STORE ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "I'm stopping by the store.", "recipient": "dad"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00002961.wav", "split": "test", "intent": "[IN:SEND_MESSAGE send [SL:CONTENT_EXACT thanks ] [SL:TYPE_CONTENT gif ] to [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION dad ] ] ] . ]", "parameters": {}, "sentence": "send thanks gif to dad.", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "SEND THANKS GIF TO DAD", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND [SL:CONTENT_EXACT THANKS ] [SL:TYPE_CONTENT GIF ] TO [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ]", "raw_data": {"file_id": "test_1/messaging_test/00002961.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "send thanks gif to dad.", "seqlogical": "[IN:SEND_MESSAGE send [SL:CONTENT_EXACT thanks ] [SL:TYPE_CONTENT gif ] to [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION dad ] ] ] . ]", "normalized_utterance": "SEND THANKS GIF TO DAD", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND [SL:CONTENT_EXACT THANKS ] [SL:TYPE_CONTENT GIF ] TO [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:CONTENT_EXACT THANKS ] [SL:TYPE_CONTENT GIF ] [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "dad", "content_exact": "thanks gif"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00002763.wav", "split": "test", "intent": "[IN:SEND_MESSAGE message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Mom ] ] ] [SL:CONTENT_EXACT Yeah . I have a class at two ] . ]", "parameters": {}, "sentence": "message Mom Yeah. I have a class at two.", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "MESSAGE MOM YEAH I HAVE A CLASS AT TWO", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT YEAH I HAVE A CLASS AT TWO ] ]", "raw_data": {"file_id": "test_1/messaging_test/00002763.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "message Mom Yeah. I have a class at two.", "seqlogical": "[IN:SEND_MESSAGE message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Mom ] ] ] [SL:CONTENT_EXACT Yeah . I have a class at two ] . ]", "normalized_utterance": "MESSAGE MOM YEAH I HAVE A CLASS AT TWO", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT YEAH I HAVE A CLASS AT TWO ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT YEAH I HAVE A CLASS AT TWO ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "yeah, I have a class at two.", "recipient": "mom"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00000086.wav", "split": "test", "intent": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION UNCLE ] ] ] THAT [SL:CONTENT_EXACT I'M PUTTING $ 10 IN GAS IN THE CAR ] ]", "parameters": {}, "sentence": "MESSAGE MY UNCLE THAT I'M PUTTING $10 IN GAS IN THE CAR", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "MESSAGE MY UNCLE THAT I'M PUTTING TEN CENTS IN GAS IN THE CAR", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION UNCLE ] ] ] THAT [SL:CONTENT_EXACT I'M PUTTING TEN CENTS IN GAS IN THE CAR ] ]", "raw_data": {"file_id": "test_1/messaging_test/00000086.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "MESSAGE MY UNCLE THAT I'M PUTTING $10 IN GAS IN THE CAR", "seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION UNCLE ] ] ] THAT [SL:CONTENT_EXACT I'M PUTTING $ 10 IN GAS IN THE CAR ] ]", "normalized_utterance": "MESSAGE MY UNCLE THAT I'M PUTTING TEN CENTS IN GAS IN THE CAR", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION UNCLE ] ] ] THAT [SL:CONTENT_EXACT I'M PUTTING TEN CENTS IN GAS IN THE CAR ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION UNCLE ] ] ] [SL:CONTENT_EXACT I'M PUTTING TEN CENTS IN GAS IN THE CAR ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "I'm putting ten dollars in gas in the car.", "recipient": "uncle"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00002818.wav", "split": "test", "intent": "[IN:SEND_MESSAGE phone , send a message to [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mum ] ] ] saying [SL:CONTENT_EXACT BRB I'm driving ] . ]", "parameters": {}, "sentence": "phone, send a message to mum saying BRB I'm driving.", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "PHONE SEND A MESSAGE TO MUM SAYING BRB I'M DRIVING", "normalized_seqlogical": "[IN:SEND_MESSAGE PHONE SEND A MESSAGE TO [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MUM ] ] ] SAYING [SL:CONTENT_EXACT BRB I'M DRIVING ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00002818.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "phone, send a message to mum saying BRB I'm driving.", "seqlogical": "[IN:SEND_MESSAGE phone , send a message to [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mum ] ] ] saying [SL:CONTENT_EXACT BRB I'm driving ] . ]", "normalized_utterance": "PHONE SEND A MESSAGE TO MUM SAYING BRB I'M DRIVING", "normalized_seqlogical": "[IN:SEND_MESSAGE PHONE SEND A MESSAGE TO [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MUM ] ] ] SAYING [SL:CONTENT_EXACT BRB I'M DRIVING ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MUM ] ] ] [SL:CONTENT_EXACT BRB I'M DRIVING ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "BRB, I'm driving.", "recipient": "mom"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00002913.wav", "split": "test", "intent": "[IN:SEND_MESSAGE message [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION wife ] ] ] and ask her to [SL:CONTENT_EXACT bring in some Bleach ] . ]", "parameters": {}, "sentence": "message my wife and ask her to bring in some Bleach.", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "MESSAGE MY WIFE AND ASK HER TO BRING IN SOME BLEACH", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION WIFE ] ] ] AND ASK HER TO [SL:CONTENT_EXACT BRING IN SOME BLEACH ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00002913.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "message my wife and ask her to bring in some Bleach.", "seqlogical": "[IN:SEND_MESSAGE message [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION wife ] ] ] and ask her to [SL:CONTENT_EXACT bring in some Bleach ] . ]", "normalized_utterance": "MESSAGE MY WIFE AND ASK HER TO BRING IN SOME BLEACH", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION WIFE ] ] ] AND ASK HER TO [SL:CONTENT_EXACT BRING IN SOME BLEACH ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION WIFE ] ] ] [SL:CONTENT_EXACT BRING IN SOME BLEACH ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "ask her to bring in some bleach", "recipient": "my wife"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00001102.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] and tell her [SL:CONTENT_EXACT it will take her 25 minutes to get from home to the theater ] . ]", "parameters": {}, "sentence": "Message mom and tell her it will take her 25 minutes to get from home to the theater.", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "MESSAGE MOM AND TELL HER IT WILL TAKE HER TWENTY FIVE MINUTES TO GET FROM HOME TO THE THEATER", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] AND TELL HER [SL:CONTENT_EXACT IT WILL TAKE HER TWENTY FIVE MINUTES TO GET FROM HOME TO THE THEATER ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00001102.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "Message mom and tell her it will take her 25 minutes to get from home to the theater.", "seqlogical": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] and tell her [SL:CONTENT_EXACT it will take her 25 minutes to get from home to the theater ] . ]", "normalized_utterance": "MESSAGE MOM AND TELL HER IT WILL TAKE HER TWENTY FIVE MINUTES TO GET FROM HOME TO THE THEATER", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] AND TELL HER [SL:CONTENT_EXACT IT WILL TAKE HER TWENTY FIVE MINUTES TO GET FROM HOME TO THE THEATER ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT IT WILL TAKE HER TWENTY FIVE MINUTES TO GET FROM HOME TO THE THEATER ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "it will take her twenty-five minutes to get from home to the theater.", "recipient": "Mom"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00000129.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Ask [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION dad ] ] ] to [SL:CONTENT_EXACT send me money for food ] . ]", "parameters": {}, "sentence": "Ask my dad to send me money for food.", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "ASK MY DAD TO SEND ME MONEY FOR FOOD", "normalized_seqlogical": "[IN:SEND_MESSAGE ASK [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAD ] ] ] TO [SL:CONTENT_EXACT SEND ME MONEY FOR FOOD ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00000129.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "Ask my dad to send me money for food.", "seqlogical": "[IN:SEND_MESSAGE Ask [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION dad ] ] ] to [SL:CONTENT_EXACT send me money for food ] . ]", "normalized_utterance": "ASK MY DAD TO SEND ME MONEY FOR FOOD", "normalized_seqlogical": "[IN:SEND_MESSAGE ASK [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAD ] ] ] TO [SL:CONTENT_EXACT SEND ME MONEY FOR FOOD ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAD ] ] ] [SL:CONTENT_EXACT SEND ME MONEY FOR FOOD ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "send me money for food", "recipient": "dad"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00001965.wav", "split": "test", "intent": "[IN:REACT_MESSAGE [SL:TYPE_REACTION Mad ] [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION dad ] ] ] 's text message ]", "parameters": {}, "sentence": "Mad dad's text message", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "MAD DAD 'S TEXT MESSAGE", "normalized_seqlogical": "[IN:REACT_MESSAGE [SL:TYPE_REACTION MAD ] [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] 'S TEXT MESSAGE ]", "raw_data": {"file_id": "test_0/messaging_test_0/00001965.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "Mad dad's text message", "seqlogical": "[IN:REACT_MESSAGE [SL:TYPE_REACTION Mad ] [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION dad ] ] ] 's text message ]", "normalized_utterance": "MAD DAD 'S TEXT MESSAGE", "normalized_seqlogical": "[IN:REACT_MESSAGE [SL:TYPE_REACTION MAD ] [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] 'S TEXT MESSAGE ]", "decoupled_normalized_seqlogical": "[IN:REACT_MESSAGE [SL:TYPE_REACTION MAD ] [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_message", "arguments": {"recipient": "dad"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00002665.wav", "split": "test", "intent": "[IN:SEND_MESSAGE text [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mother in law ] ] ] that [SL:CONTENT_EXACT I will visit her this weekend ] . ]", "parameters": {}, "sentence": "text my mother in law that I will visit her this weekend.", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "TEXT MY MOTHER IN LAW THAT I WILL VISIT HER THIS WEEKEND", "normalized_seqlogical": "[IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOTHER IN LAW ] ] ] THAT [SL:CONTENT_EXACT I WILL VISIT HER THIS WEEKEND ] ]", "raw_data": {"file_id": "test_1/messaging_test/00002665.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "text my mother in law that I will visit her this weekend.", "seqlogical": "[IN:SEND_MESSAGE text [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mother in law ] ] ] that [SL:CONTENT_EXACT I will visit her this weekend ] . ]", "normalized_utterance": "TEXT MY MOTHER IN LAW THAT I WILL VISIT HER THIS WEEKEND", "normalized_seqlogical": "[IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOTHER IN LAW ] ] ] THAT [SL:CONTENT_EXACT I WILL VISIT HER THIS WEEKEND ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOTHER IN LAW ] ] ] [SL:CONTENT_EXACT I WILL VISIT HER THIS WEEKEND ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "I will visit her this weekend.", "recipient": "my mother-in-law"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00001595.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Reply to the group chat with [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] ] ] and [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Aunt ] [SL:CONTACT Jane ] ] ] ]", "parameters": {}, "sentence": "Reply to the group chat with my mom and Aunt Jane", "domain": "messaging", "gender": "Male", "native": "Unanswered", "normalized_utterance": "REPLY TO THE GROUP CHAT WITH MY MOM AND AUNT JANE", "normalized_seqlogical": "[IN:SEND_MESSAGE REPLY TO THE GROUP CHAT WITH [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] AND [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION AUNT ] [SL:CONTACT JANE ] ] ] ]", "raw_data": {"file_id": "test_1/messaging_test/00001595.wav", "domain": "messaging", "gender": "Male", "native": "Unanswered", "utterance": "Reply to the group chat with my mom and Aunt Jane", "seqlogical": "[IN:SEND_MESSAGE Reply to the group chat with [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] ] ] and [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Aunt ] [SL:CONTACT Jane ] ] ] ]", "normalized_utterance": "REPLY TO THE GROUP CHAT WITH MY MOM AND AUNT JANE", "normalized_seqlogical": "[IN:SEND_MESSAGE REPLY TO THE GROUP CHAT WITH [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] AND [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION AUNT ] [SL:CONTACT JANE ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION AUNT ] [SL:CONTACT JANE ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "Reply to the group chat with my mom and Aunt Jane", "recipient": "group chat with my mom and Aunt Jane"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00002665.wav", "split": "test", "intent": "[IN:SEND_MESSAGE text [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mother in law ] ] ] that [SL:CONTENT_EXACT I will visit her this weekend ] . ]", "parameters": {}, "sentence": "text my mother in law that I will visit her this weekend.", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "TEXT MY MOTHER IN LAW THAT I WILL VISIT HER THIS WEEKEND", "normalized_seqlogical": "[IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOTHER IN LAW ] ] ] THAT [SL:CONTENT_EXACT I WILL VISIT HER THIS WEEKEND ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00002665.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "text my mother in law that I will visit her this weekend.", "seqlogical": "[IN:SEND_MESSAGE text [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mother in law ] ] ] that [SL:CONTENT_EXACT I will visit her this weekend ] . ]", "normalized_utterance": "TEXT MY MOTHER IN LAW THAT I WILL VISIT HER THIS WEEKEND", "normalized_seqlogical": "[IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOTHER IN LAW ] ] ] THAT [SL:CONTENT_EXACT I WILL VISIT HER THIS WEEKEND ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOTHER IN LAW ] ] ] [SL:CONTENT_EXACT I WILL VISIT HER THIS WEEKEND ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "I will visit her this weekend.", "recipient": "mother-in-law"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00002660.wav", "split": "test", "intent": "[IN:SEND_MESSAGE message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Mom ] ] ] [SL:CONTENT_EXACT I love you ] . ]", "parameters": {}, "sentence": "message Mom I love you.", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "MESSAGE MOM I LOVE YOU", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT I LOVE YOU ] ]", "raw_data": {"file_id": "test_1/messaging_test/00002660.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "message Mom I love you.", "seqlogical": "[IN:SEND_MESSAGE message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Mom ] ] ] [SL:CONTENT_EXACT I love you ] . ]", "normalized_utterance": "MESSAGE MOM I LOVE YOU", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT I LOVE YOU ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT I LOVE YOU ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "mom", "content_exact": "I love you."}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00000213.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] ] ] asking [SL:CONTENT_EXACT what she wants for dinner ] ]", "parameters": {}, "sentence": "Message my mom asking what she wants for dinner", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "MESSAGE MY MOM ASKING WHAT SHE WANTS FOR DINNER", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] ASKING [SL:CONTENT_EXACT WHAT SHE WANTS FOR DINNER ] ]", "raw_data": {"file_id": "test_1/messaging_test/00000213.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "Message my mom asking what she wants for dinner", "seqlogical": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] ] ] asking [SL:CONTENT_EXACT what she wants for dinner ] ]", "normalized_utterance": "MESSAGE MY MOM ASKING WHAT SHE WANTS FOR DINNER", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] ASKING [SL:CONTENT_EXACT WHAT SHE WANTS FOR DINNER ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT WHAT SHE WANTS FOR DINNER ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "What do you want for dinner?", "recipient": "mom"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00001436.wav", "split": "test", "intent": "[IN:SEND_MESSAGE [SL:RESOURCE Skype ] [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] , please . ]", "parameters": {}, "sentence": "Skype mom, please.", "domain": "messaging", "gender": "Male", "native": "Yes", "normalized_utterance": "SKYPE MOM PLEASE", "normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RESOURCE SKYPE ] [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] PLEASE ]", "raw_data": {"file_id": "test_0/messaging_test_0/00001436.wav", "domain": "messaging", "gender": "Male", "native": "Yes", "utterance": "Skype mom, please.", "seqlogical": "[IN:SEND_MESSAGE [SL:RESOURCE Skype ] [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] , please . ]", "normalized_utterance": "SKYPE MOM PLEASE", "normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RESOURCE SKYPE ] [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] PLEASE ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RESOURCE SKYPE ] [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "mum", "content_exact": "Skype"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00005524.wav", "split": "test", "intent": "[IN:GET_WEATHER what 's the [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER local ] ] ] radar ]", "parameters": {}, "sentence": "what's the local radar", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT 'S THE LOCAL RADAR", "normalized_seqlogical": "[IN:GET_WEATHER WHAT 'S THE [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER LOCAL ] ] ] RADAR ]", "raw_data": {"file_id": "test_0/weather_test_0/00005524.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "what's the local radar", "seqlogical": "[IN:GET_WEATHER what 's the [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER local ] ] ] radar ]", "normalized_utterance": "WHAT 'S THE LOCAL RADAR", "normalized_seqlogical": "[IN:GET_WEATHER WHAT 'S THE [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER LOCAL ] ] ] RADAR ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER LOCAL ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "radar"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00005269.wav", "split": "test", "intent": "[IN:GET_WEATHER Talk to me about the weather in [SL:LOCATION Rome Italy ] ]", "parameters": {}, "sentence": "Talk to me about the weather in Rome Italy", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "TALK TO ME ABOUT THE WEATHER IN ROME ITALY", "normalized_seqlogical": "[IN:GET_WEATHER TALK TO ME ABOUT THE WEATHER IN [SL:LOCATION ROME ITALY ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00005269.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "Talk to me about the weather in Rome Italy", "seqlogical": "[IN:GET_WEATHER Talk to me about the weather in [SL:LOCATION Rome Italy ] ]", "normalized_utterance": "TALK TO ME ABOUT THE WEATHER IN ROME ITALY", "normalized_seqlogical": "[IN:GET_WEATHER TALK TO ME ABOUT THE WEATHER IN [SL:LOCATION ROME ITALY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:LOCATION ROME ITALY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"location": "Rome, Italy"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00002663.wav", "split": "test", "intent": "[IN:GET_WEATHER Do I need a [SL:WEATHER_ATTRIBUTE jacket ] [SL:DATE_TIME tonight ] ? ]", "parameters": {}, "sentence": "Do I need a jacket tonight?", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "DO I NEED A JACKET TONIGHT", "normalized_seqlogical": "[IN:GET_WEATHER DO I NEED A [SL:WEATHER_ATTRIBUTE JACKET ] [SL:DATE_TIME TONIGHT ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00002663.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "Do I need a jacket tonight?", "seqlogical": "[IN:GET_WEATHER Do I need a [SL:WEATHER_ATTRIBUTE jacket ] [SL:DATE_TIME tonight ] ? ]", "normalized_utterance": "DO I NEED A JACKET TONIGHT", "normalized_seqlogical": "[IN:GET_WEATHER DO I NEED A [SL:WEATHER_ATTRIBUTE JACKET ] [SL:DATE_TIME TONIGHT ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE JACKET ] [SL:DATE_TIME TONIGHT ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "temperature", "date_time": "tonight"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00005634.wav", "split": "test", "intent": "[IN:GET_WEATHER Show me [SL:DATE_TIME Saturday ] 's forecast ]", "parameters": {}, "sentence": "Show me Saturday's forecast", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "SHOW ME SATURDAY 'S FORECAST", "normalized_seqlogical": "[IN:GET_WEATHER SHOW ME [SL:DATE_TIME SATURDAY ] 'S FORECAST ]", "raw_data": {"file_id": "test_1/weather_test/00005634.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "Show me Saturday's forecast", "seqlogical": "[IN:GET_WEATHER Show me [SL:DATE_TIME Saturday ] 's forecast ]", "normalized_utterance": "SHOW ME SATURDAY 'S FORECAST", "normalized_seqlogical": "[IN:GET_WEATHER SHOW ME [SL:DATE_TIME SATURDAY ] 'S FORECAST ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:DATE_TIME SATURDAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"date_time": "Saturday"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00000617.wav", "split": "test", "intent": "[IN:GET_WEATHER what is the weather [SL:DATE_TIME today ] ]", "parameters": {}, "sentence": "what is the weather today", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT IS THE WEATHER TODAY", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE WEATHER [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_1/weather_test/00000617.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "what is the weather today", "seqlogical": "[IN:GET_WEATHER what is the weather [SL:DATE_TIME today ] ]", "normalized_utterance": "WHAT IS THE WEATHER TODAY", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE WEATHER [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"date_time": "today"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00002052.wav", "split": "test", "intent": "[IN:GET_WEATHER Do I need an [SL:WEATHER_ATTRIBUTE umbrella ] [SL:DATE_TIME today ] ? ]", "parameters": {}, "sentence": "Do I need an umbrella today?", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "DO I NEED AN UMBRELLA TODAY", "normalized_seqlogical": "[IN:GET_WEATHER DO I NEED AN [SL:WEATHER_ATTRIBUTE UMBRELLA ] [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00002052.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "Do I need an umbrella today?", "seqlogical": "[IN:GET_WEATHER Do I need an [SL:WEATHER_ATTRIBUTE umbrella ] [SL:DATE_TIME today ] ? ]", "normalized_utterance": "DO I NEED AN UMBRELLA TODAY", "normalized_seqlogical": "[IN:GET_WEATHER DO I NEED AN [SL:WEATHER_ATTRIBUTE UMBRELLA ] [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE UMBRELLA ] [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "rainfall"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00003655.wav", "split": "test", "intent": "[IN:GET_WEATHER does the weather make it unsafe to drive [SL:LOCATION out ] ]", "parameters": {}, "sentence": "does the weather make it unsafe to drive out", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "DOES THE WEATHER MAKE IT UNSAFE TO DRIVE OUT", "normalized_seqlogical": "[IN:GET_WEATHER DOES THE WEATHER MAKE IT UNSAFE TO DRIVE [SL:LOCATION OUT ] ]", "raw_data": {"file_id": "test_1/weather_test/00003655.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "does the weather make it unsafe to drive out", "seqlogical": "[IN:GET_WEATHER does the weather make it unsafe to drive [SL:LOCATION out ] ]", "normalized_utterance": "DOES THE WEATHER MAKE IT UNSAFE TO DRIVE OUT", "normalized_seqlogical": "[IN:GET_WEATHER DOES THE WEATHER MAKE IT UNSAFE TO DRIVE [SL:LOCATION OUT ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:LOCATION OUT ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_road_condition", "arguments": {"road_condition": "unsafe"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00003461.wav", "split": "test", "intent": "[IN:UNSUPPORTED_WEATHER Where was it [SL:WEATHER_ATTRIBUTE coldest ] ]", "parameters": {}, "sentence": "Where was it coldest", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "WHERE WAS IT COLDEST", "normalized_seqlogical": "[IN:UNSUPPORTED_WEATHER WHERE WAS IT [SL:WEATHER_ATTRIBUTE COLDEST ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00003461.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "Where was it coldest", "seqlogical": "[IN:UNSUPPORTED_WEATHER Where was it [SL:WEATHER_ATTRIBUTE coldest ] ]", "normalized_utterance": "WHERE WAS IT COLDEST", "normalized_seqlogical": "[IN:UNSUPPORTED_WEATHER WHERE WAS IT [SL:WEATHER_ATTRIBUTE COLDEST ] ]", "decoupled_normalized_seqlogical": "[IN:UNSUPPORTED_WEATHER [SL:WEATHER_ATTRIBUTE COLDEST ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "coldest"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00000265.wav", "split": "test", "intent": "[IN:GET_WEATHER Will I need [SL:WEATHER_ATTRIBUTE boots ] [SL:DATE_TIME today ] ]", "parameters": {}, "sentence": "Will I need boots today", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "WILL I NEED BOOTS TODAY", "normalized_seqlogical": "[IN:GET_WEATHER WILL I NEED [SL:WEATHER_ATTRIBUTE BOOTS ] [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_1/weather_test/00000265.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "Will I need boots today", "seqlogical": "[IN:GET_WEATHER Will I need [SL:WEATHER_ATTRIBUTE boots ] [SL:DATE_TIME today ] ]", "normalized_utterance": "WILL I NEED BOOTS TODAY", "normalized_seqlogical": "[IN:GET_WEATHER WILL I NEED [SL:WEATHER_ATTRIBUTE BOOTS ] [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE BOOTS ] [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "rainfall"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00004322.wav", "split": "test", "intent": "[IN:GET_WEATHER any news on the [SL:WEATHER_ATTRIBUTE tropical storm ] ]", "parameters": {}, "sentence": "any news on the tropical storm", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "ANY NEWS ON THE TROPICAL STORM", "normalized_seqlogical": "[IN:GET_WEATHER ANY NEWS ON THE [SL:WEATHER_ATTRIBUTE TROPICAL STORM ] ]", "raw_data": {"file_id": "test_1/weather_test/00004322.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "any news on the tropical storm", "seqlogical": "[IN:GET_WEATHER any news on the [SL:WEATHER_ATTRIBUTE tropical storm ] ]", "normalized_utterance": "ANY NEWS ON THE TROPICAL STORM", "normalized_seqlogical": "[IN:GET_WEATHER ANY NEWS ON THE [SL:WEATHER_ATTRIBUTE TROPICAL STORM ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE TROPICAL STORM ] ]"}, "prediction": "", "function_calls": [{"name": "unsupported_weather", "arguments": {"weather_attribute": "tropical storm"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00001546.wav", "split": "test", "intent": "[IN:GET_WEATHER is [SL:WEATHER_ATTRIBUTE rain ] in the forecast ]", "parameters": {}, "sentence": "is rain in the forecast", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "IS RAIN IN THE FORECAST", "normalized_seqlogical": "[IN:GET_WEATHER IS [SL:WEATHER_ATTRIBUTE RAIN ] IN THE FORECAST ]", "raw_data": {"file_id": "test_1/weather_test/00001546.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "is rain in the forecast", "seqlogical": "[IN:GET_WEATHER is [SL:WEATHER_ATTRIBUTE rain ] in the forecast ]", "normalized_utterance": "IS RAIN IN THE FORECAST", "normalized_seqlogical": "[IN:GET_WEATHER IS [SL:WEATHER_ATTRIBUTE RAIN ] IN THE FORECAST ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE RAIN ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "rain"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00003697.wav", "split": "test", "intent": "[IN:GET_WEATHER How much [SL:WEATHER_ATTRIBUTE snow ] is expected to fall ]", "parameters": {}, "sentence": "How much snow is expected to fall", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "HOW MUCH SNOW IS EXPECTED TO FALL", "normalized_seqlogical": "[IN:GET_WEATHER HOW MUCH [SL:WEATHER_ATTRIBUTE SNOW ] IS EXPECTED TO FALL ]", "raw_data": {"file_id": "test_0/weather_test_0/00003697.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "How much snow is expected to fall", "seqlogical": "[IN:GET_WEATHER How much [SL:WEATHER_ATTRIBUTE snow ] is expected to fall ]", "normalized_utterance": "HOW MUCH SNOW IS EXPECTED TO FALL", "normalized_seqlogical": "[IN:GET_WEATHER HOW MUCH [SL:WEATHER_ATTRIBUTE SNOW ] IS EXPECTED TO FALL ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE SNOW ] ]"}, "prediction": "", "function_calls": [{"name": "unsupported_weather", "arguments": {"weather_attribute": "snowfall"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00005063.wav", "split": "test", "intent": "[IN:GET_WEATHER How is the weather in [SL:LOCATION Dublin , Ireland ] [SL:DATE_TIME for next Monday ] ? ]", "parameters": {}, "sentence": "How is the weather in Dublin, Ireland for next Monday?", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "HOW IS THE WEATHER IN DUBLIN IRELAND FOR NEXT MONDAY", "normalized_seqlogical": "[IN:GET_WEATHER HOW IS THE WEATHER IN [SL:LOCATION DUBLIN IRELAND ] [SL:DATE_TIME FOR NEXT MONDAY ] ]", "raw_data": {"file_id": "test_1/weather_test/00005063.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "How is the weather in Dublin, Ireland for next Monday?", "seqlogical": "[IN:GET_WEATHER How is the weather in [SL:LOCATION Dublin , Ireland ] [SL:DATE_TIME for next Monday ] ? ]", "normalized_utterance": "HOW IS THE WEATHER IN DUBLIN IRELAND FOR NEXT MONDAY", "normalized_seqlogical": "[IN:GET_WEATHER HOW IS THE WEATHER IN [SL:LOCATION DUBLIN IRELAND ] [SL:DATE_TIME FOR NEXT MONDAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:LOCATION DUBLIN IRELAND ] [SL:DATE_TIME FOR NEXT MONDAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"location": "Dublin, Ireland", "date_time": "next Monday"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00004336.wav", "split": "test", "intent": "[IN:GET_WEATHER when will the [SL:WEATHER_ATTRIBUTE hurricane ] it [SL:LOCATION florida ] ]", "parameters": {}, "sentence": "when will the hurricane it florida", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "WHEN WILL THE HURRICANE IT FLORIDA", "normalized_seqlogical": "[IN:GET_WEATHER WHEN WILL THE [SL:WEATHER_ATTRIBUTE HURRICANE ] IT [SL:LOCATION FLORIDA ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00004336.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "when will the hurricane it florida", "seqlogical": "[IN:GET_WEATHER when will the [SL:WEATHER_ATTRIBUTE hurricane ] it [SL:LOCATION florida ] ]", "normalized_utterance": "WHEN WILL THE HURRICANE IT FLORIDA", "normalized_seqlogical": "[IN:GET_WEATHER WHEN WILL THE [SL:WEATHER_ATTRIBUTE HURRICANE ] IT [SL:LOCATION FLORIDA ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE HURRICANE ] [SL:LOCATION FLORIDA ] ]"}, "prediction": "", "function_calls": [{"name": "unsupported_weather", "arguments": {"weather_attribute": "hurricane", "location": "Florida"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00001681.wav", "split": "test", "intent": "[IN:GET_WEATHER Are there any [SL:WEATHER_ATTRIBUTE thunderstorms ] in the [SL:LOCATION area ] [SL:DATE_TIME today ] ? ]", "parameters": {}, "sentence": "Are there any thunderstorms in the area today?", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "ARE THERE ANY THUNDERSTORMS IN THE AREA TODAY", "normalized_seqlogical": "[IN:GET_WEATHER ARE THERE ANY [SL:WEATHER_ATTRIBUTE THUNDERSTORMS ] IN THE [SL:LOCATION AREA ] [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00001681.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "Are there any thunderstorms in the area today?", "seqlogical": "[IN:GET_WEATHER Are there any [SL:WEATHER_ATTRIBUTE thunderstorms ] in the [SL:LOCATION area ] [SL:DATE_TIME today ] ? ]", "normalized_utterance": "ARE THERE ANY THUNDERSTORMS IN THE AREA TODAY", "normalized_seqlogical": "[IN:GET_WEATHER ARE THERE ANY [SL:WEATHER_ATTRIBUTE THUNDERSTORMS ] IN THE [SL:LOCATION AREA ] [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE THUNDERSTORMS ] [SL:LOCATION AREA ] [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "thunderstorms"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00005096.wav", "split": "test", "intent": "[IN:GET_WEATHER Do I need to wear a [SL:WEATHER_ATTRIBUTE coat ] outside ]", "parameters": {}, "sentence": "Do I need to wear a coat outside", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "DO I NEED TO WEAR A COAT OUTSIDE", "normalized_seqlogical": "[IN:GET_WEATHER DO I NEED TO WEAR A [SL:WEATHER_ATTRIBUTE COAT ] OUTSIDE ]", "raw_data": {"file_id": "test_1/weather_test/00005096.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "Do I need to wear a coat outside", "seqlogical": "[IN:GET_WEATHER Do I need to wear a [SL:WEATHER_ATTRIBUTE coat ] outside ]", "normalized_utterance": "DO I NEED TO WEAR A COAT OUTSIDE", "normalized_seqlogical": "[IN:GET_WEATHER DO I NEED TO WEAR A [SL:WEATHER_ATTRIBUTE COAT ] OUTSIDE ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE COAT ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "temperature"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00005030.wav", "split": "test", "intent": "[IN:GET_WEATHER Is it [SL:WEATHER_ATTRIBUTE warm ] in [SL:LOCATION Florida ] [SL:DATE_TIME in September ] ? ]", "parameters": {}, "sentence": "Is it warm in Florida in September?", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "IS IT WARM IN FLORIDA IN SEPTEMBER", "normalized_seqlogical": "[IN:GET_WEATHER IS IT [SL:WEATHER_ATTRIBUTE WARM ] IN [SL:LOCATION FLORIDA ] [SL:DATE_TIME IN SEPTEMBER ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00005030.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "Is it warm in Florida in September?", "seqlogical": "[IN:GET_WEATHER Is it [SL:WEATHER_ATTRIBUTE warm ] in [SL:LOCATION Florida ] [SL:DATE_TIME in September ] ? ]", "normalized_utterance": "IS IT WARM IN FLORIDA IN SEPTEMBER", "normalized_seqlogical": "[IN:GET_WEATHER IS IT [SL:WEATHER_ATTRIBUTE WARM ] IN [SL:LOCATION FLORIDA ] [SL:DATE_TIME IN SEPTEMBER ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE WARM ] [SL:LOCATION FLORIDA ] [SL:DATE_TIME IN SEPTEMBER ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"location": "Florida", "date_time": "September"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00001595.wav", "split": "test", "intent": "[IN:GET_WEATHER is there a [SL:WEATHER_ATTRIBUTE storm ] coming ]", "parameters": {}, "sentence": "is there a storm coming", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "IS THERE A STORM COMING", "normalized_seqlogical": "[IN:GET_WEATHER IS THERE A [SL:WEATHER_ATTRIBUTE STORM ] COMING ]", "raw_data": {"file_id": "test_0/weather_test_0/00001595.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "is there a storm coming", "seqlogical": "[IN:GET_WEATHER is there a [SL:WEATHER_ATTRIBUTE storm ] coming ]", "normalized_utterance": "IS THERE A STORM COMING", "normalized_seqlogical": "[IN:GET_WEATHER IS THERE A [SL:WEATHER_ATTRIBUTE STORM ] COMING ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE STORM ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "storm"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00002283.wav", "split": "test", "intent": "[IN:GET_WEATHER Are [SL:WEATHER_ATTRIBUTE storms ] predicted for [SL:LOCATION North Florida ] [SL:DATE_TIME this weekend ] ? ]", "parameters": {}, "sentence": "Are storms predicted for North Florida this weekend?", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "ARE STORMS PREDICTED FOR NORTH FLORIDA THIS WEEKEND", "normalized_seqlogical": "[IN:GET_WEATHER ARE [SL:WEATHER_ATTRIBUTE STORMS ] PREDICTED FOR [SL:LOCATION NORTH FLORIDA ] [SL:DATE_TIME THIS WEEKEND ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00002283.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "Are storms predicted for North Florida this weekend?", "seqlogical": "[IN:GET_WEATHER Are [SL:WEATHER_ATTRIBUTE storms ] predicted for [SL:LOCATION North Florida ] [SL:DATE_TIME this weekend ] ? ]", "normalized_utterance": "ARE STORMS PREDICTED FOR NORTH FLORIDA THIS WEEKEND", "normalized_seqlogical": "[IN:GET_WEATHER ARE [SL:WEATHER_ATTRIBUTE STORMS ] PREDICTED FOR [SL:LOCATION NORTH FLORIDA ] [SL:DATE_TIME THIS WEEKEND ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE STORMS ] [SL:LOCATION NORTH FLORIDA ] [SL:DATE_TIME THIS WEEKEND ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"location": "North Florida", "date_time": "this weekend", "weather_attribute": "storms"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00002024.wav", "split": "test", "intent": "[IN:GET_WEATHER Should I wear a [SL:WEATHER_ATTRIBUTE t - shirt ] in [SL:LOCATION Seattle ] ? ]", "parameters": {}, "sentence": "Should I wear a t-shirt in Seattle?", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "SHOULD I WEAR A T SHIRT IN SEATTLE", "normalized_seqlogical": "[IN:GET_WEATHER SHOULD I WEAR A [SL:WEATHER_ATTRIBUTE T SHIRT ] IN [SL:LOCATION SEATTLE ] ]", "raw_data": {"file_id": "test_1/weather_test/00002024.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "Should I wear a t-shirt in Seattle?", "seqlogical": "[IN:GET_WEATHER Should I wear a [SL:WEATHER_ATTRIBUTE t - shirt ] in [SL:LOCATION Seattle ] ? ]", "normalized_utterance": "SHOULD I WEAR A T SHIRT IN SEATTLE", "normalized_seqlogical": "[IN:GET_WEATHER SHOULD I WEAR A [SL:WEATHER_ATTRIBUTE T SHIRT ] IN [SL:LOCATION SEATTLE ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE T SHIRT ] [SL:LOCATION SEATTLE ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"location": "Seattle", "weather_attribute": "temperature"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00005446.wav", "split": "test", "intent": "[IN:GET_WEATHER Can you search for the weather [SL:DATE_TIME on Valentines day weekend ] ? ]", "parameters": {}, "sentence": "Can you search for the weather on Valentines day weekend ?", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "CAN YOU SEARCH FOR THE WEATHER ON VALENTINES DAY WEEKEND", "normalized_seqlogical": "[IN:GET_WEATHER CAN YOU SEARCH FOR THE WEATHER [SL:DATE_TIME ON VALENTINES DAY WEEKEND ] ]", "raw_data": {"file_id": "test_1/weather_test/00005446.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "Can you search for the weather on Valentines day weekend ?", "seqlogical": "[IN:GET_WEATHER Can you search for the weather [SL:DATE_TIME on Valentines day weekend ] ? ]", "normalized_utterance": "CAN YOU SEARCH FOR THE WEATHER ON VALENTINES DAY WEEKEND", "normalized_seqlogical": "[IN:GET_WEATHER CAN YOU SEARCH FOR THE WEATHER [SL:DATE_TIME ON VALENTINES DAY WEEKEND ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:DATE_TIME ON VALENTINES DAY WEEKEND ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"date_time": "Valentine's Day weekend"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00002664.wav", "split": "test", "intent": "[IN:GET_WEATHER how [SL:WEATHER_ATTRIBUTE hot ] is it in [SL:LOCATION Orlando ] ]", "parameters": {}, "sentence": "how hot is it in Orlando", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "HOW HOT IS IT IN ORLANDO", "normalized_seqlogical": "[IN:GET_WEATHER HOW [SL:WEATHER_ATTRIBUTE HOT ] IS IT IN [SL:LOCATION ORLANDO ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00002664.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "how hot is it in Orlando", "seqlogical": "[IN:GET_WEATHER how [SL:WEATHER_ATTRIBUTE hot ] is it in [SL:LOCATION Orlando ] ]", "normalized_utterance": "HOW HOT IS IT IN ORLANDO", "normalized_seqlogical": "[IN:GET_WEATHER HOW [SL:WEATHER_ATTRIBUTE HOT ] IS IT IN [SL:LOCATION ORLANDO ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE HOT ] [SL:LOCATION ORLANDO ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"location": "Orlando", "weather_attribute": "temperature"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00000424.wav", "split": "test", "intent": "[IN:GET_WEATHER What is the temperature suppose to be [SL:DATE_TIME tomorrow ] ? ]", "parameters": {}, "sentence": "What is the temperature suppose to be tomorrow?", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT IS THE TEMPERATURE SUPPOSE TO BE TOMORROW", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE TEMPERATURE SUPPOSE TO BE [SL:DATE_TIME TOMORROW ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00000424.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "What is the temperature suppose to be tomorrow?", "seqlogical": "[IN:GET_WEATHER What is the temperature suppose to be [SL:DATE_TIME tomorrow ] ? ]", "normalized_utterance": "WHAT IS THE TEMPERATURE SUPPOSE TO BE TOMORROW", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE TEMPERATURE SUPPOSE TO BE [SL:DATE_TIME TOMORROW ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:DATE_TIME TOMORROW ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"date_time": "tomorrow"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00005266.wav", "split": "test", "intent": "[IN:UNSUPPORTED_WEATHER Will the [SL:WEATHER_ATTRIBUTE snowfall ] be more than 5 cms ? ]", "parameters": {}, "sentence": "Will the snowfall be more than 5 cms?", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "WILL THE SNOWFALL BE MORE THAN FIVE CMS", "normalized_seqlogical": "[IN:UNSUPPORTED_WEATHER WILL THE [SL:WEATHER_ATTRIBUTE SNOWFALL ] BE MORE THAN FIVE CMS ]", "raw_data": {"file_id": "test_0/weather_test_0/00005266.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "Will the snowfall be more than 5 cms?", "seqlogical": "[IN:UNSUPPORTED_WEATHER Will the [SL:WEATHER_ATTRIBUTE snowfall ] be more than 5 cms ? ]", "normalized_utterance": "WILL THE SNOWFALL BE MORE THAN FIVE CMS", "normalized_seqlogical": "[IN:UNSUPPORTED_WEATHER WILL THE [SL:WEATHER_ATTRIBUTE SNOWFALL ] BE MORE THAN FIVE CMS ]", "decoupled_normalized_seqlogical": "[IN:UNSUPPORTED_WEATHER [SL:WEATHER_ATTRIBUTE SNOWFALL ] ]"}, "prediction": "", "function_calls": [{"name": "unsupported_weather", "arguments": {"weather_attribute": "snowfall"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00003504.wav", "split": "test", "intent": "[IN:UNSUPPORTED_WEATHER Does the weather service predict a flash [SL:WEATHER_ATTRIBUTE flood ] ]", "parameters": {}, "sentence": "Does the weather service predict a flash flood", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "DOES THE WEATHER SERVICE PREDICT A FLASH FLOOD", "normalized_seqlogical": "[IN:UNSUPPORTED_WEATHER DOES THE WEATHER SERVICE PREDICT A FLASH [SL:WEATHER_ATTRIBUTE FLOOD ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00003504.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "Does the weather service predict a flash flood", "seqlogical": "[IN:UNSUPPORTED_WEATHER Does the weather service predict a flash [SL:WEATHER_ATTRIBUTE flood ] ]", "normalized_utterance": "DOES THE WEATHER SERVICE PREDICT A FLASH FLOOD", "normalized_seqlogical": "[IN:UNSUPPORTED_WEATHER DOES THE WEATHER SERVICE PREDICT A FLASH [SL:WEATHER_ATTRIBUTE FLOOD ] ]", "decoupled_normalized_seqlogical": "[IN:UNSUPPORTED_WEATHER [SL:WEATHER_ATTRIBUTE FLOOD ] ]"}, "prediction": "", "function_calls": [{"name": "unsupported_weather", "arguments": {"weather_attribute": "flash flood"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00004153.wav", "split": "test", "intent": "[IN:GET_WEATHER How [SL:WEATHER_ATTRIBUTE warm ] is it [SL:DATE_TIME tomorrow morning ] [SL:LOCATION out there ] in degree [SL:WEATHER_TEMPERATURE_UNIT Celsius ] ]", "parameters": {}, "sentence": "How warm is it tomorrow morning out there in degree Celsius", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "HOW WARM IS IT TOMORROW MORNING OUT THERE IN DEGREE CELSIUS", "normalized_seqlogical": "[IN:GET_WEATHER HOW [SL:WEATHER_ATTRIBUTE WARM ] IS IT [SL:DATE_TIME TOMORROW MORNING ] [SL:LOCATION OUT THERE ] IN DEGREE [SL:WEATHER_TEMPERATURE_UNIT CELSIUS ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00004153.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "How warm is it tomorrow morning out there in degree Celsius", "seqlogical": "[IN:GET_WEATHER How [SL:WEATHER_ATTRIBUTE warm ] is it [SL:DATE_TIME tomorrow morning ] [SL:LOCATION out there ] in degree [SL:WEATHER_TEMPERATURE_UNIT Celsius ] ]", "normalized_utterance": "HOW WARM IS IT TOMORROW MORNING OUT THERE IN DEGREE CELSIUS", "normalized_seqlogical": "[IN:GET_WEATHER HOW [SL:WEATHER_ATTRIBUTE WARM ] IS IT [SL:DATE_TIME TOMORROW MORNING ] [SL:LOCATION OUT THERE ] IN DEGREE [SL:WEATHER_TEMPERATURE_UNIT CELSIUS ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE WARM ] [SL:DATE_TIME TOMORROW MORNING ] [SL:LOCATION OUT THERE ] [SL:WEATHER_TEMPERATURE_UNIT CELSIUS ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_temperature_unit": "Celsius", "weather_attribute": "temperature", "date_time": "tomorrow morning"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00005493.wav", "split": "test", "intent": "[IN:GET_WEATHER Tell me [SL:DATE_TIME this afternoon ] 's climate ]", "parameters": {}, "sentence": "Tell me this afternoon's climate", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "TELL ME THIS AFTERNOON 'S CLIMATE", "normalized_seqlogical": "[IN:GET_WEATHER TELL ME [SL:DATE_TIME THIS AFTERNOON ] 'S CLIMATE ]", "raw_data": {"file_id": "test_0/weather_test_0/00005493.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "Tell me this afternoon's climate", "seqlogical": "[IN:GET_WEATHER Tell me [SL:DATE_TIME this afternoon ] 's climate ]", "normalized_utterance": "TELL ME THIS AFTERNOON 'S CLIMATE", "normalized_seqlogical": "[IN:GET_WEATHER TELL ME [SL:DATE_TIME THIS AFTERNOON ] 'S CLIMATE ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:DATE_TIME THIS AFTERNOON ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"date_time": "this afternoon"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00000700.wav", "split": "test", "intent": "[IN:GET_WEATHER will it [SL:WEATHER_ATTRIBUTE snow ] [SL:DATE_TIME tomorrow ] ]", "parameters": {}, "sentence": "will it snow tomorrow", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "WILL IT SNOW TOMORROW", "normalized_seqlogical": "[IN:GET_WEATHER WILL IT [SL:WEATHER_ATTRIBUTE SNOW ] [SL:DATE_TIME TOMORROW ] ]", "raw_data": {"file_id": "test_1/weather_test/00000700.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "will it snow tomorrow", "seqlogical": "[IN:GET_WEATHER will it [SL:WEATHER_ATTRIBUTE snow ] [SL:DATE_TIME tomorrow ] ]", "normalized_utterance": "WILL IT SNOW TOMORROW", "normalized_seqlogical": "[IN:GET_WEATHER WILL IT [SL:WEATHER_ATTRIBUTE SNOW ] [SL:DATE_TIME TOMORROW ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE SNOW ] [SL:DATE_TIME TOMORROW ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "snow", "date_time": "tomorrow"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00005029.wav", "split": "test", "intent": "[IN:GET_WEATHER tell me what the weather will do [SL:DATE_TIME this weekend ] in [SL:LOCATION London ] . ]", "parameters": {}, "sentence": "tell me what the weather will do this weekend in London.", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "TELL ME WHAT THE WEATHER WILL DO THIS WEEKEND IN LONDON", "normalized_seqlogical": "[IN:GET_WEATHER TELL ME WHAT THE WEATHER WILL DO [SL:DATE_TIME THIS WEEKEND ] IN [SL:LOCATION LONDON ] ]", "raw_data": {"file_id": "test_1/weather_test/00005029.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "tell me what the weather will do this weekend in London.", "seqlogical": "[IN:GET_WEATHER tell me what the weather will do [SL:DATE_TIME this weekend ] in [SL:LOCATION London ] . ]", "normalized_utterance": "TELL ME WHAT THE WEATHER WILL DO THIS WEEKEND IN LONDON", "normalized_seqlogical": "[IN:GET_WEATHER TELL ME WHAT THE WEATHER WILL DO [SL:DATE_TIME THIS WEEKEND ] IN [SL:LOCATION LONDON ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:DATE_TIME THIS WEEKEND ] [SL:LOCATION LONDON ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"location": "London", "date_time": "this weekend"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00002044.wav", "split": "test", "intent": "[IN:GET_WEATHER What is the weather like in [SL:LOCATION China ] ? ]", "parameters": {}, "sentence": "What is the weather like in China?", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT IS THE WEATHER LIKE IN CHINA", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE WEATHER LIKE IN [SL:LOCATION CHINA ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00002044.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "What is the weather like in China?", "seqlogical": "[IN:GET_WEATHER What is the weather like in [SL:LOCATION China ] ? ]", "normalized_utterance": "WHAT IS THE WEATHER LIKE IN CHINA", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE WEATHER LIKE IN [SL:LOCATION CHINA ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:LOCATION CHINA ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"location": "China"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00005639.wav", "split": "test", "intent": "[IN:GET_WEATHER What weather can I expect [SL:DATE_TIME for next Friday ] ]", "parameters": {}, "sentence": "What weather can I expect for next Friday", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT WEATHER CAN I EXPECT FOR NEXT FRIDAY", "normalized_seqlogical": "[IN:GET_WEATHER WHAT WEATHER CAN I EXPECT [SL:DATE_TIME FOR NEXT FRIDAY ] ]", "raw_data": {"file_id": "test_1/weather_test/00005639.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "What weather can I expect for next Friday", "seqlogical": "[IN:GET_WEATHER What weather can I expect [SL:DATE_TIME for next Friday ] ]", "normalized_utterance": "WHAT WEATHER CAN I EXPECT FOR NEXT FRIDAY", "normalized_seqlogical": "[IN:GET_WEATHER WHAT WEATHER CAN I EXPECT [SL:DATE_TIME FOR NEXT FRIDAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:DATE_TIME FOR NEXT FRIDAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"date_time": "next Friday"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00001373.wav", "split": "test", "intent": "[IN:GET_WEATHER Is it going to [SL:WEATHER_ATTRIBUTE rain ] [SL:DATE_TIME today ] ? ]", "parameters": {}, "sentence": "Is it going to rain today?", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "IS IT GOING TO RAIN TODAY", "normalized_seqlogical": "[IN:GET_WEATHER IS IT GOING TO [SL:WEATHER_ATTRIBUTE RAIN ] [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00001373.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "Is it going to rain today?", "seqlogical": "[IN:GET_WEATHER Is it going to [SL:WEATHER_ATTRIBUTE rain ] [SL:DATE_TIME today ] ? ]", "normalized_utterance": "IS IT GOING TO RAIN TODAY", "normalized_seqlogical": "[IN:GET_WEATHER IS IT GOING TO [SL:WEATHER_ATTRIBUTE RAIN ] [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE RAIN ] [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "rainfall"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00000039.wav", "split": "test", "intent": "[IN:GET_WEATHER how [SL:WEATHER_ATTRIBUTE cold ] will it be [SL:DATE_TIME today ] ]", "parameters": {}, "sentence": "how cold will it be today", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "HOW COLD WILL IT BE TODAY", "normalized_seqlogical": "[IN:GET_WEATHER HOW [SL:WEATHER_ATTRIBUTE COLD ] WILL IT BE [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_1/weather_test/00000039.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "how cold will it be today", "seqlogical": "[IN:GET_WEATHER how [SL:WEATHER_ATTRIBUTE cold ] will it be [SL:DATE_TIME today ] ]", "normalized_utterance": "HOW COLD WILL IT BE TODAY", "normalized_seqlogical": "[IN:GET_WEATHER HOW [SL:WEATHER_ATTRIBUTE COLD ] WILL IT BE [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE COLD ] [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "temperature"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00003148.wav", "split": "test", "intent": "[IN:GET_WEATHER can i wear [SL:WEATHER_ATTRIBUTE shorts ] [SL:DATE_TIME today ] ]", "parameters": {}, "sentence": "can i wear shorts today", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "CAN I WEAR SHORTS TODAY", "normalized_seqlogical": "[IN:GET_WEATHER CAN I WEAR [SL:WEATHER_ATTRIBUTE SHORTS ] [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_1/weather_test/00003148.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "can i wear shorts today", "seqlogical": "[IN:GET_WEATHER can i wear [SL:WEATHER_ATTRIBUTE shorts ] [SL:DATE_TIME today ] ]", "normalized_utterance": "CAN I WEAR SHORTS TODAY", "normalized_seqlogical": "[IN:GET_WEATHER CAN I WEAR [SL:WEATHER_ATTRIBUTE SHORTS ] [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE SHORTS ] [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "temperature"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00000296.wav", "split": "test", "intent": "[IN:GET_WEATHER How much [SL:WEATHER_ATTRIBUTE snow ] fell on [SL:LOCATION Montana . Hood ] [SL:DATE_TIME today ] ? ]", "parameters": {}, "sentence": "How much snow fell on Montana. Hood today?", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "HOW MUCH SNOW FELL ON MONTANA HOOD TODAY", "normalized_seqlogical": "[IN:GET_WEATHER HOW MUCH [SL:WEATHER_ATTRIBUTE SNOW ] FELL ON [SL:LOCATION MONTANA HOOD ] [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00000296.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "How much snow fell on Montana. Hood today?", "seqlogical": "[IN:GET_WEATHER How much [SL:WEATHER_ATTRIBUTE snow ] fell on [SL:LOCATION Montana . Hood ] [SL:DATE_TIME today ] ? ]", "normalized_utterance": "HOW MUCH SNOW FELL ON MONTANA HOOD TODAY", "normalized_seqlogical": "[IN:GET_WEATHER HOW MUCH [SL:WEATHER_ATTRIBUTE SNOW ] FELL ON [SL:LOCATION MONTANA HOOD ] [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE SNOW ] [SL:LOCATION MONTANA HOOD ] [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_road_condition", "arguments": {"location": "Montana", "road_condition": "snow"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00001995.wav", "split": "test", "intent": "[IN:GET_WEATHER Will there be [SL:WEATHER_ATTRIBUTE snow ] [SL:DATE_TIME next week ] ? ]", "parameters": {}, "sentence": "Will there be snow next week?", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "WILL THERE BE SNOW NEXT WEEK", "normalized_seqlogical": "[IN:GET_WEATHER WILL THERE BE [SL:WEATHER_ATTRIBUTE SNOW ] [SL:DATE_TIME NEXT WEEK ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00001995.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "Will there be snow next week?", "seqlogical": "[IN:GET_WEATHER Will there be [SL:WEATHER_ATTRIBUTE snow ] [SL:DATE_TIME next week ] ? ]", "normalized_utterance": "WILL THERE BE SNOW NEXT WEEK", "normalized_seqlogical": "[IN:GET_WEATHER WILL THERE BE [SL:WEATHER_ATTRIBUTE SNOW ] [SL:DATE_TIME NEXT WEEK ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE SNOW ] [SL:DATE_TIME NEXT WEEK ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "snow", "date_time": "next week"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00005390.wav", "split": "test", "intent": "[IN:GET_WEATHER Will I need a [SL:WEATHER_ATTRIBUTE jacket ] for my walk [SL:DATE_TIME this evening ] ? ]", "parameters": {}, "sentence": "Will I need a jacket for my walk this evening?", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "WILL I NEED A JACKET FOR MY WALK THIS EVENING", "normalized_seqlogical": "[IN:GET_WEATHER WILL I NEED A [SL:WEATHER_ATTRIBUTE JACKET ] FOR MY WALK [SL:DATE_TIME THIS EVENING ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00005390.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "Will I need a jacket for my walk this evening?", "seqlogical": "[IN:GET_WEATHER Will I need a [SL:WEATHER_ATTRIBUTE jacket ] for my walk [SL:DATE_TIME this evening ] ? ]", "normalized_utterance": "WILL I NEED A JACKET FOR MY WALK THIS EVENING", "normalized_seqlogical": "[IN:GET_WEATHER WILL I NEED A [SL:WEATHER_ATTRIBUTE JACKET ] FOR MY WALK [SL:DATE_TIME THIS EVENING ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE JACKET ] [SL:DATE_TIME THIS EVENING ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "temperature", "date_time": "this evening"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00000319.wav", "split": "test", "intent": "[IN:GET_WEATHER What 's the weather [SL:DATE_TIME today ] in [SL:LOCATION Cape May , New Jersey ] ? ]", "parameters": {}, "sentence": "What's the weather today in Cape May, New Jersey?", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT 'S THE WEATHER TODAY IN CAPE MAY NEW JERSEY", "normalized_seqlogical": "[IN:GET_WEATHER WHAT 'S THE WEATHER [SL:DATE_TIME TODAY ] IN [SL:LOCATION CAPE MAY NEW JERSEY ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00000319.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "What's the weather today in Cape May, New Jersey?", "seqlogical": "[IN:GET_WEATHER What 's the weather [SL:DATE_TIME today ] in [SL:LOCATION Cape May , New Jersey ] ? ]", "normalized_utterance": "WHAT 'S THE WEATHER TODAY IN CAPE MAY NEW JERSEY", "normalized_seqlogical": "[IN:GET_WEATHER WHAT 'S THE WEATHER [SL:DATE_TIME TODAY ] IN [SL:LOCATION CAPE MAY NEW JERSEY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:DATE_TIME TODAY ] [SL:LOCATION CAPE MAY NEW JERSEY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"location": "Cape May, New Jersey"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00000612.wav", "split": "test", "intent": "[IN:GET_WEATHER what is the temperature [SL:DATE_TIME tomorrow ] ]", "parameters": {}, "sentence": "what is the temperature tomorrow", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT IS THE TEMPERATURE TOMORROW", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE TEMPERATURE [SL:DATE_TIME TOMORROW ] ]", "raw_data": {"file_id": "test_1/weather_test/00000612.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "what is the temperature tomorrow", "seqlogical": "[IN:GET_WEATHER what is the temperature [SL:DATE_TIME tomorrow ] ]", "normalized_utterance": "WHAT IS THE TEMPERATURE TOMORROW", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE TEMPERATURE [SL:DATE_TIME TOMORROW ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:DATE_TIME TOMORROW ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"date_time": "tomorrow"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00002528.wav", "split": "test", "intent": "[IN:GET_WEATHER What will the temperature be [SL:DATE_TIME tomorrow morning ] ? ]", "parameters": {}, "sentence": "What will the temperature be tomorrow morning?", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT WILL THE TEMPERATURE BE TOMORROW MORNING", "normalized_seqlogical": "[IN:GET_WEATHER WHAT WILL THE TEMPERATURE BE [SL:DATE_TIME TOMORROW MORNING ] ]", "raw_data": {"file_id": "test_1/weather_test/00002528.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "What will the temperature be tomorrow morning?", "seqlogical": "[IN:GET_WEATHER What will the temperature be [SL:DATE_TIME tomorrow morning ] ? ]", "normalized_utterance": "WHAT WILL THE TEMPERATURE BE TOMORROW MORNING", "normalized_seqlogical": "[IN:GET_WEATHER WHAT WILL THE TEMPERATURE BE [SL:DATE_TIME TOMORROW MORNING ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:DATE_TIME TOMORROW MORNING ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"date_time": "tomorrow morning"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00004741.wav", "split": "test", "intent": "[IN:GET_WEATHER What is the forecast [SL:DATE_TIME for the week ahead ] ? ]", "parameters": {}, "sentence": "What is the forecast for the week ahead?", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT IS THE FORECAST FOR THE WEEK AHEAD", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE FORECAST [SL:DATE_TIME FOR THE WEEK AHEAD ] ]", "raw_data": {"file_id": "test_1/weather_test/00004741.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "What is the forecast for the week ahead?", "seqlogical": "[IN:GET_WEATHER What is the forecast [SL:DATE_TIME for the week ahead ] ? ]", "normalized_utterance": "WHAT IS THE FORECAST FOR THE WEEK AHEAD", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE FORECAST [SL:DATE_TIME FOR THE WEEK AHEAD ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:DATE_TIME FOR THE WEEK AHEAD ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"date_time": "week ahead"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00003914.wav", "split": "test", "intent": "[IN:GET_WEATHER How many days will we be [SL:WEATHER_ATTRIBUTE above 100 ] [SL:DATE_TIME this week ] ]", "parameters": {}, "sentence": "How many days will we be above 100 this week", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "HOW MANY DAYS WILL WE BE ABOVE A HUNDRED THIS WEEK", "normalized_seqlogical": "[IN:GET_WEATHER HOW MANY DAYS WILL WE BE [SL:WEATHER_ATTRIBUTE ABOVE A HUNDRED ] [SL:DATE_TIME THIS WEEK ] ]", "raw_data": {"file_id": "test_1/weather_test/00003914.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "How many days will we be above 100 this week", "seqlogical": "[IN:GET_WEATHER How many days will we be [SL:WEATHER_ATTRIBUTE above 100 ] [SL:DATE_TIME this week ] ]", "normalized_utterance": "HOW MANY DAYS WILL WE BE ABOVE A HUNDRED THIS WEEK", "normalized_seqlogical": "[IN:GET_WEATHER HOW MANY DAYS WILL WE BE [SL:WEATHER_ATTRIBUTE ABOVE A HUNDRED ] [SL:DATE_TIME THIS WEEK ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE ABOVE A HUNDRED ] [SL:DATE_TIME THIS WEEK ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "temperature", "date_time": "this week"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00004363.wav", "split": "test", "intent": "[IN:GET_WEATHER what is the weather like [SL:DATE_TIME today ] ? ]", "parameters": {}, "sentence": "what is the weather like today?", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT IS THE WEATHER LIKE TODAY", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE WEATHER LIKE [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_1/weather_test/00004363.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "what is the weather like today?", "seqlogical": "[IN:GET_WEATHER what is the weather like [SL:DATE_TIME today ] ? ]", "normalized_utterance": "WHAT IS THE WEATHER LIKE TODAY", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE WEATHER LIKE [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"date_time": "today"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00004111.wav", "split": "test", "intent": "[IN:GET_WEATHER Is it going to be [SL:WEATHER_ATTRIBUTE around ] [SL:WEATHER_ATTRIBUTE 72 ] in [SL:WEATHER_TEMPERATURE_UNIT fahrenheit ] near [SL:LOCATION Sao Paulo ] [SL:DATE_TIME tonight ] ]", "parameters": {}, "sentence": "Is it going to be around 72 in fahrenheit near Sao Paulo tonight", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "IS IT GOING TO BE AROUND SEVENTY TWO IN FAHRENHEIT NEAR SAO PAULO TONIGHT", "normalized_seqlogical": "[IN:GET_WEATHER IS IT GOING TO BE [SL:WEATHER_ATTRIBUTE AROUND ] [SL:WEATHER_ATTRIBUTE SEVENTY TWO ] IN [SL:WEATHER_TEMPERATURE_UNIT FAHRENHEIT ] NEAR [SL:LOCATION SAO PAULO ] [SL:DATE_TIME TONIGHT ] ]", "raw_data": {"file_id": "test_1/weather_test/00004111.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "Is it going to be around 72 in fahrenheit near Sao Paulo tonight", "seqlogical": "[IN:GET_WEATHER Is it going to be [SL:WEATHER_ATTRIBUTE around ] [SL:WEATHER_ATTRIBUTE 72 ] in [SL:WEATHER_TEMPERATURE_UNIT fahrenheit ] near [SL:LOCATION Sao Paulo ] [SL:DATE_TIME tonight ] ]", "normalized_utterance": "IS IT GOING TO BE AROUND SEVENTY TWO IN FAHRENHEIT NEAR SAO PAULO TONIGHT", "normalized_seqlogical": "[IN:GET_WEATHER IS IT GOING TO BE [SL:WEATHER_ATTRIBUTE AROUND ] [SL:WEATHER_ATTRIBUTE SEVENTY TWO ] IN [SL:WEATHER_TEMPERATURE_UNIT FAHRENHEIT ] NEAR [SL:LOCATION SAO PAULO ] [SL:DATE_TIME TONIGHT ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE AROUND ] [SL:WEATHER_ATTRIBUTE SEVENTY TWO ] [SL:WEATHER_TEMPERATURE_UNIT FAHRENHEIT ] [SL:LOCATION SAO PAULO ] [SL:DATE_TIME TONIGHT ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_temperature_unit": "Fahrenheit", "weather_attribute": "temperature", "location": "Sao Paulo", "date_time": "tonight"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00004376.wav", "split": "test", "intent": "[IN:GET_WEATHER should I bring an [SL:WEATHER_ATTRIBUTE umbrella ] ]", "parameters": {}, "sentence": "should I bring an umbrella", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "SHOULD I BRING AN UMBRELLA", "normalized_seqlogical": "[IN:GET_WEATHER SHOULD I BRING AN [SL:WEATHER_ATTRIBUTE UMBRELLA ] ]", "raw_data": {"file_id": "test_1/weather_test/00004376.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "should I bring an umbrella", "seqlogical": "[IN:GET_WEATHER should I bring an [SL:WEATHER_ATTRIBUTE umbrella ] ]", "normalized_utterance": "SHOULD I BRING AN UMBRELLA", "normalized_seqlogical": "[IN:GET_WEATHER SHOULD I BRING AN [SL:WEATHER_ATTRIBUTE UMBRELLA ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE UMBRELLA ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "rainfall"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00004428.wav", "split": "test", "intent": "[IN:GET_WEATHER Are we expecting [SL:WEATHER_ATTRIBUTE snow ] ? ]", "parameters": {}, "sentence": "Are we expecting snow?", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "ARE WE EXPECTING SNOW", "normalized_seqlogical": "[IN:GET_WEATHER ARE WE EXPECTING [SL:WEATHER_ATTRIBUTE SNOW ] ]", "raw_data": {"file_id": "test_1/weather_test/00004428.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "Are we expecting snow?", "seqlogical": "[IN:GET_WEATHER Are we expecting [SL:WEATHER_ATTRIBUTE snow ] ? ]", "normalized_utterance": "ARE WE EXPECTING SNOW", "normalized_seqlogical": "[IN:GET_WEATHER ARE WE EXPECTING [SL:WEATHER_ATTRIBUTE SNOW ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE SNOW ] ]"}, "prediction": "", "function_calls": [{"name": "unsupported_weather", "arguments": {"weather_attribute": "snow"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00002684.wav", "split": "test", "intent": "[IN:GET_WEATHER what is the weather in [SL:LOCATION Vegas ] like [SL:DATE_TIME next week ] ? ]", "parameters": {}, "sentence": "what is the weather in Vegas like next week?", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT IS THE WEATHER IN VEGAS LIKE NEXT WEEK", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE WEATHER IN [SL:LOCATION VEGAS ] LIKE [SL:DATE_TIME NEXT WEEK ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00002684.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "what is the weather in Vegas like next week?", "seqlogical": "[IN:GET_WEATHER what is the weather in [SL:LOCATION Vegas ] like [SL:DATE_TIME next week ] ? ]", "normalized_utterance": "WHAT IS THE WEATHER IN VEGAS LIKE NEXT WEEK", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE WEATHER IN [SL:LOCATION VEGAS ] LIKE [SL:DATE_TIME NEXT WEEK ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:LOCATION VEGAS ] [SL:DATE_TIME NEXT WEEK ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"location": "Vegas", "date_time": "next week"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00002576.wav", "split": "test", "intent": "[IN:GET_WEATHER Is it going to [SL:WEATHER_ATTRIBUTE rain ] [SL:DATE_TIME tonight ] ? ]", "parameters": {}, "sentence": "Is it going to rain tonight?", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "IS IT GOING TO RAIN TONIGHT", "normalized_seqlogical": "[IN:GET_WEATHER IS IT GOING TO [SL:WEATHER_ATTRIBUTE RAIN ] [SL:DATE_TIME TONIGHT ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00002576.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "Is it going to rain tonight?", "seqlogical": "[IN:GET_WEATHER Is it going to [SL:WEATHER_ATTRIBUTE rain ] [SL:DATE_TIME tonight ] ? ]", "normalized_utterance": "IS IT GOING TO RAIN TONIGHT", "normalized_seqlogical": "[IN:GET_WEATHER IS IT GOING TO [SL:WEATHER_ATTRIBUTE RAIN ] [SL:DATE_TIME TONIGHT ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE RAIN ] [SL:DATE_TIME TONIGHT ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "rainfall", "date_time": "tonight"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00005476.wav", "split": "test", "intent": "[IN:GET_WEATHER Tell me the weather in [SL:LOCATION Arizona ] . ]", "parameters": {}, "sentence": "Tell me the weather in Arizona.", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "TELL ME THE WEATHER IN ARIZONA", "normalized_seqlogical": "[IN:GET_WEATHER TELL ME THE WEATHER IN [SL:LOCATION ARIZONA ] ]", "raw_data": {"file_id": "test_1/weather_test/00005476.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "Tell me the weather in Arizona.", "seqlogical": "[IN:GET_WEATHER Tell me the weather in [SL:LOCATION Arizona ] . ]", "normalized_utterance": "TELL ME THE WEATHER IN ARIZONA", "normalized_seqlogical": "[IN:GET_WEATHER TELL ME THE WEATHER IN [SL:LOCATION ARIZONA ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:LOCATION ARIZONA ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"location": "Arizona"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00003781.wav", "split": "test", "intent": "[IN:GET_WEATHER What will the [SL:WEATHER_ATTRIBUTE UV index ] be between 10 AM and 2 PM [SL:DATE_TIME today ] ]", "parameters": {}, "sentence": "What will the UV index be between 10 AM and 2 PM today", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT WILL THE UV INDEX BE BETWEEN TEN AM AND TWO PM TODAY", "normalized_seqlogical": "[IN:GET_WEATHER WHAT WILL THE [SL:WEATHER_ATTRIBUTE UV INDEX ] BE BETWEEN TEN AM AND TWO PM [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00003781.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "What will the UV index be between 10 AM and 2 PM today", "seqlogical": "[IN:GET_WEATHER What will the [SL:WEATHER_ATTRIBUTE UV index ] be between 10 AM and 2 PM [SL:DATE_TIME today ] ]", "normalized_utterance": "WHAT WILL THE UV INDEX BE BETWEEN TEN AM AND TWO PM TODAY", "normalized_seqlogical": "[IN:GET_WEATHER WHAT WILL THE [SL:WEATHER_ATTRIBUTE UV INDEX ] BE BETWEEN TEN AM AND TWO PM [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE UV INDEX ] [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "UV index", "date_time": "today 10am to 2pm"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00002705.wav", "split": "test", "intent": "[IN:GET_WEATHER Is it going to [SL:WEATHER_ATTRIBUTE storm ] [SL:DATE_TIME today ] ? ]", "parameters": {}, "sentence": "Is it going to storm today?", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "IS IT GOING TO STORM TODAY", "normalized_seqlogical": "[IN:GET_WEATHER IS IT GOING TO [SL:WEATHER_ATTRIBUTE STORM ] [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00002705.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "Is it going to storm today?", "seqlogical": "[IN:GET_WEATHER Is it going to [SL:WEATHER_ATTRIBUTE storm ] [SL:DATE_TIME today ] ? ]", "normalized_utterance": "IS IT GOING TO STORM TODAY", "normalized_seqlogical": "[IN:GET_WEATHER IS IT GOING TO [SL:WEATHER_ATTRIBUTE STORM ] [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE STORM ] [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "storm"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00005335.wav", "split": "test", "intent": "[IN:GET_WEATHER How 's the [SL:DATE_TIME afternoon ] forecast [SL:DATE_TIME for the next weekend ] ? ]", "parameters": {}, "sentence": "How's the afternoon forecast for the next weekend ?", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "HOW 'S THE AFTERNOON FORECAST FOR THE NEXT WEEKEND", "normalized_seqlogical": "[IN:GET_WEATHER HOW 'S THE [SL:DATE_TIME AFTERNOON ] FORECAST [SL:DATE_TIME FOR THE NEXT WEEKEND ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00005335.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "How's the afternoon forecast for the next weekend ?", "seqlogical": "[IN:GET_WEATHER How 's the [SL:DATE_TIME afternoon ] forecast [SL:DATE_TIME for the next weekend ] ? ]", "normalized_utterance": "HOW 'S THE AFTERNOON FORECAST FOR THE NEXT WEEKEND", "normalized_seqlogical": "[IN:GET_WEATHER HOW 'S THE [SL:DATE_TIME AFTERNOON ] FORECAST [SL:DATE_TIME FOR THE NEXT WEEKEND ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:DATE_TIME AFTERNOON ] [SL:DATE_TIME FOR THE NEXT WEEKEND ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"date_time": "next weekend", "weather_attribute": "afternoon forecast"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00000265.wav", "split": "test", "intent": "[IN:GET_WEATHER Will I need [SL:WEATHER_ATTRIBUTE boots ] [SL:DATE_TIME today ] ]", "parameters": {}, "sentence": "Will I need boots today", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "WILL I NEED BOOTS TODAY", "normalized_seqlogical": "[IN:GET_WEATHER WILL I NEED [SL:WEATHER_ATTRIBUTE BOOTS ] [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00000265.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "Will I need boots today", "seqlogical": "[IN:GET_WEATHER Will I need [SL:WEATHER_ATTRIBUTE boots ] [SL:DATE_TIME today ] ]", "normalized_utterance": "WILL I NEED BOOTS TODAY", "normalized_seqlogical": "[IN:GET_WEATHER WILL I NEED [SL:WEATHER_ATTRIBUTE BOOTS ] [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE BOOTS ] [SL:DATE_TIME TODAY ] ]"}, "prediction": "To determine if you'll need boots today, I need to check the weather conditions, specifically if there's any rainfall expected. Let me gather that information for you.", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "rainfall"}}, {"name": "get_weather", "arguments": {"weather_attribute": "rainfall"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00003161.wav", "split": "test", "intent": "[IN:GET_WEATHER Will it be [SL:WEATHER_ATTRIBUTE cloudy ] [SL:DATE_TIME today ] ? ]", "parameters": {}, "sentence": "Will it be cloudy today?", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "WILL IT BE CLOUDY TODAY", "normalized_seqlogical": "[IN:GET_WEATHER WILL IT BE [SL:WEATHER_ATTRIBUTE CLOUDY ] [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00003161.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "Will it be cloudy today?", "seqlogical": "[IN:GET_WEATHER Will it be [SL:WEATHER_ATTRIBUTE cloudy ] [SL:DATE_TIME today ] ? ]", "normalized_utterance": "WILL IT BE CLOUDY TODAY", "normalized_seqlogical": "[IN:GET_WEATHER WILL IT BE [SL:WEATHER_ATTRIBUTE CLOUDY ] [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE CLOUDY ] [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "cloudy"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00001063.wav", "split": "test", "intent": "[IN:GET_WEATHER how [SL:WEATHER_ATTRIBUTE hot ] will it be in [SL:LOCATION Cuba ] ]", "parameters": {}, "sentence": "how hot will it be in Cuba", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "HOW HOT WILL IT BE IN CUBA", "normalized_seqlogical": "[IN:GET_WEATHER HOW [SL:WEATHER_ATTRIBUTE HOT ] WILL IT BE IN [SL:LOCATION CUBA ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00001063.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "how hot will it be in Cuba", "seqlogical": "[IN:GET_WEATHER how [SL:WEATHER_ATTRIBUTE hot ] will it be in [SL:LOCATION Cuba ] ]", "normalized_utterance": "HOW HOT WILL IT BE IN CUBA", "normalized_seqlogical": "[IN:GET_WEATHER HOW [SL:WEATHER_ATTRIBUTE HOT ] WILL IT BE IN [SL:LOCATION CUBA ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE HOT ] [SL:LOCATION CUBA ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"location": "Cuba", "weather_attribute": "temperature"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00005242.wav", "split": "test", "intent": "[IN:GET_WEATHER What are the weather conditions in [SL:LOCATION Greece ] [SL:DATE_TIME at Easter ] . ]", "parameters": {}, "sentence": "What are the weather conditions in Greece at Easter.", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT ARE THE WEATHER CONDITIONS IN GREECE AT EASTER", "normalized_seqlogical": "[IN:GET_WEATHER WHAT ARE THE WEATHER CONDITIONS IN [SL:LOCATION GREECE ] [SL:DATE_TIME AT EASTER ] ]", "raw_data": {"file_id": "test_1/weather_test/00005242.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "What are the weather conditions in Greece at Easter.", "seqlogical": "[IN:GET_WEATHER What are the weather conditions in [SL:LOCATION Greece ] [SL:DATE_TIME at Easter ] . ]", "normalized_utterance": "WHAT ARE THE WEATHER CONDITIONS IN GREECE AT EASTER", "normalized_seqlogical": "[IN:GET_WEATHER WHAT ARE THE WEATHER CONDITIONS IN [SL:LOCATION GREECE ] [SL:DATE_TIME AT EASTER ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:LOCATION GREECE ] [SL:DATE_TIME AT EASTER ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"location": "Greece", "date_time": "Easter"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00005674.wav", "split": "test", "intent": "[IN:GET_WEATHER the [SL:DATE_TIME day after tomororw ] is going to be like what outside ]", "parameters": {}, "sentence": "the day after tomororw is going to be like what outside", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "THE DAY AFTER TOMORORW IS GOING TO BE LIKE WHAT OUTSIDE", "normalized_seqlogical": "[IN:GET_WEATHER THE [SL:DATE_TIME DAY AFTER TOMORORW ] IS GOING TO BE LIKE WHAT OUTSIDE ]", "raw_data": {"file_id": "test_0/weather_test_0/00005674.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "the day after tomororw is going to be like what outside", "seqlogical": "[IN:GET_WEATHER the [SL:DATE_TIME day after tomororw ] is going to be like what outside ]", "normalized_utterance": "THE DAY AFTER TOMORORW IS GOING TO BE LIKE WHAT OUTSIDE", "normalized_seqlogical": "[IN:GET_WEATHER THE [SL:DATE_TIME DAY AFTER TOMORORW ] IS GOING TO BE LIKE WHAT OUTSIDE ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:DATE_TIME DAY AFTER TOMORORW ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"date_time": "the day after tomorrow"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00004871.wav", "split": "test", "intent": "[IN:GET_WEATHER Tell me the weather [SL:DATE_TIME this evening ] ]", "parameters": {}, "sentence": "Tell me the weather this evening", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "TELL ME THE WEATHER THIS EVENING", "normalized_seqlogical": "[IN:GET_WEATHER TELL ME THE WEATHER [SL:DATE_TIME THIS EVENING ] ]", "raw_data": {"file_id": "test_1/weather_test/00004871.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "Tell me the weather this evening", "seqlogical": "[IN:GET_WEATHER Tell me the weather [SL:DATE_TIME this evening ] ]", "normalized_utterance": "TELL ME THE WEATHER THIS EVENING", "normalized_seqlogical": "[IN:GET_WEATHER TELL ME THE WEATHER [SL:DATE_TIME THIS EVENING ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:DATE_TIME THIS EVENING ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"date_time": "this evening"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00000410.wav", "split": "test", "intent": "[IN:GET_WEATHER What is the temperature in [SL:LOCATION Juneau ] ? ]", "parameters": {}, "sentence": "What is the temperature in Juneau?", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT IS THE TEMPERATURE IN JUNEAU", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE TEMPERATURE IN [SL:LOCATION JUNEAU ] ]", "raw_data": {"file_id": "test_1/weather_test/00000410.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "What is the temperature in Juneau?", "seqlogical": "[IN:GET_WEATHER What is the temperature in [SL:LOCATION Juneau ] ? ]", "normalized_utterance": "WHAT IS THE TEMPERATURE IN JUNEAU", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE TEMPERATURE IN [SL:LOCATION JUNEAU ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:LOCATION JUNEAU ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"location": "Geneva", "weather_attribute": "temperature"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00002462.wav", "split": "test", "intent": "[IN:GET_WEATHER What is the temperature for [SL:LOCATION Barcelona , Spain ] ? ]", "parameters": {}, "sentence": "What is the temperature for Barcelona, Spain?", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT IS THE TEMPERATURE FOR BARCELONA SPAIN", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE TEMPERATURE FOR [SL:LOCATION BARCELONA SPAIN ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00002462.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "What is the temperature for Barcelona, Spain?", "seqlogical": "[IN:GET_WEATHER What is the temperature for [SL:LOCATION Barcelona , Spain ] ? ]", "normalized_utterance": "WHAT IS THE TEMPERATURE FOR BARCELONA SPAIN", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE TEMPERATURE FOR [SL:LOCATION BARCELONA SPAIN ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:LOCATION BARCELONA SPAIN ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"location": "Barcelona, Spain", "weather_attribute": "temperature"}}]}
{"filename": "stop_data/stop/test_0/weather_test/00002586.wav", "split": "test", "intent": "[IN:GET_WEATHER What is the low temperature [SL:DATE_TIME for Saturday night ] ? ]", "parameters": {}, "sentence": "What is the low temperature for Saturday night?", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT IS THE LOW TEMPERATURE FOR SATURDAY NIGHT", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE LOW TEMPERATURE [SL:DATE_TIME FOR SATURDAY NIGHT ] ]", "raw_data": {"file_id": "test_0/weather_test_0/00002586.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "What is the low temperature for Saturday night?", "seqlogical": "[IN:GET_WEATHER What is the low temperature [SL:DATE_TIME for Saturday night ] ? ]", "normalized_utterance": "WHAT IS THE LOW TEMPERATURE FOR SATURDAY NIGHT", "normalized_seqlogical": "[IN:GET_WEATHER WHAT IS THE LOW TEMPERATURE [SL:DATE_TIME FOR SATURDAY NIGHT ] ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:DATE_TIME FOR SATURDAY NIGHT ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "low temperature", "date_time": "Saturday night"}}]}
{"filename": "stop_data/stop/test_1/weather_test/00005201.wav", "split": "test", "intent": "[IN:GET_WEATHER Do I need an [SL:WEATHER_ATTRIBUTE umbrella ] for [SL:WEATHER_ATTRIBUTE rain ] more than 4 milometers ? ]", "parameters": {}, "sentence": "Do I need an umbrella for rain more than 4 milometers?", "domain": "weather", "gender": "Female", "native": "Yes", "normalized_utterance": "DO I NEED AN UMBRELLA FOR RAIN MORE THAN FOUR MILOMETERS", "normalized_seqlogical": "[IN:GET_WEATHER DO I NEED AN [SL:WEATHER_ATTRIBUTE UMBRELLA ] FOR [SL:WEATHER_ATTRIBUTE RAIN ] MORE THAN FOUR MILOMETERS ]", "raw_data": {"file_id": "test_1/weather_test/00005201.wav", "domain": "weather", "gender": "Female", "native": "Yes", "utterance": "Do I need an umbrella for rain more than 4 milometers?", "seqlogical": "[IN:GET_WEATHER Do I need an [SL:WEATHER_ATTRIBUTE umbrella ] for [SL:WEATHER_ATTRIBUTE rain ] more than 4 milometers ? ]", "normalized_utterance": "DO I NEED AN UMBRELLA FOR RAIN MORE THAN FOUR MILOMETERS", "normalized_seqlogical": "[IN:GET_WEATHER DO I NEED AN [SL:WEATHER_ATTRIBUTE UMBRELLA ] FOR [SL:WEATHER_ATTRIBUTE RAIN ] MORE THAN FOUR MILOMETERS ]", "decoupled_normalized_seqlogical": "[IN:GET_WEATHER [SL:WEATHER_ATTRIBUTE UMBRELLA ] [SL:WEATHER_ATTRIBUTE RAIN ] ]"}, "prediction": "", "function_calls": [{"name": "get_weather", "arguments": {"weather_attribute": "rainfall"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00000457.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Please text [SL:RECIPIENT [IN:GET_EVENT_ATTENDEE everyone going to [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the beach ] ] ] ] ] to tell them [SL:CONTENT_EXACT we will be there at 5 ] ]", "parameters": {}, "sentence": "Please text everyone going to the beach to tell them we will be there at 5", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "PLEASE TEXT EVERYONE GOING TO THE BEACH TO TELL THEM WE WILL BE THERE AT FIVE", "normalized_seqlogical": "[IN:SEND_MESSAGE PLEASE TEXT [SL:RECIPIENT [IN:GET_EVENT_ATTENDEE EVERYONE GOING TO [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE BEACH ] ] ] ] ] TO TELL THEM [SL:CONTENT_EXACT WE WILL BE THERE AT FIVE ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00000457.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Please text everyone going to the beach to tell them we will be there at 5", "seqlogical": "[IN:SEND_MESSAGE Please text [SL:RECIPIENT [IN:GET_EVENT_ATTENDEE everyone going to [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the beach ] ] ] ] ] to tell them [SL:CONTENT_EXACT we will be there at 5 ] ]", "normalized_utterance": "PLEASE TEXT EVERYONE GOING TO THE BEACH TO TELL THEM WE WILL BE THERE AT FIVE", "normalized_seqlogical": "[IN:SEND_MESSAGE PLEASE TEXT [SL:RECIPIENT [IN:GET_EVENT_ATTENDEE EVERYONE GOING TO [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE BEACH ] ] ] ] ] TO TELL THEM [SL:CONTENT_EXACT WE WILL BE THERE AT FIVE ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_EVENT_ATTENDEE [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE BEACH ] ] ] ] ] [SL:CONTENT_EXACT WE WILL BE THERE AT FIVE ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "we will be there at five", "recipient": "everyone going to the beach"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00000457.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Please text [SL:RECIPIENT [IN:GET_EVENT_ATTENDEE everyone going to [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the beach ] ] ] ] ] to tell them [SL:CONTENT_EXACT we will be there at 5 ] ]", "parameters": {}, "sentence": "Please text everyone going to the beach to tell them we will be there at 5", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "PLEASE TEXT EVERYONE GOING TO THE BEACH TO TELL THEM WE WILL BE THERE AT FIVE", "normalized_seqlogical": "[IN:SEND_MESSAGE PLEASE TEXT [SL:RECIPIENT [IN:GET_EVENT_ATTENDEE EVERYONE GOING TO [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE BEACH ] ] ] ] ] TO TELL THEM [SL:CONTENT_EXACT WE WILL BE THERE AT FIVE ] ]", "raw_data": {"file_id": "test_1/messaging_test/00000457.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Please text everyone going to the beach to tell them we will be there at 5", "seqlogical": "[IN:SEND_MESSAGE Please text [SL:RECIPIENT [IN:GET_EVENT_ATTENDEE everyone going to [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the beach ] ] ] ] ] to tell them [SL:CONTENT_EXACT we will be there at 5 ] ]", "normalized_utterance": "PLEASE TEXT EVERYONE GOING TO THE BEACH TO TELL THEM WE WILL BE THERE AT FIVE", "normalized_seqlogical": "[IN:SEND_MESSAGE PLEASE TEXT [SL:RECIPIENT [IN:GET_EVENT_ATTENDEE EVERYONE GOING TO [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE BEACH ] ] ] ] ] TO TELL THEM [SL:CONTENT_EXACT WE WILL BE THERE AT FIVE ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_EVENT_ATTENDEE [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE BEACH ] ] ] ] ] [SL:CONTENT_EXACT WE WILL BE THERE AT FIVE ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "We will be there at five.", "recipient": "everyone going to the beach"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00001570.wav", "split": "test", "intent": "[IN:GET_MESSAGE Pull up [SL:SENDER [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] 's text from [SL:RESOURCE WhatsApp ] ]", "parameters": {}, "sentence": "Pull up mom's text from WhatsApp", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "PULL UP MOM 'S TEXT FROM WHATSAPP", "normalized_seqlogical": "[IN:GET_MESSAGE PULL UP [SL:SENDER [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] 'S TEXT FROM [SL:RESOURCE WHATSAPP ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00001570.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Pull up mom's text from WhatsApp", "seqlogical": "[IN:GET_MESSAGE Pull up [SL:SENDER [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] 's text from [SL:RESOURCE WhatsApp ] ]", "normalized_utterance": "PULL UP MOM 'S TEXT FROM WHATSAPP", "normalized_seqlogical": "[IN:GET_MESSAGE PULL UP [SL:SENDER [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] 'S TEXT FROM [SL:RESOURCE WHATSAPP ] ]", "decoupled_normalized_seqlogical": "[IN:GET_MESSAGE [SL:SENDER [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:RESOURCE WHATSAPP ] ]"}, "prediction": "", "function_calls": [{"name": "ignore_message", "arguments": {"content_exact": "உள்ளப் மாம்ஸ் டெக்ஸ்ட் வாட்ட்சப்."}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00002689.wav", "split": "test", "intent": "[IN:SEND_MESSAGE text [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION wife ] ] ] to [SL:CONTENT_EXACT pick up my youngest son early today because of the storm ] . ]", "parameters": {}, "sentence": "text my wife to pick up my youngest son early today because of the storm.", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "TEXT MY WIFE TO PICK UP MY YOUNGEST SON EARLY TODAY BECAUSE OF THE STORM", "normalized_seqlogical": "[IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION WIFE ] ] ] TO [SL:CONTENT_EXACT PICK UP MY YOUNGEST SON EARLY TODAY BECAUSE OF THE STORM ] ]", "raw_data": {"file_id": "test_1/messaging_test/00002689.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "text my wife to pick up my youngest son early today because of the storm.", "seqlogical": "[IN:SEND_MESSAGE text [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION wife ] ] ] to [SL:CONTENT_EXACT pick up my youngest son early today because of the storm ] . ]", "normalized_utterance": "TEXT MY WIFE TO PICK UP MY YOUNGEST SON EARLY TODAY BECAUSE OF THE STORM", "normalized_seqlogical": "[IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION WIFE ] ] ] TO [SL:CONTENT_EXACT PICK UP MY YOUNGEST SON EARLY TODAY BECAUSE OF THE STORM ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION WIFE ] ] ] [SL:CONTENT_EXACT PICK UP MY YOUNGEST SON EARLY TODAY BECAUSE OF THE STORM ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "pick up my youngest son early today because of the storm.", "recipient": "my wife"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00000799.wav", "split": "test", "intent": "[IN:SEND_MESSAGE message [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION friends ] ] ] that [SL:CONTENT_EXACT there is a fundraiser going on at RuffHouse Rescue and they can donate ] ]", "parameters": {}, "sentence": "message my friends that there is a fundraiser going on at RuffHouse Rescue and they can donate", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "MESSAGE MY FRIENDS THAT THERE IS A FUNDRAISER GOING ON AT RUFFHOUSE RESCUE AND THEY CAN DONATE", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION FRIENDS ] ] ] THAT [SL:CONTENT_EXACT THERE IS A FUNDRAISER GOING ON AT RUFFHOUSE RESCUE AND THEY CAN DONATE ] ]", "raw_data": {"file_id": "test_1/messaging_test/00000799.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "message my friends that there is a fundraiser going on at RuffHouse Rescue and they can donate", "seqlogical": "[IN:SEND_MESSAGE message [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION friends ] ] ] that [SL:CONTENT_EXACT there is a fundraiser going on at RuffHouse Rescue and they can donate ] ]", "normalized_utterance": "MESSAGE MY FRIENDS THAT THERE IS A FUNDRAISER GOING ON AT RUFFHOUSE RESCUE AND THEY CAN DONATE", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION FRIENDS ] ] ] THAT [SL:CONTENT_EXACT THERE IS A FUNDRAISER GOING ON AT RUFFHOUSE RESCUE AND THEY CAN DONATE ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION FRIENDS ] ] ] [SL:CONTENT_EXACT THERE IS A FUNDRAISER GOING ON AT RUFFHOUSE RESCUE AND THEY CAN DONATE ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "my friends", "content_exact": "there's a fundraiser going on at Roughhouse Rescue and they can donate."}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00002192.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Let 's reply to [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION grandma ] ] ] with a [SL:TYPE_CONTENT voice ] message ]", "parameters": {}, "sentence": "Let's reply to grandma with a voice message", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "LET 'S REPLY TO GRANDMA WITH A VOICE MESSAGE", "normalized_seqlogical": "[IN:SEND_MESSAGE LET 'S REPLY TO [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION GRANDMA ] ] ] WITH A [SL:TYPE_CONTENT VOICE ] MESSAGE ]", "raw_data": {"file_id": "test_0/messaging_test_0/00002192.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Let's reply to grandma with a voice message", "seqlogical": "[IN:SEND_MESSAGE Let 's reply to [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION grandma ] ] ] with a [SL:TYPE_CONTENT voice ] message ]", "normalized_utterance": "LET 'S REPLY TO GRANDMA WITH A VOICE MESSAGE", "normalized_seqlogical": "[IN:SEND_MESSAGE LET 'S REPLY TO [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION GRANDMA ] ] ] WITH A [SL:TYPE_CONTENT VOICE ] MESSAGE ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION GRANDMA ] ] ] [SL:TYPE_CONTENT VOICE ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "grandma", "content_exact": "a wise message"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00002747.wav", "split": "test", "intent": "[IN:SEND_MESSAGE text [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Mom ] ] ] . [SL:CONTENT_EXACT We need to talk ] . ]", "parameters": {}, "sentence": "text Mom. We need to talk.", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "TEXT MOM WE NEED TO TALK", "normalized_seqlogical": "[IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT WE NEED TO TALK ] ]", "raw_data": {"file_id": "test_1/messaging_test/00002747.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "text Mom. We need to talk.", "seqlogical": "[IN:SEND_MESSAGE text [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Mom ] ] ] . [SL:CONTENT_EXACT We need to talk ] . ]", "normalized_utterance": "TEXT MOM WE NEED TO TALK", "normalized_seqlogical": "[IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT WE NEED TO TALK ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT WE NEED TO TALK ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "we need to talk.", "recipient": "mom"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00000523.wav", "split": "test", "intent": "[IN:SEND_MESSAGE send a message to [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION dad ] ] ] about [SL:CONTENT_EXACT the beautiful weather on the beach in del mar ] and tell him [SL:CONTENT_EXACT he might want to move out of pennsylvania ] ]", "parameters": {}, "sentence": "send a message to dad about the beautiful weather on the beach in del mar and tell him he might want to move out of pennsylvania", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "SEND A MESSAGE TO DAD ABOUT THE BEAUTIFUL WEATHER ON THE BEACH IN DEL MAR AND TELL HIM HE MIGHT WANT TO MOVE OUT OF PENNSYLVANIA", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND A MESSAGE TO [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ABOUT [SL:CONTENT_EXACT THE BEAUTIFUL WEATHER ON THE BEACH IN DEL MAR ] AND TELL HIM [SL:CONTENT_EXACT HE MIGHT WANT TO MOVE OUT OF PENNSYLVANIA ] ]", "raw_data": {"file_id": "test_1/messaging_test/00000523.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "send a message to dad about the beautiful weather on the beach in del mar and tell him he might want to move out of pennsylvania", "seqlogical": "[IN:SEND_MESSAGE send a message to [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION dad ] ] ] about [SL:CONTENT_EXACT the beautiful weather on the beach in del mar ] and tell him [SL:CONTENT_EXACT he might want to move out of pennsylvania ] ]", "normalized_utterance": "SEND A MESSAGE TO DAD ABOUT THE BEAUTIFUL WEATHER ON THE BEACH IN DEL MAR AND TELL HIM HE MIGHT WANT TO MOVE OUT OF PENNSYLVANIA", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND A MESSAGE TO [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ABOUT [SL:CONTENT_EXACT THE BEAUTIFUL WEATHER ON THE BEACH IN DEL MAR ] AND TELL HIM [SL:CONTENT_EXACT HE MIGHT WANT TO MOVE OUT OF PENNSYLVANIA ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] [SL:CONTENT_EXACT THE BEAUTIFUL WEATHER ON THE BEACH IN DEL MAR ] [SL:CONTENT_EXACT HE MIGHT WANT TO MOVE OUT OF PENNSYLVANIA ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "Dad", "content_exact": "The weather on the beach in Del Mar is beautiful. You might want to move out of Pennsylvania."}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00002890.wav", "split": "test", "intent": "[IN:SEND_MESSAGE send a message , “ [SL:CONTENT_EXACT I got it ] ” to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION Mom ] ] ] . ]", "parameters": {}, "sentence": "send a message, “I got it” to my Mom.", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "SEND A MESSAGE I GOT IT TO MY MOM", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND A MESSAGE [SL:CONTENT_EXACT I GOT IT ] TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] ]", "raw_data": {"file_id": "test_1/messaging_test/00002890.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "send a message, “I got it” to my Mom.", "seqlogical": "[IN:SEND_MESSAGE send a message , “ [SL:CONTENT_EXACT I got it ] ” to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION Mom ] ] ] . ]", "normalized_utterance": "SEND A MESSAGE I GOT IT TO MY MOM", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND A MESSAGE [SL:CONTENT_EXACT I GOT IT ] TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:CONTENT_EXACT I GOT IT ] [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "I got it", "recipient": "mom"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00000769.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Send message to [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] to [SL:CONTENT_EXACT buy eggs ] ]", "parameters": {}, "sentence": "Send message to mom to buy eggs", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "SEND MESSAGE TO MOM TO BUY EGGS", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND MESSAGE TO [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] TO [SL:CONTENT_EXACT BUY EGGS ] ]", "raw_data": {"file_id": "test_1/messaging_test/00000769.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Send message to mom to buy eggs", "seqlogical": "[IN:SEND_MESSAGE Send message to [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] to [SL:CONTENT_EXACT buy eggs ] ]", "normalized_utterance": "SEND MESSAGE TO MOM TO BUY EGGS", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND MESSAGE TO [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] TO [SL:CONTENT_EXACT BUY EGGS ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT BUY EGGS ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "buy eggs", "recipient": "Mom"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00000691.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Send a text to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION grandma ] ] ] asking if [SL:CONTENT_EXACT she still needs me to pick her up tomorrow ] ]", "parameters": {}, "sentence": "Send a text to my grandma asking if she still needs me to pick her up tomorrow", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "SEND A TEXT TO MY GRANDMA ASKING IF SHE STILL NEEDS ME TO PICK HER UP TOMORROW", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND A TEXT TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION GRANDMA ] ] ] ASKING IF [SL:CONTENT_EXACT SHE STILL NEEDS ME TO PICK HER UP TOMORROW ] ]", "raw_data": {"file_id": "test_1/messaging_test/00000691.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Send a text to my grandma asking if she still needs me to pick her up tomorrow", "seqlogical": "[IN:SEND_MESSAGE Send a text to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION grandma ] ] ] asking if [SL:CONTENT_EXACT she still needs me to pick her up tomorrow ] ]", "normalized_utterance": "SEND A TEXT TO MY GRANDMA ASKING IF SHE STILL NEEDS ME TO PICK HER UP TOMORROW", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND A TEXT TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION GRANDMA ] ] ] ASKING IF [SL:CONTENT_EXACT SHE STILL NEEDS ME TO PICK HER UP TOMORROW ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION GRANDMA ] ] ] [SL:CONTENT_EXACT SHE STILL NEEDS ME TO PICK HER UP TOMORROW ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "asking if she still needs me to pick her up tomorrow", "recipient": "grandma"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00002751.wav", "split": "test", "intent": "[IN:SEND_MESSAGE message [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mother ] ] ] , tell her [SL:CONTENT_EXACT I won't be able to make it tomorrow at seven ] . ]", "parameters": {}, "sentence": "message my mother, tell her I won't be able to make it tomorrow at seven.", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "MESSAGE MY MOTHER TELL HER I WON'T BE ABLE TO MAKE IT TOMORROW AT SEVEN", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOTHER ] ] ] TELL HER [SL:CONTENT_EXACT I WON'T BE ABLE TO MAKE IT TOMORROW AT SEVEN ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00002751.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "message my mother, tell her I won't be able to make it tomorrow at seven.", "seqlogical": "[IN:SEND_MESSAGE message [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mother ] ] ] , tell her [SL:CONTENT_EXACT I won't be able to make it tomorrow at seven ] . ]", "normalized_utterance": "MESSAGE MY MOTHER TELL HER I WON'T BE ABLE TO MAKE IT TOMORROW AT SEVEN", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOTHER ] ] ] TELL HER [SL:CONTENT_EXACT I WON'T BE ABLE TO MAKE IT TOMORROW AT SEVEN ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOTHER ] ] ] [SL:CONTENT_EXACT I WON'T BE ABLE TO MAKE IT TOMORROW AT SEVEN ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "Tell her I won't be able to make it tomorrow at seven.", "recipient": "my mother"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00002207.wav", "split": "test", "intent": "[IN:SEND_MESSAGE [SL:TYPE_CONTENT audio ] message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Dad ] ] ] ]", "parameters": {}, "sentence": "audio message Dad", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "AUDIO MESSAGE DAD", "normalized_seqlogical": "[IN:SEND_MESSAGE [SL:TYPE_CONTENT AUDIO ] MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ]", "raw_data": {"file_id": "test_1/messaging_test/00002207.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "audio message Dad", "seqlogical": "[IN:SEND_MESSAGE [SL:TYPE_CONTENT audio ] message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Dad ] ] ] ]", "normalized_utterance": "AUDIO MESSAGE DAD", "normalized_seqlogical": "[IN:SEND_MESSAGE [SL:TYPE_CONTENT AUDIO ] MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:TYPE_CONTENT AUDIO ] [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "Audio message dad", "recipient": "dad"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00000279.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Tell [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION brother ] ] ] that [SL:CONTENT_EXACT Mentor Library is hosting a Dahmer reading tonight ] . ]", "parameters": {}, "sentence": "Tell my brother that Mentor Library is hosting a Dahmer reading tonight.", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "TELL MY BROTHER THAT MENTOR LIBRARY IS HOSTING A DAHMER READING TONIGHT", "normalized_seqlogical": "[IN:SEND_MESSAGE TELL [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION BROTHER ] ] ] THAT [SL:CONTENT_EXACT MENTOR LIBRARY IS HOSTING A DAHMER READING TONIGHT ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00000279.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Tell my brother that Mentor Library is hosting a Dahmer reading tonight.", "seqlogical": "[IN:SEND_MESSAGE Tell [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION brother ] ] ] that [SL:CONTENT_EXACT Mentor Library is hosting a Dahmer reading tonight ] . ]", "normalized_utterance": "TELL MY BROTHER THAT MENTOR LIBRARY IS HOSTING A DAHMER READING TONIGHT", "normalized_seqlogical": "[IN:SEND_MESSAGE TELL [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION BROTHER ] ] ] THAT [SL:CONTENT_EXACT MENTOR LIBRARY IS HOSTING A DAHMER READING TONIGHT ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION BROTHER ] ] ] [SL:CONTENT_EXACT MENTOR LIBRARY IS HOSTING A DAHMER READING TONIGHT ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "my brother", "content_exact": "Mentor Library is hosting a Dahmer reading tonight."}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00000225.wav", "split": "test", "intent": "[IN:SEND_MESSAGE message [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION friends ] ] ] that [SL:CONTENT_EXACT there is a fundraiser going on at RuffHouse Rescue and they can donate ] ]", "parameters": {}, "sentence": "message my friends that there is a fundraiser going on at RuffHouse Rescue and they can donate", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "MESSAGE MY FRIENDS THAT THERE IS A FUNDRAISER GOING ON AT RUFFHOUSE RESCUE AND THEY CAN DONATE", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION FRIENDS ] ] ] THAT [SL:CONTENT_EXACT THERE IS A FUNDRAISER GOING ON AT RUFFHOUSE RESCUE AND THEY CAN DONATE ] ]", "raw_data": {"file_id": "test_1/messaging_test/00000225.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "message my friends that there is a fundraiser going on at RuffHouse Rescue and they can donate", "seqlogical": "[IN:SEND_MESSAGE message [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION friends ] ] ] that [SL:CONTENT_EXACT there is a fundraiser going on at RuffHouse Rescue and they can donate ] ]", "normalized_utterance": "MESSAGE MY FRIENDS THAT THERE IS A FUNDRAISER GOING ON AT RUFFHOUSE RESCUE AND THEY CAN DONATE", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION FRIENDS ] ] ] THAT [SL:CONTENT_EXACT THERE IS A FUNDRAISER GOING ON AT RUFFHOUSE RESCUE AND THEY CAN DONATE ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION FRIENDS ] ] ] [SL:CONTENT_EXACT THERE IS A FUNDRAISER GOING ON AT RUFFHOUSE RESCUE AND THEY CAN DONATE ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "my friends", "content_exact": "there is a fundraiser going on at Rough House Rescue and they can donate."}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00002194.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Respond to [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Mom ] ] ] with an [SL:TYPE_CONTENT audio ] message ]", "parameters": {}, "sentence": "Respond to Mom with an audio message", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "RESPOND TO MOM WITH AN AUDIO MESSAGE", "normalized_seqlogical": "[IN:SEND_MESSAGE RESPOND TO [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] WITH AN [SL:TYPE_CONTENT AUDIO ] MESSAGE ]", "raw_data": {"file_id": "test_0/messaging_test_0/00002194.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Respond to Mom with an audio message", "seqlogical": "[IN:SEND_MESSAGE Respond to [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Mom ] ] ] with an [SL:TYPE_CONTENT audio ] message ]", "normalized_utterance": "RESPOND TO MOM WITH AN AUDIO MESSAGE", "normalized_seqlogical": "[IN:SEND_MESSAGE RESPOND TO [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] WITH AN [SL:TYPE_CONTENT AUDIO ] MESSAGE ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:TYPE_CONTENT AUDIO ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "mom", "content_exact": "audio message"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00002983.wav", "split": "test", "intent": "[IN:SEND_MESSAGE message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] [SL:CONTENT_EXACT I invite you to my celebration party ] . ]", "parameters": {}, "sentence": "message mom I invite you to my celebration party.", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "MESSAGE MOM I INVITE YOU TO MY CELEBRATION PARTY", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT I INVITE YOU TO MY CELEBRATION PARTY ] ]", "raw_data": {"file_id": "test_1/messaging_test/00002983.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "message mom I invite you to my celebration party.", "seqlogical": "[IN:SEND_MESSAGE message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] [SL:CONTENT_EXACT I invite you to my celebration party ] . ]", "normalized_utterance": "MESSAGE MOM I INVITE YOU TO MY CELEBRATION PARTY", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT I INVITE YOU TO MY CELEBRATION PARTY ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT I INVITE YOU TO MY CELEBRATION PARTY ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "mom", "content_exact": "I invite you to my celebration party."}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00002928.wav", "split": "test", "intent": "[IN:SEND_MESSAGE text [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION dad ] ] ] say [SL:CONTENT_EXACT I won't make it ] . ]", "parameters": {}, "sentence": "text my dad say I won't make it.", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "TEXT MY DAD SAY I WON'T MAKE IT", "normalized_seqlogical": "[IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAD ] ] ] SAY [SL:CONTENT_EXACT I WON'T MAKE IT ] ]", "raw_data": {"file_id": "test_1/messaging_test/00002928.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "text my dad say I won't make it.", "seqlogical": "[IN:SEND_MESSAGE text [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION dad ] ] ] say [SL:CONTENT_EXACT I won't make it ] . ]", "normalized_utterance": "TEXT MY DAD SAY I WON'T MAKE IT", "normalized_seqlogical": "[IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAD ] ] ] SAY [SL:CONTENT_EXACT I WON'T MAKE IT ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAD ] ] ] [SL:CONTENT_EXACT I WON'T MAKE IT ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "I won't make it.", "recipient": "dad"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00000895.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Tell [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] ] ] [SL:CONTENT_EXACT we made it to Gatlinburg ] . ]", "parameters": {}, "sentence": "Tell my mom we made it to Gatlinburg.", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "TELL MY MOM WE MADE IT TO GATLINBURG", "normalized_seqlogical": "[IN:SEND_MESSAGE TELL [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT WE MADE IT TO GATLINBURG ] ]", "raw_data": {"file_id": "test_1/messaging_test/00000895.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Tell my mom we made it to Gatlinburg.", "seqlogical": "[IN:SEND_MESSAGE Tell [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] ] ] [SL:CONTENT_EXACT we made it to Gatlinburg ] . ]", "normalized_utterance": "TELL MY MOM WE MADE IT TO GATLINBURG", "normalized_seqlogical": "[IN:SEND_MESSAGE TELL [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT WE MADE IT TO GATLINBURG ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT WE MADE IT TO GATLINBURG ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "mom", "content_exact": "we made it to Gatlinburg."}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00002888.wav", "split": "test", "intent": "[IN:SEND_MESSAGE text [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] ] ] [SL:CONTENT_EXACT i'll be there in um ten minutes ] . ]", "parameters": {}, "sentence": "text my mom i'll be there in um ten minutes.", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "TEXT MY MOM I'LL BE THERE IN UM TEN MINUTES", "normalized_seqlogical": "[IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT I'LL BE THERE IN UM TEN MINUTES ] ]", "raw_data": {"file_id": "test_1/messaging_test/00002888.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "text my mom i'll be there in um ten minutes.", "seqlogical": "[IN:SEND_MESSAGE text [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] ] ] [SL:CONTENT_EXACT i'll be there in um ten minutes ] . ]", "normalized_utterance": "TEXT MY MOM I'LL BE THERE IN UM TEN MINUTES", "normalized_seqlogical": "[IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT I'LL BE THERE IN UM TEN MINUTES ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT I'LL BE THERE IN UM TEN MINUTES ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "I'll be there in ten minutes.", "recipient": "mom"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00001388.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Show the [SL:TYPE_CONTENT picture ] to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION dad ] ] ] ]", "parameters": {}, "sentence": "Show the picture to my dad", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "SHOW THE PICTURE TO MY DAD", "normalized_seqlogical": "[IN:SEND_MESSAGE SHOW THE [SL:TYPE_CONTENT PICTURE ] TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAD ] ] ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00001388.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Show the picture to my dad", "seqlogical": "[IN:SEND_MESSAGE Show the [SL:TYPE_CONTENT picture ] to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION dad ] ] ] ]", "normalized_utterance": "SHOW THE PICTURE TO MY DAD", "normalized_seqlogical": "[IN:SEND_MESSAGE SHOW THE [SL:TYPE_CONTENT PICTURE ] TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAD ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:TYPE_CONTENT PICTURE ] [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAD ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "my daughter"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00001151.wav", "split": "test", "intent": "[IN:SEND_MESSAGE I said message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] to [SL:CONTENT_EXACT bring sun screen ] ]", "parameters": {}, "sentence": "I said message mom to bring sun screen", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "I SAID MESSAGE MOM TO BRING SUNDAY SCREEN", "normalized_seqlogical": "[IN:SEND_MESSAGE I SAID MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] TO [SL:CONTENT_EXACT BRING SUNDAY SCREEN ] ]", "raw_data": {"file_id": "test_1/messaging_test/00001151.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "I said message mom to bring sun screen", "seqlogical": "[IN:SEND_MESSAGE I said message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] to [SL:CONTENT_EXACT bring sun screen ] ]", "normalized_utterance": "I SAID MESSAGE MOM TO BRING SUNDAY SCREEN", "normalized_seqlogical": "[IN:SEND_MESSAGE I SAID MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] TO [SL:CONTENT_EXACT BRING SUNDAY SCREEN ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT BRING SUNDAY SCREEN ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "bring sunscreen", "recipient": "mom"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00001337.wav", "split": "test", "intent": "[IN:SEND_MESSAGE tell [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] ] ] and [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION dad ] ] ] [SL:CONTENT_EXACT i'm going to be late ] ]", "parameters": {}, "sentence": "tell my mom and dad i'm going to be late", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "TELL MY MOM AND DAD I'M GOING TO BE LATE", "normalized_seqlogical": "[IN:SEND_MESSAGE TELL [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] AND [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] [SL:CONTENT_EXACT I'M GOING TO BE LATE ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00001337.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "tell my mom and dad i'm going to be late", "seqlogical": "[IN:SEND_MESSAGE tell [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] ] ] and [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION dad ] ] ] [SL:CONTENT_EXACT i'm going to be late ] ]", "normalized_utterance": "TELL MY MOM AND DAD I'M GOING TO BE LATE", "normalized_seqlogical": "[IN:SEND_MESSAGE TELL [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] AND [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] [SL:CONTENT_EXACT I'M GOING TO BE LATE ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] [SL:CONTENT_EXACT I'M GOING TO BE LATE ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "mom and dad", "content_exact": "I'm going to be late."}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00001080.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Send a mesage to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION brother ] [SL:CONTACT Phil ] ] ] ]", "parameters": {}, "sentence": "Send a mesage to my brother Phil", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "SEND A MESAGE TO MY BROTHER PHIL", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND A MESAGE TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION BROTHER ] [SL:CONTACT PHIL ] ] ] ]", "raw_data": {"file_id": "test_1/messaging_test/00001080.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Send a mesage to my brother Phil", "seqlogical": "[IN:SEND_MESSAGE Send a mesage to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION brother ] [SL:CONTACT Phil ] ] ] ]", "normalized_utterance": "SEND A MESAGE TO MY BROTHER PHIL", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND A MESAGE TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION BROTHER ] [SL:CONTACT PHIL ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION BROTHER ] [SL:CONTACT PHIL ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "Phil", "content_exact": "Hello Phil!"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00000478.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Let [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION friend ] [SL:CONTACT Susheela ] ] ] know that [SL:CONTENT_EXACT I am running late ] . ]", "parameters": {}, "sentence": "Let my friend Susheela know that I am running late.", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "LET MY FRIEND SUSHEELA KNOW THAT I AM RUNNING LATE", "normalized_seqlogical": "[IN:SEND_MESSAGE LET [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION FRIEND ] [SL:CONTACT SUSHEELA ] ] ] KNOW THAT [SL:CONTENT_EXACT I AM RUNNING LATE ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00000478.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Let my friend Susheela know that I am running late.", "seqlogical": "[IN:SEND_MESSAGE Let [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION friend ] [SL:CONTACT Susheela ] ] ] know that [SL:CONTENT_EXACT I am running late ] . ]", "normalized_utterance": "LET MY FRIEND SUSHEELA KNOW THAT I AM RUNNING LATE", "normalized_seqlogical": "[IN:SEND_MESSAGE LET [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION FRIEND ] [SL:CONTACT SUSHEELA ] ] ] KNOW THAT [SL:CONTENT_EXACT I AM RUNNING LATE ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION FRIEND ] [SL:CONTACT SUSHEELA ] ] ] [SL:CONTENT_EXACT I AM RUNNING LATE ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "I am running late.", "recipient": "Sushila"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00000663.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION grandma ] [SL:CONTACT Root ] ] ] and tell her [SL:CONTENT_EXACT im on my way ] ]", "parameters": {}, "sentence": "Message grandma Root and tell her im on my way", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "MESSAGE GRANDMA ROOT AND TELL HER IM ON MY WAY", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION GRANDMA ] [SL:CONTACT ROOT ] ] ] AND TELL HER [SL:CONTENT_EXACT IM ON MY WAY ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00000663.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Message grandma Root and tell her im on my way", "seqlogical": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION grandma ] [SL:CONTACT Root ] ] ] and tell her [SL:CONTENT_EXACT im on my way ] ]", "normalized_utterance": "MESSAGE GRANDMA ROOT AND TELL HER IM ON MY WAY", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION GRANDMA ] [SL:CONTACT ROOT ] ] ] AND TELL HER [SL:CONTENT_EXACT IM ON MY WAY ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION GRANDMA ] [SL:CONTACT ROOT ] ] ] [SL:CONTENT_EXACT IM ON MY WAY ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "I am on my way.", "recipient": "Grandma Ruth"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00000823.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] ] ] asking [SL:CONTENT_EXACT what she wants for dinner ] ]", "parameters": {}, "sentence": "Message my mom asking what she wants for dinner", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "MESSAGE MY MOM ASKING WHAT SHE WANTS FOR DINNER", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] ASKING [SL:CONTENT_EXACT WHAT SHE WANTS FOR DINNER ] ]", "raw_data": {"file_id": "test_1/messaging_test/00000823.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Message my mom asking what she wants for dinner", "seqlogical": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] ] ] asking [SL:CONTENT_EXACT what she wants for dinner ] ]", "normalized_utterance": "MESSAGE MY MOM ASKING WHAT SHE WANTS FOR DINNER", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] ASKING [SL:CONTENT_EXACT WHAT SHE WANTS FOR DINNER ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT WHAT SHE WANTS FOR DINNER ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "What do you want for dinner?", "recipient": "mom"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00001533.wav", "split": "test", "intent": "[IN:GET_MESSAGE Did [SL:SENDER [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] ] ] send something on [SL:RESOURCE Whatsapp ] ? ]", "parameters": {}, "sentence": "Did my mom send something on Whatsapp?", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "DID MY MOM SEND SOMETHING ON WHATSAPP", "normalized_seqlogical": "[IN:GET_MESSAGE DID [SL:SENDER [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] SEND SOMETHING ON [SL:RESOURCE WHATSAPP ] ]", "raw_data": {"file_id": "test_1/messaging_test/00001533.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Did my mom send something on Whatsapp?", "seqlogical": "[IN:GET_MESSAGE Did [SL:SENDER [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] ] ] send something on [SL:RESOURCE Whatsapp ] ? ]", "normalized_utterance": "DID MY MOM SEND SOMETHING ON WHATSAPP", "normalized_seqlogical": "[IN:GET_MESSAGE DID [SL:SENDER [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] SEND SOMETHING ON [SL:RESOURCE WHATSAPP ] ]", "decoupled_normalized_seqlogical": "[IN:GET_MESSAGE [SL:SENDER [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] [SL:RESOURCE WHATSAPP ] ]"}, "prediction": "", "function_calls": [{"name": "get_message", "arguments": {"recipient": "mom", "name_app": "WhatsApp"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00001400.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Send that [SL:TYPE_CONTENT photo ] to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION husband ] ] ] ]", "parameters": {}, "sentence": "Send that photo to my husband", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "SEND THAT PHOTO TO MY HUSBAND", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND THAT [SL:TYPE_CONTENT PHOTO ] TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION HUSBAND ] ] ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00001400.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Send that photo to my husband", "seqlogical": "[IN:SEND_MESSAGE Send that [SL:TYPE_CONTENT photo ] to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION husband ] ] ] ]", "normalized_utterance": "SEND THAT PHOTO TO MY HUSBAND", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND THAT [SL:TYPE_CONTENT PHOTO ] TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION HUSBAND ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:TYPE_CONTENT PHOTO ] [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION HUSBAND ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "that photo", "recipient": "my husband"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00000816.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Let [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION sister ] ] ] know to [SL:CONTENT_EXACT check her email for the invite to career day ] . ]", "parameters": {}, "sentence": "Let my sister know to check her email for the invite to career day.", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "LET MY SISTER KNOW TO CHECK HER EMAIL FOR THE INVITE TO CAREER DAY", "normalized_seqlogical": "[IN:SEND_MESSAGE LET [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION SISTER ] ] ] KNOW TO [SL:CONTENT_EXACT CHECK HER EMAIL FOR THE INVITE TO CAREER DAY ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00000816.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Let my sister know to check her email for the invite to career day.", "seqlogical": "[IN:SEND_MESSAGE Let [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION sister ] ] ] know to [SL:CONTENT_EXACT check her email for the invite to career day ] . ]", "normalized_utterance": "LET MY SISTER KNOW TO CHECK HER EMAIL FOR THE INVITE TO CAREER DAY", "normalized_seqlogical": "[IN:SEND_MESSAGE LET [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION SISTER ] ] ] KNOW TO [SL:CONTENT_EXACT CHECK HER EMAIL FOR THE INVITE TO CAREER DAY ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION SISTER ] ] ] [SL:CONTENT_EXACT CHECK HER EMAIL FOR THE INVITE TO CAREER DAY ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "sister", "content_exact": "Check your email for the invite to Career Day."}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00002123.wav", "split": "test", "intent": "[IN:SEND_MESSAGE [SL:RESOURCE SMS ] [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION grandma ] ] ] ]", "parameters": {}, "sentence": "SMS grandma", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "SMS GRANDMA", "normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RESOURCE SMS ] [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION GRANDMA ] ] ] ]", "raw_data": {"file_id": "test_1/messaging_test/00002123.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "SMS grandma", "seqlogical": "[IN:SEND_MESSAGE [SL:RESOURCE SMS ] [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION grandma ] ] ] ]", "normalized_utterance": "SMS GRANDMA", "normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RESOURCE SMS ] [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION GRANDMA ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RESOURCE SMS ] [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION GRANDMA ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "grammar", "recipient": "SMS"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00001104.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Message to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mother ] ] ] that [SL:CONTENT_EXACT she took a wrong turn at 57th Street ! She should have taken 57th avenue ! Get here quick ] ! ]", "parameters": {}, "sentence": "Message to my mother that she took a wrong turn at 57th Street! She should have taken 57th avenue! Get here quick!", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "MESSAGE TO MY MOTHER THAT SHE TOOK A WRONG TURN AT FIFTY SEVENTH STREET SHE SHOULD HAVE TAKEN FIFTY SEVENTH AVENUE GET HERE QUICK", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOTHER ] ] ] THAT [SL:CONTENT_EXACT SHE TOOK A WRONG TURN AT FIFTY SEVENTH STREET SHE SHOULD HAVE TAKEN FIFTY SEVENTH AVENUE GET HERE QUICK ] ]", "raw_data": {"file_id": "test_1/messaging_test/00001104.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Message to my mother that she took a wrong turn at 57th Street! She should have taken 57th avenue! Get here quick!", "seqlogical": "[IN:SEND_MESSAGE Message to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mother ] ] ] that [SL:CONTENT_EXACT she took a wrong turn at 57th Street ! She should have taken 57th avenue ! Get here quick ] ! ]", "normalized_utterance": "MESSAGE TO MY MOTHER THAT SHE TOOK A WRONG TURN AT FIFTY SEVENTH STREET SHE SHOULD HAVE TAKEN FIFTY SEVENTH AVENUE GET HERE QUICK", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOTHER ] ] ] THAT [SL:CONTENT_EXACT SHE TOOK A WRONG TURN AT FIFTY SEVENTH STREET SHE SHOULD HAVE TAKEN FIFTY SEVENTH AVENUE GET HERE QUICK ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOTHER ] ] ] [SL:CONTENT_EXACT SHE TOOK A WRONG TURN AT FIFTY SEVENTH STREET SHE SHOULD HAVE TAKEN FIFTY SEVENTH AVENUE GET HERE QUICK ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "my mother", "content_exact": "she took a wrong turn at 57th Street. She should have taken 57th Avenue, get here quick!"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00000316.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION grandmother ] ] ] and tell her [SL:CONTENT_EXACT I will pick her up for the fundraiser today at 2 pm ] ]", "parameters": {}, "sentence": "Message my grandmother and tell her I will pick her up for the fundraiser today at 2pm", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "MESSAGE MY GRANDMOTHER AND TELL HER I WILL PICK HER UP FOR THE FUNDRAISER TODAY AT TWO PM", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION GRANDMOTHER ] ] ] AND TELL HER [SL:CONTENT_EXACT I WILL PICK HER UP FOR THE FUNDRAISER TODAY AT TWO PM ] ]", "raw_data": {"file_id": "test_1/messaging_test/00000316.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Message my grandmother and tell her I will pick her up for the fundraiser today at 2pm", "seqlogical": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION grandmother ] ] ] and tell her [SL:CONTENT_EXACT I will pick her up for the fundraiser today at 2 pm ] ]", "normalized_utterance": "MESSAGE MY GRANDMOTHER AND TELL HER I WILL PICK HER UP FOR THE FUNDRAISER TODAY AT TWO PM", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION GRANDMOTHER ] ] ] AND TELL HER [SL:CONTENT_EXACT I WILL PICK HER UP FOR THE FUNDRAISER TODAY AT TWO PM ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION GRANDMOTHER ] ] ] [SL:CONTENT_EXACT I WILL PICK HER UP FOR THE FUNDRAISER TODAY AT TWO PM ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "grandmother", "content_exact": "I will pick you up from the fundraiser today at 2 PM."}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00002989.wav", "split": "test", "intent": "[IN:SEND_MESSAGE message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mum ] ] ] to [SL:CONTENT_EXACT call Aunty Rose by two pm ] . ]", "parameters": {}, "sentence": "message mum to call Aunty Rose by two pm.", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "MESSAGE MUM TO CALL AUNTY ROSE BY TWO PM", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MUM ] ] ] TO [SL:CONTENT_EXACT CALL AUNTY ROSE BY TWO PM ] ]", "raw_data": {"file_id": "test_1/messaging_test/00002989.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "message mum to call Aunty Rose by two pm.", "seqlogical": "[IN:SEND_MESSAGE message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mum ] ] ] to [SL:CONTENT_EXACT call Aunty Rose by two pm ] . ]", "normalized_utterance": "MESSAGE MUM TO CALL AUNTY ROSE BY TWO PM", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MUM ] ] ] TO [SL:CONTENT_EXACT CALL AUNTY ROSE BY TWO PM ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MUM ] ] ] [SL:CONTENT_EXACT CALL AUNTY ROSE BY TWO PM ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "call Aunty Rose by 2pm", "recipient": "mum"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00002865.wav", "split": "test", "intent": "[IN:SEND_MESSAGE tell [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] [SL:CONTENT_EXACT something ] . ]", "parameters": {}, "sentence": "tell mom something.", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "TELL MOM SOMETHING", "normalized_seqlogical": "[IN:SEND_MESSAGE TELL [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT SOMETHING ] ]", "raw_data": {"file_id": "test_1/messaging_test/00002865.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "tell mom something.", "seqlogical": "[IN:SEND_MESSAGE tell [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] [SL:CONTENT_EXACT something ] . ]", "normalized_utterance": "TELL MOM SOMETHING", "normalized_seqlogical": "[IN:SEND_MESSAGE TELL [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT SOMETHING ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT SOMETHING ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "mom", "content_exact": "something"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00000916.wav", "split": "test", "intent": "[IN:SEND_MESSAGE send a message to [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION dad ] ] ] wishing him a [SL:CONTENT_EXACT happy fathers day ] ]", "parameters": {}, "sentence": "send a message to dad wishing him a happy fathers day", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "SEND A MESSAGE TO DAD WISHING HIM A HAPPY FATHERS DAY", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND A MESSAGE TO [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] WISHING HIM A [SL:CONTENT_EXACT HAPPY FATHERS DAY ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00000916.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "send a message to dad wishing him a happy fathers day", "seqlogical": "[IN:SEND_MESSAGE send a message to [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION dad ] ] ] wishing him a [SL:CONTENT_EXACT happy fathers day ] ]", "normalized_utterance": "SEND A MESSAGE TO DAD WISHING HIM A HAPPY FATHERS DAY", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND A MESSAGE TO [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] WISHING HIM A [SL:CONTENT_EXACT HAPPY FATHERS DAY ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] [SL:CONTENT_EXACT HAPPY FATHERS DAY ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "wishing him a happy Father's Day", "recipient": "Dad"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00000960.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Send a message to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION Niece ] [SL:CONTACT Erica ] ] ] , [SL:CONTENT_EXACT when I should be arriving Tuesday at her home in Columbus , Ohio ] . ]", "parameters": {}, "sentence": "Send a message to my Niece Erica, when I should be arriving Tuesday at her home in Columbus, Ohio.", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "SEND A MESSAGE TO MY NIECE ERICA WHEN I SHOULD BE ARRIVING TUESDAY AT HER HOME IN COLUMBUS OHIO", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND A MESSAGE TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION NIECE ] [SL:CONTACT ERICA ] ] ] [SL:CONTENT_EXACT WHEN I SHOULD BE ARRIVING TUESDAY AT HER HOME IN COLUMBUS OHIO ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00000960.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Send a message to my Niece Erica, when I should be arriving Tuesday at her home in Columbus, Ohio.", "seqlogical": "[IN:SEND_MESSAGE Send a message to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION Niece ] [SL:CONTACT Erica ] ] ] , [SL:CONTENT_EXACT when I should be arriving Tuesday at her home in Columbus , Ohio ] . ]", "normalized_utterance": "SEND A MESSAGE TO MY NIECE ERICA WHEN I SHOULD BE ARRIVING TUESDAY AT HER HOME IN COLUMBUS OHIO", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND A MESSAGE TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION NIECE ] [SL:CONTACT ERICA ] ] ] [SL:CONTENT_EXACT WHEN I SHOULD BE ARRIVING TUESDAY AT HER HOME IN COLUMBUS OHIO ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION NIECE ] [SL:CONTACT ERICA ] ] ] [SL:CONTENT_EXACT WHEN I SHOULD BE ARRIVING TUESDAY AT HER HOME IN COLUMBUS OHIO ] ]"}, "prediction": "", "function_calls": [{"name": "get_estimated_arrival", "arguments": {"destination": "Columbus, Ohio", "date_time_departure": "next Tuesday"}}, {"name": "send_message", "arguments": {"recipient": "Erica", "content_exact": "I should be arriving at your home in Columbus, Ohio on Tuesday."}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00000888.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Notify [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mother ] ] ] that [SL:CONTENT_EXACT I will be at the debate on Tuesday ] ]", "parameters": {}, "sentence": "Notify my mother that I will be at the debate on Tuesday", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "NOTIFY MY MOTHER THAT I WILL BE AT THE DEBATE ON TUESDAY", "normalized_seqlogical": "[IN:SEND_MESSAGE NOTIFY [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOTHER ] ] ] THAT [SL:CONTENT_EXACT I WILL BE AT THE DEBATE ON TUESDAY ] ]", "raw_data": {"file_id": "test_1/messaging_test/00000888.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Notify my mother that I will be at the debate on Tuesday", "seqlogical": "[IN:SEND_MESSAGE Notify [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mother ] ] ] that [SL:CONTENT_EXACT I will be at the debate on Tuesday ] ]", "normalized_utterance": "NOTIFY MY MOTHER THAT I WILL BE AT THE DEBATE ON TUESDAY", "normalized_seqlogical": "[IN:SEND_MESSAGE NOTIFY [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOTHER ] ] ] THAT [SL:CONTENT_EXACT I WILL BE AT THE DEBATE ON TUESDAY ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOTHER ] ] ] [SL:CONTENT_EXACT I WILL BE AT THE DEBATE ON TUESDAY ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "I will be at the debate on Tuesday.", "recipient": "my mother"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00000162.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] and [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION grandma ] ] ] and tell them [SL:CONTENT_EXACT I will be there in 5 minutes ] . ]", "parameters": {}, "sentence": "Message mom and grandma and tell them I will be there in 5 minutes.", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "MESSAGE MOM AND GRANDMA AND TELL THEM I WILL BE THERE IN FIVE MINUTES", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] AND [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION GRANDMA ] ] ] AND TELL THEM [SL:CONTENT_EXACT I WILL BE THERE IN FIVE MINUTES ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00000162.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Message mom and grandma and tell them I will be there in 5 minutes.", "seqlogical": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] and [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION grandma ] ] ] and tell them [SL:CONTENT_EXACT I will be there in 5 minutes ] . ]", "normalized_utterance": "MESSAGE MOM AND GRANDMA AND TELL THEM I WILL BE THERE IN FIVE MINUTES", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] AND [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION GRANDMA ] ] ] AND TELL THEM [SL:CONTENT_EXACT I WILL BE THERE IN FIVE MINUTES ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION GRANDMA ] ] ] [SL:CONTENT_EXACT I WILL BE THERE IN FIVE MINUTES ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "Mom", "content_exact": "I will be there in five minutes."}}, {"name": "send_message", "arguments": {"recipient": "Grandma", "content_exact": "I will be there in five minutes."}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00001562.wav", "split": "test", "intent": "[IN:GET_MESSAGE Pull up texts from [SL:SENDER [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION sweetheart ] ] ] on [SL:RESOURCE WhatsApp ] ]", "parameters": {}, "sentence": "Pull up texts from my sweetheart on WhatsApp", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "PULL UP TEXTS FROM MY SWEETHEART ON WHATSAPP", "normalized_seqlogical": "[IN:GET_MESSAGE PULL UP TEXTS FROM [SL:SENDER [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION SWEETHEART ] ] ] ON [SL:RESOURCE WHATSAPP ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00001562.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Pull up texts from my sweetheart on WhatsApp", "seqlogical": "[IN:GET_MESSAGE Pull up texts from [SL:SENDER [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION sweetheart ] ] ] on [SL:RESOURCE WhatsApp ] ]", "normalized_utterance": "PULL UP TEXTS FROM MY SWEETHEART ON WHATSAPP", "normalized_seqlogical": "[IN:GET_MESSAGE PULL UP TEXTS FROM [SL:SENDER [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION SWEETHEART ] ] ] ON [SL:RESOURCE WHATSAPP ] ]", "decoupled_normalized_seqlogical": "[IN:GET_MESSAGE [SL:SENDER [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION SWEETHEART ] ] ] [SL:RESOURCE WHATSAPP ] ]"}, "prediction": "", "function_calls": [{"name": "get_message", "arguments": {"recipient": "my sweet daughter", "name_app": "WhatsApp"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00000516.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] and tell her [SL:CONTENT_EXACT it will take her 25 minutes to get from home to the theater ] . ]", "parameters": {}, "sentence": "Message mom and tell her it will take her 25 minutes to get from home to the theater.", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "MESSAGE MOM AND TELL HER IT WILL TAKE HER TWENTY FIVE MINUTES TO GET FROM HOME TO THE THEATER", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] AND TELL HER [SL:CONTENT_EXACT IT WILL TAKE HER TWENTY FIVE MINUTES TO GET FROM HOME TO THE THEATER ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00000516.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Message mom and tell her it will take her 25 minutes to get from home to the theater.", "seqlogical": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] and tell her [SL:CONTENT_EXACT it will take her 25 minutes to get from home to the theater ] . ]", "normalized_utterance": "MESSAGE MOM AND TELL HER IT WILL TAKE HER TWENTY FIVE MINUTES TO GET FROM HOME TO THE THEATER", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] AND TELL HER [SL:CONTENT_EXACT IT WILL TAKE HER TWENTY FIVE MINUTES TO GET FROM HOME TO THE THEATER ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT IT WILL TAKE HER TWENTY FIVE MINUTES TO GET FROM HOME TO THE THEATER ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "mom", "content_exact": "it will take her 25 minutes to get from home to the theater."}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00000734.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Mom ] ] ] to ask if [SL:CONTENT_EXACT she locked the door ] ]", "parameters": {}, "sentence": "Message Mom to ask if she locked the door", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "MESSAGE MOM TO ASK IF SHE LOCKED THE DOOR", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] TO ASK IF [SL:CONTENT_EXACT SHE LOCKED THE DOOR ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00000734.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Message Mom to ask if she locked the door", "seqlogical": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Mom ] ] ] to ask if [SL:CONTENT_EXACT she locked the door ] ]", "normalized_utterance": "MESSAGE MOM TO ASK IF SHE LOCKED THE DOOR", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] TO ASK IF [SL:CONTENT_EXACT SHE LOCKED THE DOOR ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT SHE LOCKED THE DOOR ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "ask if she locked the door", "recipient": "mom"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00002041.wav", "split": "test", "intent": "[IN:REACT_MESSAGE [SL:TYPE_REACTION Wow ] to [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Dad ] ] ] 's text ]", "parameters": {}, "sentence": "Wow to Dad's text", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "WOW TO DAD 'S TEXT", "normalized_seqlogical": "[IN:REACT_MESSAGE [SL:TYPE_REACTION WOW ] TO [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] 'S TEXT ]", "raw_data": {"file_id": "test_1/messaging_test/00002041.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Wow to Dad's text", "seqlogical": "[IN:REACT_MESSAGE [SL:TYPE_REACTION Wow ] to [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Dad ] ] ] 's text ]", "normalized_utterance": "WOW TO DAD 'S TEXT", "normalized_seqlogical": "[IN:REACT_MESSAGE [SL:TYPE_REACTION WOW ] TO [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] 'S TEXT ]", "decoupled_normalized_seqlogical": "[IN:REACT_MESSAGE [SL:TYPE_REACTION WOW ] [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "react_message", "arguments": {"recipient": "dats text", "type_reaction": "wow"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00001882.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Send [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION brother ] ] ] a message that says [SL:CONTENT_EXACT don't be late ] ]", "parameters": {}, "sentence": "Send my brother a message that says don't be late", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "SEND MY BROTHER A MESSAGE THAT SAYS DON'T BE LATE", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION BROTHER ] ] ] A MESSAGE THAT SAYS [SL:CONTENT_EXACT DON'T BE LATE ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00001882.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Send my brother a message that says don't be late", "seqlogical": "[IN:SEND_MESSAGE Send [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION brother ] ] ] a message that says [SL:CONTENT_EXACT don't be late ] ]", "normalized_utterance": "SEND MY BROTHER A MESSAGE THAT SAYS DON'T BE LATE", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION BROTHER ] ] ] A MESSAGE THAT SAYS [SL:CONTENT_EXACT DON'T BE LATE ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION BROTHER ] ] ] [SL:CONTENT_EXACT DON'T BE LATE ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "my brother", "content_exact": "Don't be late."}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00002531.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] [SL:CONTENT_EXACT do you want a new bag ] ? ]", "parameters": {}, "sentence": "Message mom do you want a new bag?", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "MESSAGE MOM DO YOU WANT A NEW BAG", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT DO YOU WANT A NEW BAG ] ]", "raw_data": {"file_id": "test_1/messaging_test/00002531.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Message mom do you want a new bag?", "seqlogical": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] [SL:CONTENT_EXACT do you want a new bag ] ? ]", "normalized_utterance": "MESSAGE MOM DO YOU WANT A NEW BAG", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT DO YOU WANT A NEW BAG ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT DO YOU WANT A NEW BAG ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "do you want a new bag?", "recipient": "Mom"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00002478.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Text [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION girlfriend ] ] ] that [SL:CONTENT_EXACT I need some chocolates ] . ]", "parameters": {}, "sentence": "Text my girlfriend that I need some chocolates.", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "TEXT MY GIRLFRIEND THAT I NEED SOME CHOCOLATES", "normalized_seqlogical": "[IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION GIRLFRIEND ] ] ] THAT [SL:CONTENT_EXACT I NEED SOME CHOCOLATES ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00002478.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Text my girlfriend that I need some chocolates.", "seqlogical": "[IN:SEND_MESSAGE Text [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION girlfriend ] ] ] that [SL:CONTENT_EXACT I need some chocolates ] . ]", "normalized_utterance": "TEXT MY GIRLFRIEND THAT I NEED SOME CHOCOLATES", "normalized_seqlogical": "[IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION GIRLFRIEND ] ] ] THAT [SL:CONTENT_EXACT I NEED SOME CHOCOLATES ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION GIRLFRIEND ] ] ] [SL:CONTENT_EXACT I NEED SOME CHOCOLATES ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "I need some chocolates.", "recipient": "girlfriend"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00002180.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Let 's reply to that text from [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION auntie ] ] ] ]", "parameters": {}, "sentence": "Let's reply to that text from auntie", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "LET 'S REPLY TO THAT TEXT FROM AUNTIE", "normalized_seqlogical": "[IN:SEND_MESSAGE LET 'S REPLY TO THAT TEXT FROM [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION AUNTIE ] ] ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00002180.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Let's reply to that text from auntie", "seqlogical": "[IN:SEND_MESSAGE Let 's reply to that text from [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION auntie ] ] ] ]", "normalized_utterance": "LET 'S REPLY TO THAT TEXT FROM AUNTIE", "normalized_seqlogical": "[IN:SEND_MESSAGE LET 'S REPLY TO THAT TEXT FROM [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION AUNTIE ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION AUNTIE ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_message", "arguments": {"recipient": "Aunty"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00001569.wav", "split": "test", "intent": "[IN:GET_MESSAGE Get [SL:RESOURCE Whatsup ] messages from [SL:SENDER [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION cousin ] ] ] . ]", "parameters": {}, "sentence": "Get Whatsup messages from my cousin.", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "GET WHATSUP MESSAGES FROM MY COUSIN", "normalized_seqlogical": "[IN:GET_MESSAGE GET [SL:RESOURCE WHATSUP ] MESSAGES FROM [SL:SENDER [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION COUSIN ] ] ] ]", "raw_data": {"file_id": "test_1/messaging_test/00001569.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Get Whatsup messages from my cousin.", "seqlogical": "[IN:GET_MESSAGE Get [SL:RESOURCE Whatsup ] messages from [SL:SENDER [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION cousin ] ] ] . ]", "normalized_utterance": "GET WHATSUP MESSAGES FROM MY COUSIN", "normalized_seqlogical": "[IN:GET_MESSAGE GET [SL:RESOURCE WHATSUP ] MESSAGES FROM [SL:SENDER [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION COUSIN ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_MESSAGE [SL:RESOURCE WHATSUP ] [SL:SENDER [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION COUSIN ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_message", "arguments": {"recipient": "cousin"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00002838.wav", "split": "test", "intent": "[IN:SEND_MESSAGE type : [SL:CONTENT_EXACT yes ] . and send it to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] ] ] . ]", "parameters": {}, "sentence": "type: yes. and send it to my mom.", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "TYPE YES AND SEND IT TO MY MOM", "normalized_seqlogical": "[IN:SEND_MESSAGE TYPE [SL:CONTENT_EXACT YES ] AND SEND IT TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] ]", "raw_data": {"file_id": "test_1/messaging_test/00002838.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "type: yes. and send it to my mom.", "seqlogical": "[IN:SEND_MESSAGE type : [SL:CONTENT_EXACT yes ] . and send it to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] ] ] . ]", "normalized_utterance": "TYPE YES AND SEND IT TO MY MOM", "normalized_seqlogical": "[IN:SEND_MESSAGE TYPE [SL:CONTENT_EXACT YES ] AND SEND IT TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:CONTENT_EXACT YES ] [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "yes", "recipient": "mom"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00000624.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Send [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION Aunt ] ] ] a message ]", "parameters": {}, "sentence": "Send my Aunt a message", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "SEND MY AUNT A MESSAGE", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION AUNT ] ] ] A MESSAGE ]", "raw_data": {"file_id": "test_0/messaging_test_0/00000624.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Send my Aunt a message", "seqlogical": "[IN:SEND_MESSAGE Send [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION Aunt ] ] ] a message ]", "normalized_utterance": "SEND MY AUNT A MESSAGE", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION AUNT ] ] ] A MESSAGE ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION AUNT ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "aunt", "content_exact": "Hello! How are you?"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00000296.wav", "split": "test", "intent": "[IN:SEND_MESSAGE send a message to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION grandma ] ] ] asking [SL:CONTENT_EXACT when her appointment is next week ] ]", "parameters": {}, "sentence": "send a message to my grandma asking when her appointment is next week", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "SEND A MESSAGE TO MY GRANDMA ASKING WHEN HER APPOINTMENT IS NEXT WEEK", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND A MESSAGE TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION GRANDMA ] ] ] ASKING [SL:CONTENT_EXACT WHEN HER APPOINTMENT IS NEXT WEEK ] ]", "raw_data": {"file_id": "test_1/messaging_test/00000296.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "send a message to my grandma asking when her appointment is next week", "seqlogical": "[IN:SEND_MESSAGE send a message to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION grandma ] ] ] asking [SL:CONTENT_EXACT when her appointment is next week ] ]", "normalized_utterance": "SEND A MESSAGE TO MY GRANDMA ASKING WHEN HER APPOINTMENT IS NEXT WEEK", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND A MESSAGE TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION GRANDMA ] ] ] ASKING [SL:CONTENT_EXACT WHEN HER APPOINTMENT IS NEXT WEEK ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION GRANDMA ] ] ] [SL:CONTENT_EXACT WHEN HER APPOINTMENT IS NEXT WEEK ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "asking when her appointment is next week.", "recipient": "my grandma"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00000401.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] [SL:CONTENT_EXACT please make your potato salad for the party ] ]", "parameters": {}, "sentence": "Message mom please make your potato salad for the party", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "MESSAGE MOM PLEASE MAKE YOUR POTATO SALAD FOR THE PARTY", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT PLEASE MAKE YOUR POTATO SALAD FOR THE PARTY ] ]", "raw_data": {"file_id": "test_1/messaging_test/00000401.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Message mom please make your potato salad for the party", "seqlogical": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] [SL:CONTENT_EXACT please make your potato salad for the party ] ]", "normalized_utterance": "MESSAGE MOM PLEASE MAKE YOUR POTATO SALAD FOR THE PARTY", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT PLEASE MAKE YOUR POTATO SALAD FOR THE PARTY ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT PLEASE MAKE YOUR POTATO SALAD FOR THE PARTY ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "please make your potato salad for the party.", "recipient": "Mom"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00001882.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Send [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION brother ] ] ] a message that says [SL:CONTENT_EXACT don't be late ] ]", "parameters": {}, "sentence": "Send my brother a message that says don't be late", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "SEND MY BROTHER A MESSAGE THAT SAYS DON'T BE LATE", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION BROTHER ] ] ] A MESSAGE THAT SAYS [SL:CONTENT_EXACT DON'T BE LATE ] ]", "raw_data": {"file_id": "test_1/messaging_test/00001882.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Send my brother a message that says don't be late", "seqlogical": "[IN:SEND_MESSAGE Send [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION brother ] ] ] a message that says [SL:CONTENT_EXACT don't be late ] ]", "normalized_utterance": "SEND MY BROTHER A MESSAGE THAT SAYS DON'T BE LATE", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION BROTHER ] ] ] A MESSAGE THAT SAYS [SL:CONTENT_EXACT DON'T BE LATE ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION BROTHER ] ] ] [SL:CONTENT_EXACT DON'T BE LATE ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "don't be late", "recipient": "my brother"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00000072.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Send a message to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION brother ] ] ] and tell him [SL:CONTENT_EXACT he need to go see our mother ] ]", "parameters": {}, "sentence": "Send a message to my brother and tell him he need to go see our mother", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "SEND A MESSAGE TO MY BROTHER AND TELL HIM HE NEED TO GO SEE OUR MOTHER", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND A MESSAGE TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION BROTHER ] ] ] AND TELL HIM [SL:CONTENT_EXACT HE NEED TO GO SEE OUR MOTHER ] ]", "raw_data": {"file_id": "test_1/messaging_test/00000072.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Send a message to my brother and tell him he need to go see our mother", "seqlogical": "[IN:SEND_MESSAGE Send a message to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION brother ] ] ] and tell him [SL:CONTENT_EXACT he need to go see our mother ] ]", "normalized_utterance": "SEND A MESSAGE TO MY BROTHER AND TELL HIM HE NEED TO GO SEE OUR MOTHER", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND A MESSAGE TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION BROTHER ] ] ] AND TELL HIM [SL:CONTENT_EXACT HE NEED TO GO SEE OUR MOTHER ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION BROTHER ] ] ] [SL:CONTENT_EXACT HE NEED TO GO SEE OUR MOTHER ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "my brother", "content_exact": "he needs to go see our mother"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00001918.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Send a [SL:TYPE_CONTENT voice ] message to [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] ]", "parameters": {}, "sentence": "Send a voice message to mom", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "SEND A VOICE MESSAGE TO MOM", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND A [SL:TYPE_CONTENT VOICE ] MESSAGE TO [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] ]", "raw_data": {"file_id": "test_1/messaging_test/00001918.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Send a voice message to mom", "seqlogical": "[IN:SEND_MESSAGE Send a [SL:TYPE_CONTENT voice ] message to [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] ]", "normalized_utterance": "SEND A VOICE MESSAGE TO MOM", "normalized_seqlogical": "[IN:SEND_MESSAGE SEND A [SL:TYPE_CONTENT VOICE ] MESSAGE TO [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:TYPE_CONTENT VOICE ] [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "Mom", "content_exact": "Voice message"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00002926.wav", "split": "test", "intent": "[IN:SEND_MESSAGE message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Dad ] ] ] [SL:CONTENT_EXACT ah ! He was right ] ! ]", "parameters": {}, "sentence": "message Dad ah ! He was right !", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "MESSAGE DAD AH HE WAS RIGHT", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] [SL:CONTENT_EXACT AH HE WAS RIGHT ] ]", "raw_data": {"file_id": "test_1/messaging_test/00002926.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "message Dad ah ! He was right !", "seqlogical": "[IN:SEND_MESSAGE message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Dad ] ] ] [SL:CONTENT_EXACT ah ! He was right ] ! ]", "normalized_utterance": "MESSAGE DAD AH HE WAS RIGHT", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] [SL:CONTENT_EXACT AH HE WAS RIGHT ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] [SL:CONTENT_EXACT AH HE WAS RIGHT ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "he was right.", "recipient": "dad"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00002763.wav", "split": "test", "intent": "[IN:SEND_MESSAGE message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Mom ] ] ] [SL:CONTENT_EXACT Yeah . I have a class at two ] . ]", "parameters": {}, "sentence": "message Mom Yeah. I have a class at two.", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "MESSAGE MOM YEAH I HAVE A CLASS AT TWO", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT YEAH I HAVE A CLASS AT TWO ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00002763.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "message Mom Yeah. I have a class at two.", "seqlogical": "[IN:SEND_MESSAGE message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Mom ] ] ] [SL:CONTENT_EXACT Yeah . I have a class at two ] . ]", "normalized_utterance": "MESSAGE MOM YEAH I HAVE A CLASS AT TWO", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT YEAH I HAVE A CLASS AT TWO ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT YEAH I HAVE A CLASS AT TWO ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "mom", "content_exact": "Yeah, I have a class at two."}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00002694.wav", "split": "test", "intent": "[IN:SEND_MESSAGE message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mother ] ] ] [SL:CONTENT_EXACT I’ll be coming home late ] . ]", "parameters": {}, "sentence": "message mother I’ll be coming home late.", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "MESSAGE MOTHER I'LL BE COMING HOME LATE", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOTHER ] ] ] [SL:CONTENT_EXACT I'LL BE COMING HOME LATE ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00002694.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "message mother I’ll be coming home late.", "seqlogical": "[IN:SEND_MESSAGE message [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mother ] ] ] [SL:CONTENT_EXACT I’ll be coming home late ] . ]", "normalized_utterance": "MESSAGE MOTHER I'LL BE COMING HOME LATE", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOTHER ] ] ] [SL:CONTENT_EXACT I'LL BE COMING HOME LATE ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOTHER ] ] ] [SL:CONTENT_EXACT I'LL BE COMING HOME LATE ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"recipient": "mother", "content_exact": "I'll be coming home late."}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00001781.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Text [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION sister ] ] ] [SL:CONTENT_EXACT we'll bake a cake tonight so let 's go to the grocery store soon ] . ]", "parameters": {}, "sentence": "Text my sister we'll bake a cake tonight so let's go to the grocery store soon.", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "TEXT MY SISTER WE'LL BAKE A CAKE TONIGHT SO LET 'S GO TO THE GROCERY STORE SOON", "normalized_seqlogical": "[IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION SISTER ] ] ] [SL:CONTENT_EXACT WE'LL BAKE A CAKE TONIGHT SO LET 'S GO TO THE GROCERY STORE SOON ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00001781.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Text my sister we'll bake a cake tonight so let's go to the grocery store soon.", "seqlogical": "[IN:SEND_MESSAGE Text [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION sister ] ] ] [SL:CONTENT_EXACT we'll bake a cake tonight so let 's go to the grocery store soon ] . ]", "normalized_utterance": "TEXT MY SISTER WE'LL BAKE A CAKE TONIGHT SO LET 'S GO TO THE GROCERY STORE SOON", "normalized_seqlogical": "[IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION SISTER ] ] ] [SL:CONTENT_EXACT WE'LL BAKE A CAKE TONIGHT SO LET 'S GO TO THE GROCERY STORE SOON ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION SISTER ] ] ] [SL:CONTENT_EXACT WE'LL BAKE A CAKE TONIGHT SO LET 'S GO TO THE GROCERY STORE SOON ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "will bake a cake tonight, so let's go to the grocery store soon.", "recipient": "my sister"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00000736.wav", "split": "test", "intent": "[IN:GET_MESSAGE How many times did [SL:SENDER [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION Dad ] ] ] message [SL:RECIPIENT me ] [SL:DATE_TIME last year ] ]", "parameters": {}, "sentence": "How many times did my Dad message me last year", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "HOW MANY TIMES DID MY DAD MESSAGE ME LAST YEAR", "normalized_seqlogical": "[IN:GET_MESSAGE HOW MANY TIMES DID [SL:SENDER [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAD ] ] ] MESSAGE [SL:RECIPIENT ME ] [SL:DATE_TIME LAST YEAR ] ]", "raw_data": {"file_id": "test_1/messaging_test/00000736.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "How many times did my Dad message me last year", "seqlogical": "[IN:GET_MESSAGE How many times did [SL:SENDER [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION Dad ] ] ] message [SL:RECIPIENT me ] [SL:DATE_TIME last year ] ]", "normalized_utterance": "HOW MANY TIMES DID MY DAD MESSAGE ME LAST YEAR", "normalized_seqlogical": "[IN:GET_MESSAGE HOW MANY TIMES DID [SL:SENDER [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAD ] ] ] MESSAGE [SL:RECIPIENT ME ] [SL:DATE_TIME LAST YEAR ] ]", "decoupled_normalized_seqlogical": "[IN:GET_MESSAGE [SL:SENDER [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAD ] ] ] [SL:RECIPIENT ME ] [SL:DATE_TIME LAST YEAR ] ]"}, "prediction": "I have retrieved the messages from your dad for last year. However, I need to count them to provide you with the exact number.", "function_calls": [{"name": "get_message", "arguments": {"sender": "dad", "date_time": "last year"}}, {"name": "get_reminder_amount", "arguments": {"person_reminded": "dad"}}]}
{"filename": "stop_data/stop/test_1/messaging_test/00000573.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION sister ] ] ] asking her if [SL:CONTENT_EXACT she wants to go to the movie ] ]", "parameters": {}, "sentence": "Message my sister asking her if she wants to go to the movie", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "MESSAGE MY SISTER ASKING HER IF SHE WANTS TO GO TO THE MOVIE", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION SISTER ] ] ] ASKING HER IF [SL:CONTENT_EXACT SHE WANTS TO GO TO THE MOVIE ] ]", "raw_data": {"file_id": "test_1/messaging_test/00000573.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Message my sister asking her if she wants to go to the movie", "seqlogical": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION sister ] ] ] asking her if [SL:CONTENT_EXACT she wants to go to the movie ] ]", "normalized_utterance": "MESSAGE MY SISTER ASKING HER IF SHE WANTS TO GO TO THE MOVIE", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION SISTER ] ] ] ASKING HER IF [SL:CONTENT_EXACT SHE WANTS TO GO TO THE MOVIE ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION SISTER ] ] ] [SL:CONTENT_EXACT SHE WANTS TO GO TO THE MOVIE ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "asking her if she wants to go to the movie", "recipient": "my sister"}}]}
{"filename": "stop_data/stop/test_0/messaging_test/00000823.wav", "split": "test", "intent": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] ] ] asking [SL:CONTENT_EXACT what she wants for dinner ] ]", "parameters": {}, "sentence": "Message my mom asking what she wants for dinner", "domain": "messaging", "gender": "Female", "native": "Yes", "normalized_utterance": "MESSAGE MY MOM ASKING WHAT SHE WANTS FOR DINNER", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] ASKING [SL:CONTENT_EXACT WHAT SHE WANTS FOR DINNER ] ]", "raw_data": {"file_id": "test_0/messaging_test_0/00000823.wav", "domain": "messaging", "gender": "Female", "native": "Yes", "utterance": "Message my mom asking what she wants for dinner", "seqlogical": "[IN:SEND_MESSAGE Message [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] ] ] asking [SL:CONTENT_EXACT what she wants for dinner ] ]", "normalized_utterance": "MESSAGE MY MOM ASKING WHAT SHE WANTS FOR DINNER", "normalized_seqlogical": "[IN:SEND_MESSAGE MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] ASKING [SL:CONTENT_EXACT WHAT SHE WANTS FOR DINNER ] ]", "decoupled_normalized_seqlogical": "[IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT WHAT SHE WANTS FOR DINNER ] ]"}, "prediction": "", "function_calls": [{"name": "send_message", "arguments": {"content_exact": "What do you want for dinner?", "recipient": "mom"}}]}
{"filename": "stop_data/stop/test_1/event_test/00001766.wav", "split": "test", "intent": "[IN:GET_EVENT Last date to [SL:CATEGORY_EVENT Take pictures ] with [SL:NAME_EVENT santa ] in [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the mall ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ] ] [SL:DATE_TIME next week ] ]", "parameters": {}, "sentence": "Last date to Take pictures with santa in the mall near me next week", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "LAST DATE TO TAKE PICTURES WITH SANTA IN THE MALL NEAR ME NEXT WEEK", "normalized_seqlogical": "[IN:GET_EVENT LAST DATE TO [SL:CATEGORY_EVENT TAKE PICTURES ] WITH [SL:NAME_EVENT SANTA ] IN [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE MALL ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ] ] [SL:DATE_TIME NEXT WEEK ] ]", "raw_data": {"file_id": "test_1/event_test/00001766.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Last date to Take pictures with santa in the mall near me next week", "seqlogical": "[IN:GET_EVENT Last date to [SL:CATEGORY_EVENT Take pictures ] with [SL:NAME_EVENT santa ] in [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the mall ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ] ] [SL:DATE_TIME next week ] ]", "normalized_utterance": "LAST DATE TO TAKE PICTURES WITH SANTA IN THE MALL NEAR ME NEXT WEEK", "normalized_seqlogical": "[IN:GET_EVENT LAST DATE TO [SL:CATEGORY_EVENT TAKE PICTURES ] WITH [SL:NAME_EVENT SANTA ] IN [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE MALL ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ] ] [SL:DATE_TIME NEXT WEEK ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT TAKE PICTURES ] [SL:NAME_EVENT SANTA ] [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE MALL ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ] ] [SL:DATE_TIME NEXT WEEK ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "mall near me"}}, {"name": "get_event", "arguments": {"category_event": "pictures with Santa", "location": "mall near me", "date_time": "next week"}}]}
{"filename": "stop_data/stop/test_0/event_test/00000566.wav", "split": "test", "intent": "[IN:GET_EVENT What events are happening [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION [IN:GET_LOCATION_HOME home ] ] ] ] [SL:DATE_TIME today ] ]", "parameters": {}, "sentence": "What events are happening near home today", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT EVENTS ARE HAPPENING NEAR HOME TODAY", "normalized_seqlogical": "[IN:GET_EVENT WHAT EVENTS ARE HAPPENING [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_HOME HOME ] ] ] ] [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_0/event_test_0/00000566.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "What events are happening near home today", "seqlogical": "[IN:GET_EVENT What events are happening [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION [IN:GET_LOCATION_HOME home ] ] ] ] [SL:DATE_TIME today ] ]", "normalized_utterance": "WHAT EVENTS ARE HAPPENING NEAR HOME TODAY", "normalized_seqlogical": "[IN:GET_EVENT WHAT EVENTS ARE HAPPENING [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_HOME HOME ] ] ] ] [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_HOME ] ] ] ] [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "home"}}, {"name": "get_event", "arguments": {"location": "home", "date_time": "today"}}]}
{"filename": "stop_data/stop/test_1/event_test/00001136.wav", "split": "test", "intent": "[IN:GET_EVENT What events are happening [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION [IN:GET_LOCATION_SCHOOL school ] ] ] ] [SL:DATE_TIME today ] ]", "parameters": {}, "sentence": "What events are happening near school today", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT EVENTS ARE HAPPENING NEAR SCHOOL TODAY", "normalized_seqlogical": "[IN:GET_EVENT WHAT EVENTS ARE HAPPENING [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_SCHOOL SCHOOL ] ] ] ] [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_1/event_test/00001136.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "What events are happening near school today", "seqlogical": "[IN:GET_EVENT What events are happening [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION [IN:GET_LOCATION_SCHOOL school ] ] ] ] [SL:DATE_TIME today ] ]", "normalized_utterance": "WHAT EVENTS ARE HAPPENING NEAR SCHOOL TODAY", "normalized_seqlogical": "[IN:GET_EVENT WHAT EVENTS ARE HAPPENING [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_SCHOOL SCHOOL ] ] ] ] [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_SCHOOL ] ] ] ] [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "school"}}, {"name": "get_event", "arguments": {"location": "school", "date_time": "today"}}]}
{"filename": "stop_data/stop/test_1/event_test/00000566.wav", "split": "test", "intent": "[IN:GET_EVENT What events are happening [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION [IN:GET_LOCATION_HOME home ] ] ] ] [SL:DATE_TIME today ] ]", "parameters": {}, "sentence": "What events are happening near home today", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT EVENTS ARE HAPPENING NEAR HOME TODAY", "normalized_seqlogical": "[IN:GET_EVENT WHAT EVENTS ARE HAPPENING [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_HOME HOME ] ] ] ] [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_1/event_test/00000566.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "What events are happening near home today", "seqlogical": "[IN:GET_EVENT What events are happening [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION [IN:GET_LOCATION_HOME home ] ] ] ] [SL:DATE_TIME today ] ]", "normalized_utterance": "WHAT EVENTS ARE HAPPENING NEAR HOME TODAY", "normalized_seqlogical": "[IN:GET_EVENT WHAT EVENTS ARE HAPPENING [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_HOME HOME ] ] ] ] [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_HOME ] ] ] ] [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "home"}}, {"name": "get_event", "arguments": {"location": "home", "date_time": "today"}}]}
{"filename": "stop_data/stop/test_1/event_test/00001765.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT Kid friendly ] events in [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION town ] ] ] please ]", "parameters": {}, "sentence": "Kid friendly events in town please", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "KID FRIENDLY EVENTS IN TOWN PLEASE", "normalized_seqlogical": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT KID FRIENDLY ] EVENTS IN [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION TOWN ] ] ] PLEASE ]", "raw_data": {"file_id": "test_1/event_test/00001765.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Kid friendly events in town please", "seqlogical": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT Kid friendly ] events in [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION town ] ] ] please ]", "normalized_utterance": "KID FRIENDLY EVENTS IN TOWN PLEASE", "normalized_seqlogical": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT KID FRIENDLY ] EVENTS IN [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION TOWN ] ] ] PLEASE ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT KID FRIENDLY ] [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION TOWN ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "town"}}, {"name": "get_event", "arguments": {"category_event": "kid-friendly", "location": "town"}}]}
{"filename": "stop_data/stop/test_1/event_test/00000359.wav", "split": "test", "intent": "[IN:GET_EVENT What are events [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME this month ] ]", "parameters": {}, "sentence": "What are events near me this month", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT ARE EVENTS NEAR ME THIS MONTH", "normalized_seqlogical": "[IN:GET_EVENT WHAT ARE EVENTS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME THIS MONTH ] ]", "raw_data": {"file_id": "test_1/event_test/00000359.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "What are events near me this month", "seqlogical": "[IN:GET_EVENT What are events [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME this month ] ]", "normalized_utterance": "WHAT ARE EVENTS NEAR ME THIS MONTH", "normalized_seqlogical": "[IN:GET_EVENT WHAT ARE EVENTS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME THIS MONTH ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME THIS MONTH ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"location": "MOCK_RESPONSE(get_location)", "date_time": "this month"}}]}
{"filename": "stop_data/stop/test_0/event_test/00002125.wav", "split": "test", "intent": "[IN:GET_EVENT Does [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Merrit Square Mall ] ] ] have any events ]", "parameters": {}, "sentence": "Does Merrit Square Mall have any events", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "DOES MERRIT SQUARE MALL HAVE ANY EVENTS", "normalized_seqlogical": "[IN:GET_EVENT DOES [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP MERRIT SQUARE MALL ] ] ] HAVE ANY EVENTS ]", "raw_data": {"file_id": "test_0/event_test_0/00002125.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Does Merrit Square Mall have any events", "seqlogical": "[IN:GET_EVENT Does [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Merrit Square Mall ] ] ] have any events ]", "normalized_utterance": "DOES MERRIT SQUARE MALL HAVE ANY EVENTS", "normalized_seqlogical": "[IN:GET_EVENT DOES [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP MERRIT SQUARE MALL ] ] ] HAVE ANY EVENTS ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP MERRIT SQUARE MALL ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"location": "Merit Squire Mall"}}]}
{"filename": "stop_data/stop/test_1/event_test/00000436.wav", "split": "test", "intent": "[IN:GET_EVENT Is there [SL:CATEGORY_EVENT a tree lighting ceremony ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME this week ] ]", "parameters": {}, "sentence": "Is there a tree lighting ceremony near me this week", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "IS THERE A TREE LIGHTING CEREMONY NEAR ME THIS WEEK", "normalized_seqlogical": "[IN:GET_EVENT IS THERE [SL:CATEGORY_EVENT A TREE LIGHTING CEREMONY ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME THIS WEEK ] ]", "raw_data": {"file_id": "test_1/event_test/00000436.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Is there a tree lighting ceremony near me this week", "seqlogical": "[IN:GET_EVENT Is there [SL:CATEGORY_EVENT a tree lighting ceremony ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME this week ] ]", "normalized_utterance": "IS THERE A TREE LIGHTING CEREMONY NEAR ME THIS WEEK", "normalized_seqlogical": "[IN:GET_EVENT IS THERE [SL:CATEGORY_EVENT A TREE LIGHTING CEREMONY ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME THIS WEEK ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT A TREE LIGHTING CEREMONY ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME THIS WEEK ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"category_event": "tree lighting ceremony", "location": "MOCK_RESPONSE(get_location)", "date_time": "this week"}}]}
{"filename": "stop_data/stop/test_0/event_test/00002566.wav", "split": "test", "intent": "[IN:GET_EVENT Anything going on at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Johnson Park ] ] ] [SL:DATE_TIME this weekend ] ]", "parameters": {}, "sentence": "Anything going on at Johnson Park this weekend", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "ANYTHING GOING ON AT JOHNSON PARK THIS WEEKEND", "normalized_seqlogical": "[IN:GET_EVENT ANYTHING GOING ON AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP JOHNSON PARK ] ] ] [SL:DATE_TIME THIS WEEKEND ] ]", "raw_data": {"file_id": "test_0/event_test_0/00002566.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Anything going on at Johnson Park this weekend", "seqlogical": "[IN:GET_EVENT Anything going on at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Johnson Park ] ] ] [SL:DATE_TIME this weekend ] ]", "normalized_utterance": "ANYTHING GOING ON AT JOHNSON PARK THIS WEEKEND", "normalized_seqlogical": "[IN:GET_EVENT ANYTHING GOING ON AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP JOHNSON PARK ] ] ] [SL:DATE_TIME THIS WEEKEND ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP JOHNSON PARK ] ] ] [SL:DATE_TIME THIS WEEKEND ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"location": "Johnson Park", "date_time": "this weekend"}}]}
{"filename": "stop_data/stop/test_1/event_test/00000705.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:CATEGORY_EVENT Art Festivals ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION Charleston ] ] ] [SL:DATE_TIME within the next couple months ] ]", "parameters": {}, "sentence": "Art Festivals near Charleston within the next couple months", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "ART FESTIVALS NEAR CHARLESTON WITHIN THE NEXT COUPLE MONTHS", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT ART FESTIVALS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION CHARLESTON ] ] ] [SL:DATE_TIME WITHIN THE NEXT COUPLE MONTHS ] ]", "raw_data": {"file_id": "test_1/event_test/00000705.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Art Festivals near Charleston within the next couple months", "seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT Art Festivals ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION Charleston ] ] ] [SL:DATE_TIME within the next couple months ] ]", "normalized_utterance": "ART FESTIVALS NEAR CHARLESTON WITHIN THE NEXT COUPLE MONTHS", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT ART FESTIVALS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION CHARLESTON ] ] ] [SL:DATE_TIME WITHIN THE NEXT COUPLE MONTHS ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT ART FESTIVALS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION CHARLESTON ] ] ] [SL:DATE_TIME WITHIN THE NEXT COUPLE MONTHS ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"category_event": "art festivals", "location": "Charleston", "date_time": "within the next couple months"}}]}
{"filename": "stop_data/stop/test_1/event_test/00001197.wav", "split": "test", "intent": "[IN:GET_EVENT what upcoming [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION church ] ] ] events are for both [SL:ATTRIBUTE_EVENT adults ] and [SL:ATTRIBUTE_EVENT children ] ]", "parameters": {}, "sentence": "what upcoming church events are for both  adults and children", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT UPCOMING CHURCH EVENTS ARE FOR BOTH ADULTS AND CHILDREN", "normalized_seqlogical": "[IN:GET_EVENT WHAT UPCOMING [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION CHURCH ] ] ] EVENTS ARE FOR BOTH [SL:ATTRIBUTE_EVENT ADULTS ] AND [SL:ATTRIBUTE_EVENT CHILDREN ] ]", "raw_data": {"file_id": "test_1/event_test/00001197.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "what upcoming church events are for both  adults and children", "seqlogical": "[IN:GET_EVENT what upcoming [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION church ] ] ] events are for both [SL:ATTRIBUTE_EVENT adults ] and [SL:ATTRIBUTE_EVENT children ] ]", "normalized_utterance": "WHAT UPCOMING CHURCH EVENTS ARE FOR BOTH ADULTS AND CHILDREN", "normalized_seqlogical": "[IN:GET_EVENT WHAT UPCOMING [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION CHURCH ] ] ] EVENTS ARE FOR BOTH [SL:ATTRIBUTE_EVENT ADULTS ] AND [SL:ATTRIBUTE_EVENT CHILDREN ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION CHURCH ] ] ] [SL:ATTRIBUTE_EVENT ADULTS ] [SL:ATTRIBUTE_EVENT CHILDREN ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"category_event": "church", "date_time": "upcoming"}}]}
{"filename": "stop_data/stop/test_0/event_test/00000416.wav", "split": "test", "intent": "[IN:GET_EVENT Any interesting [SL:CATEGORY_EVENT concerts ] happening [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME tonight ] ]", "parameters": {}, "sentence": "Any interesting concerts happening near me tonight", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "ANY INTERESTING CONCERTS HAPPENING NEAR ME TONIGHT", "normalized_seqlogical": "[IN:GET_EVENT ANY INTERESTING [SL:CATEGORY_EVENT CONCERTS ] HAPPENING [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME TONIGHT ] ]", "raw_data": {"file_id": "test_0/event_test_0/00000416.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Any interesting concerts happening near me tonight", "seqlogical": "[IN:GET_EVENT Any interesting [SL:CATEGORY_EVENT concerts ] happening [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME tonight ] ]", "normalized_utterance": "ANY INTERESTING CONCERTS HAPPENING NEAR ME TONIGHT", "normalized_seqlogical": "[IN:GET_EVENT ANY INTERESTING [SL:CATEGORY_EVENT CONCERTS ] HAPPENING [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME TONIGHT ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT CONCERTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME TONIGHT ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"category_event": "concerts", "location": "MOCK_RESPONSE(get_location)", "date_time": "tonight"}}]}
{"filename": "stop_data/stop/test_0/event_test/00000801.wav", "split": "test", "intent": "[IN:GET_EVENT is there [SL:CATEGORY_EVENT a carnival ] in [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION town ] ] ] [SL:DATE_TIME this weekend ] ]", "parameters": {}, "sentence": "is there a carnival in town this weekend", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "IS THERE A CARNIVAL IN TOWN THIS WEEKEND", "normalized_seqlogical": "[IN:GET_EVENT IS THERE [SL:CATEGORY_EVENT A CARNIVAL ] IN [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION TOWN ] ] ] [SL:DATE_TIME THIS WEEKEND ] ]", "raw_data": {"file_id": "test_0/event_test_0/00000801.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "is there a carnival in town this weekend", "seqlogical": "[IN:GET_EVENT is there [SL:CATEGORY_EVENT a carnival ] in [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION town ] ] ] [SL:DATE_TIME this weekend ] ]", "normalized_utterance": "IS THERE A CARNIVAL IN TOWN THIS WEEKEND", "normalized_seqlogical": "[IN:GET_EVENT IS THERE [SL:CATEGORY_EVENT A CARNIVAL ] IN [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION TOWN ] ] ] [SL:DATE_TIME THIS WEEKEND ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT A CARNIVAL ] [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION TOWN ] ] ] [SL:DATE_TIME THIS WEEKEND ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"category_event": "carnival", "date_time": "this weekend"}}]}
{"filename": "stop_data/stop/test_1/event_test/00000605.wav", "split": "test", "intent": "[IN:GET_EVENT any [SL:ATTRIBUTE_EVENT new ] [SL:CATEGORY_EVENT movies ] out at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP amc ] ] ] [SL:DATE_TIME this weekend ] ]", "parameters": {}, "sentence": "any new movies out at amc this weekend", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "ANY NEW MOVIES OUT AT AMC THIS WEEKEND", "normalized_seqlogical": "[IN:GET_EVENT ANY [SL:ATTRIBUTE_EVENT NEW ] [SL:CATEGORY_EVENT MOVIES ] OUT AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP AMC ] ] ] [SL:DATE_TIME THIS WEEKEND ] ]", "raw_data": {"file_id": "test_1/event_test/00000605.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "any new movies out at amc this weekend", "seqlogical": "[IN:GET_EVENT any [SL:ATTRIBUTE_EVENT new ] [SL:CATEGORY_EVENT movies ] out at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP amc ] ] ] [SL:DATE_TIME this weekend ] ]", "normalized_utterance": "ANY NEW MOVIES OUT AT AMC THIS WEEKEND", "normalized_seqlogical": "[IN:GET_EVENT ANY [SL:ATTRIBUTE_EVENT NEW ] [SL:CATEGORY_EVENT MOVIES ] OUT AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP AMC ] ] ] [SL:DATE_TIME THIS WEEKEND ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT NEW ] [SL:CATEGORY_EVENT MOVIES ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP AMC ] ] ] [SL:DATE_TIME THIS WEEKEND ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"category_event": "movies", "location": "AMC", "date_time": "this weekend"}}]}
{"filename": "stop_data/stop/test_0/event_test/00000546.wav", "split": "test", "intent": "[IN:GET_EVENT Are there any [SL:ATTRIBUTE_EVENT family friendly ] [SL:DATE_TIME new years ] [SL:CATEGORY_EVENT parties ] happening [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:CATEGORY_LOCATION town ] ] ] ]", "parameters": {}, "sentence": "Are there any family friendly new years parties happening around town", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "ARE THERE ANY FAMILY FRIENDLY NEW YEARS PARTIES HAPPENING AROUND TOWN", "normalized_seqlogical": "[IN:GET_EVENT ARE THERE ANY [SL:ATTRIBUTE_EVENT FAMILY FRIENDLY ] [SL:DATE_TIME NEW YEARS ] [SL:CATEGORY_EVENT PARTIES ] HAPPENING [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:CATEGORY_LOCATION TOWN ] ] ] ]", "raw_data": {"file_id": "test_0/event_test_0/00000546.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Are there any family friendly new years parties happening around town", "seqlogical": "[IN:GET_EVENT Are there any [SL:ATTRIBUTE_EVENT family friendly ] [SL:DATE_TIME new years ] [SL:CATEGORY_EVENT parties ] happening [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:CATEGORY_LOCATION town ] ] ] ]", "normalized_utterance": "ARE THERE ANY FAMILY FRIENDLY NEW YEARS PARTIES HAPPENING AROUND TOWN", "normalized_seqlogical": "[IN:GET_EVENT ARE THERE ANY [SL:ATTRIBUTE_EVENT FAMILY FRIENDLY ] [SL:DATE_TIME NEW YEARS ] [SL:CATEGORY_EVENT PARTIES ] HAPPENING [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:CATEGORY_LOCATION TOWN ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT FAMILY FRIENDLY ] [SL:DATE_TIME NEW YEARS ] [SL:CATEGORY_EVENT PARTIES ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:CATEGORY_LOCATION TOWN ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "around town"}}, {"name": "get_event", "arguments": {"category_event": "family-friendly New Year's parties", "location": "MOCK_RESPONSE(get_location)"}}]}
{"filename": "stop_data/stop/test_0/event_test/00000605.wav", "split": "test", "intent": "[IN:GET_EVENT any [SL:ATTRIBUTE_EVENT new ] [SL:CATEGORY_EVENT movies ] out at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP amc ] ] ] [SL:DATE_TIME this weekend ] ]", "parameters": {}, "sentence": "any new movies out at amc this weekend", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "ANY NEW MOVIES OUT AT AMC THIS WEEKEND", "normalized_seqlogical": "[IN:GET_EVENT ANY [SL:ATTRIBUTE_EVENT NEW ] [SL:CATEGORY_EVENT MOVIES ] OUT AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP AMC ] ] ] [SL:DATE_TIME THIS WEEKEND ] ]", "raw_data": {"file_id": "test_0/event_test_0/00000605.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "any new movies out at amc this weekend", "seqlogical": "[IN:GET_EVENT any [SL:ATTRIBUTE_EVENT new ] [SL:CATEGORY_EVENT movies ] out at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP amc ] ] ] [SL:DATE_TIME this weekend ] ]", "normalized_utterance": "ANY NEW MOVIES OUT AT AMC THIS WEEKEND", "normalized_seqlogical": "[IN:GET_EVENT ANY [SL:ATTRIBUTE_EVENT NEW ] [SL:CATEGORY_EVENT MOVIES ] OUT AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP AMC ] ] ] [SL:DATE_TIME THIS WEEKEND ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT NEW ] [SL:CATEGORY_EVENT MOVIES ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP AMC ] ] ] [SL:DATE_TIME THIS WEEKEND ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"category_event": "movies", "location": "AMC", "date_time": "this weekend"}}]}
{"filename": "stop_data/stop/test_0/event_test/00001556.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER Local ] ] ] events [SL:DATE_TIME this month ] ]", "parameters": {}, "sentence": "Local events this month", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "LOCAL EVENTS THIS MONTH", "normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER LOCAL ] ] ] EVENTS [SL:DATE_TIME THIS MONTH ] ]", "raw_data": {"file_id": "test_0/event_test_0/00001556.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Local events this month", "seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER Local ] ] ] events [SL:DATE_TIME this month ] ]", "normalized_utterance": "LOCAL EVENTS THIS MONTH", "normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER LOCAL ] ] ] EVENTS [SL:DATE_TIME THIS MONTH ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER LOCAL ] ] ] [SL:DATE_TIME THIS MONTH ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"date_time": "this month"}}]}
{"filename": "stop_data/stop/test_0/event_test/00002238.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:NAME_EVENT miley cyrus ] [SL:CATEGORY_EVENT concert ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ]", "parameters": {}, "sentence": "miley cyrus concert near me", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "MILEY CYRUS CONCERT NEAR ME", "normalized_seqlogical": "[IN:GET_EVENT [SL:NAME_EVENT MILEY CYRUS ] [SL:CATEGORY_EVENT CONCERT ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]", "raw_data": {"file_id": "test_0/event_test_0/00002238.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "miley cyrus concert near me", "seqlogical": "[IN:GET_EVENT [SL:NAME_EVENT miley cyrus ] [SL:CATEGORY_EVENT concert ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ]", "normalized_utterance": "MILEY CYRUS CONCERT NEAR ME", "normalized_seqlogical": "[IN:GET_EVENT [SL:NAME_EVENT MILEY CYRUS ] [SL:CATEGORY_EVENT CONCERT ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:NAME_EVENT MILEY CYRUS ] [SL:CATEGORY_EVENT CONCERT ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"name_event": "Miley Cyrus concert", "location": "current location"}}]}
{"filename": "stop_data/stop/test_0/event_test/00002630.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:ORDINAL next ] [SL:CATEGORY_EVENT concert ] in [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP St Louis amphitheater ] ] ] ]", "parameters": {}, "sentence": "next concert in St Louis amphitheater", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "NEXT CONCERT IN ST LOUIS AMPHITHEATER", "normalized_seqlogical": "[IN:GET_EVENT [SL:ORDINAL NEXT ] [SL:CATEGORY_EVENT CONCERT ] IN [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP ST LOUIS AMPHITHEATER ] ] ] ]", "raw_data": {"file_id": "test_0/event_test_0/00002630.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "next concert in St Louis amphitheater", "seqlogical": "[IN:GET_EVENT [SL:ORDINAL next ] [SL:CATEGORY_EVENT concert ] in [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP St Louis amphitheater ] ] ] ]", "normalized_utterance": "NEXT CONCERT IN ST LOUIS AMPHITHEATER", "normalized_seqlogical": "[IN:GET_EVENT [SL:ORDINAL NEXT ] [SL:CATEGORY_EVENT CONCERT ] IN [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP ST LOUIS AMPHITHEATER ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:ORDINAL NEXT ] [SL:CATEGORY_EVENT CONCERT ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP ST LOUIS AMPHITHEATER ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"location": "St. Louis Amphitheater", "category_event": "concert"}}]}
{"filename": "stop_data/stop/test_1/event_test/00000382.wav", "split": "test", "intent": "[IN:GET_EVENT Is there a great [SL:DATE_TIME Christmas ] [SL:CATEGORY_EVENT light display ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION Boulder ] ] ] that I can [SL:ATTRIBUTE_EVENT drive through ] ]", "parameters": {}, "sentence": "Is there a great Christmas light display near Boulder that I can drive through", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "IS THERE A GREAT CHRISTMAS LIGHT DISPLAY NEAR BOULDER THAT I CAN DRIVE THROUGH", "normalized_seqlogical": "[IN:GET_EVENT IS THERE A GREAT [SL:DATE_TIME CHRISTMAS ] [SL:CATEGORY_EVENT LIGHT DISPLAY ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION BOULDER ] ] ] THAT I CAN [SL:ATTRIBUTE_EVENT DRIVE THROUGH ] ]", "raw_data": {"file_id": "test_1/event_test/00000382.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Is there a great Christmas light display near Boulder that I can drive through", "seqlogical": "[IN:GET_EVENT Is there a great [SL:DATE_TIME Christmas ] [SL:CATEGORY_EVENT light display ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION Boulder ] ] ] that I can [SL:ATTRIBUTE_EVENT drive through ] ]", "normalized_utterance": "IS THERE A GREAT CHRISTMAS LIGHT DISPLAY NEAR BOULDER THAT I CAN DRIVE THROUGH", "normalized_seqlogical": "[IN:GET_EVENT IS THERE A GREAT [SL:DATE_TIME CHRISTMAS ] [SL:CATEGORY_EVENT LIGHT DISPLAY ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION BOULDER ] ] ] THAT I CAN [SL:ATTRIBUTE_EVENT DRIVE THROUGH ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:DATE_TIME CHRISTMAS ] [SL:CATEGORY_EVENT LIGHT DISPLAY ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION BOULDER ] ] ] [SL:ATTRIBUTE_EVENT DRIVE THROUGH ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near", "location": "Boulder", "category_location": "Christmas light display"}}]}
{"filename": "stop_data/stop/test_0/event_test/00002494.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:CATEGORY_EVENT Concerts ] that allow [SL:ATTRIBUTE_EVENT pets ] [SL:DATE_TIME in January ] in or [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION PIttsburgh ] ] ] ]", "parameters": {}, "sentence": "Concerts that allow pets in January in or around PIttsburgh", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "CONCERTS THAT ALLOW PETS IN JANUARY IN OR AROUND PITTSBURGH", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT CONCERTS ] THAT ALLOW [SL:ATTRIBUTE_EVENT PETS ] [SL:DATE_TIME IN JANUARY ] IN OR [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION PITTSBURGH ] ] ] ]", "raw_data": {"file_id": "test_0/event_test_0/00002494.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Concerts that allow pets in January in or around PIttsburgh", "seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT Concerts ] that allow [SL:ATTRIBUTE_EVENT pets ] [SL:DATE_TIME in January ] in or [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION PIttsburgh ] ] ] ]", "normalized_utterance": "CONCERTS THAT ALLOW PETS IN JANUARY IN OR AROUND PITTSBURGH", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT CONCERTS ] THAT ALLOW [SL:ATTRIBUTE_EVENT PETS ] [SL:DATE_TIME IN JANUARY ] IN OR [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION PITTSBURGH ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT CONCERTS ] [SL:ATTRIBUTE_EVENT PETS ] [SL:DATE_TIME IN JANUARY ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION PITTSBURGH ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"category_event": "concerts", "location": "Pittsburgh", "date_time": "January"}}]}
{"filename": "stop_data/stop/test_1/event_test/00001486.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION Park ] ] ] [SL:CATEGORY_EVENT parties ] ]", "parameters": {}, "sentence": "Park parties", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "PARK PARTIES", "normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION PARK ] ] ] [SL:CATEGORY_EVENT PARTIES ] ]", "raw_data": {"file_id": "test_1/event_test/00001486.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Park parties", "seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION Park ] ] ] [SL:CATEGORY_EVENT parties ] ]", "normalized_utterance": "PARK PARTIES", "normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION PARK ] ] ] [SL:CATEGORY_EVENT PARTIES ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION PARK ] ] ] [SL:CATEGORY_EVENT PARTIES ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"category_event": "Park parties"}}]}
{"filename": "stop_data/stop/test_0/event_test/00001454.wav", "split": "test", "intent": "[IN:GET_EVENT Who is [SL:CATEGORY_EVENT playing ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the Garden ] ] ] [SL:DATE_TIME on January 25 ] ]", "parameters": {}, "sentence": "Who is playing at the Garden on January 25", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "WHO IS PLAYING AT THE GARDEN ON JANUARY TWENTY FIVE", "normalized_seqlogical": "[IN:GET_EVENT WHO IS [SL:CATEGORY_EVENT PLAYING ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE GARDEN ] ] ] [SL:DATE_TIME ON JANUARY TWENTY FIVE ] ]", "raw_data": {"file_id": "test_0/event_test_0/00001454.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Who is playing at the Garden on January 25", "seqlogical": "[IN:GET_EVENT Who is [SL:CATEGORY_EVENT playing ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the Garden ] ] ] [SL:DATE_TIME on January 25 ] ]", "normalized_utterance": "WHO IS PLAYING AT THE GARDEN ON JANUARY TWENTY FIVE", "normalized_seqlogical": "[IN:GET_EVENT WHO IS [SL:CATEGORY_EVENT PLAYING ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE GARDEN ] ] ] [SL:DATE_TIME ON JANUARY TWENTY FIVE ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT PLAYING ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE GARDEN ] ] ] [SL:DATE_TIME ON JANUARY TWENTY FIVE ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"location": "Guardian", "date_time": "January 25"}}]}
{"filename": "stop_data/stop/test_1/event_test/00002477.wav", "split": "test", "intent": "[IN:GET_EVENT Any [SL:CATEGORY_EVENT concerts ] happening at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Talking Stick Resort ] in [SL:LOCATION_MODIFIER Scottsdale ] ] ] [SL:DATE_TIME tonight ] ]", "parameters": {}, "sentence": "Any concerts happening at Talking Stick Resort in Scottsdale tonight", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "ANY CONCERTS HAPPENING AT TALKING STICK RESORT IN SCOTTSDALE TONIGHT", "normalized_seqlogical": "[IN:GET_EVENT ANY [SL:CATEGORY_EVENT CONCERTS ] HAPPENING AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP TALKING STICK RESORT ] IN [SL:LOCATION_MODIFIER SCOTTSDALE ] ] ] [SL:DATE_TIME TONIGHT ] ]", "raw_data": {"file_id": "test_1/event_test/00002477.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Any concerts happening at Talking Stick Resort in Scottsdale tonight", "seqlogical": "[IN:GET_EVENT Any [SL:CATEGORY_EVENT concerts ] happening at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Talking Stick Resort ] in [SL:LOCATION_MODIFIER Scottsdale ] ] ] [SL:DATE_TIME tonight ] ]", "normalized_utterance": "ANY CONCERTS HAPPENING AT TALKING STICK RESORT IN SCOTTSDALE TONIGHT", "normalized_seqlogical": "[IN:GET_EVENT ANY [SL:CATEGORY_EVENT CONCERTS ] HAPPENING AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP TALKING STICK RESORT ] IN [SL:LOCATION_MODIFIER SCOTTSDALE ] ] ] [SL:DATE_TIME TONIGHT ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT CONCERTS ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP TALKING STICK RESORT ] [SL:LOCATION_MODIFIER SCOTTSDALE ] ] ] [SL:DATE_TIME TONIGHT ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"location": "Talking Stick Resort, Scottsdale", "date_time": "tonight"}}]}
{"filename": "stop_data/stop/test_1/event_test/00000400.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:CATEGORY_EVENT Garlic festival ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION Easton ] ] ] ]", "parameters": {}, "sentence": "Garlic festival near Easton", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "GARLIC FESTIVAL NEAR EASTON", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT GARLIC FESTIVAL ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION EASTON ] ] ] ]", "raw_data": {"file_id": "test_1/event_test/00000400.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Garlic festival near Easton", "seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT Garlic festival ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION Easton ] ] ] ]", "normalized_utterance": "GARLIC FESTIVAL NEAR EASTON", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT GARLIC FESTIVAL ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION EASTON ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT GARLIC FESTIVAL ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION EASTON ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"category_event": "Garlic Festival", "location": "Easton"}}]}
{"filename": "stop_data/stop/test_1/event_test/00001650.wav", "split": "test", "intent": "[IN:GET_EVENT What time is [SL:CATEGORY_EVENT the Arts and Crafts show ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Home Depot ] ] ] [SL:DATE_TIME next week ] ]", "parameters": {}, "sentence": "What time is the Arts and Crafts show at Home Depot next week", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT TIME IS THE ARTS AND CRAFTS SHOW AT HOME DEPOT NEXT WEEK", "normalized_seqlogical": "[IN:GET_EVENT WHAT TIME IS [SL:CATEGORY_EVENT THE ARTS AND CRAFTS SHOW ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP HOME DEPOT ] ] ] [SL:DATE_TIME NEXT WEEK ] ]", "raw_data": {"file_id": "test_1/event_test/00001650.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "What time is the Arts and Crafts show at Home Depot next week", "seqlogical": "[IN:GET_EVENT What time is [SL:CATEGORY_EVENT the Arts and Crafts show ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Home Depot ] ] ] [SL:DATE_TIME next week ] ]", "normalized_utterance": "WHAT TIME IS THE ARTS AND CRAFTS SHOW AT HOME DEPOT NEXT WEEK", "normalized_seqlogical": "[IN:GET_EVENT WHAT TIME IS [SL:CATEGORY_EVENT THE ARTS AND CRAFTS SHOW ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP HOME DEPOT ] ] ] [SL:DATE_TIME NEXT WEEK ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT THE ARTS AND CRAFTS SHOW ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP HOME DEPOT ] ] ] [SL:DATE_TIME NEXT WEEK ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"name_event": "Arts and Crafts show", "location": "Home Depot", "date_time": "next week"}}]}
{"filename": "stop_data/stop/test_1/event_test/00002404.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:CATEGORY_EVENT Drone Racing Events ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ]", "parameters": {}, "sentence": "Drone Racing Events near me", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "DRONE RACING EVENTS NEAR ME", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT DRONE RACING EVENTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]", "raw_data": {"file_id": "test_1/event_test/00002404.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Drone Racing Events near me", "seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT Drone Racing Events ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ]", "normalized_utterance": "DRONE RACING EVENTS NEAR ME", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT DRONE RACING EVENTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT DRONE RACING EVENTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"category_event": "drone racing", "location": "MOCK_RESPONSE(get_location)"}}]}
{"filename": "stop_data/stop/test_0/event_test/00002014.wav", "split": "test", "intent": "[IN:GET_EVENT Is there [SL:NAME_EVENT a Santa Claus ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME this weekend ] ]", "parameters": {}, "sentence": "Is there a Santa Claus near me this weekend", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "IS THERE A SANTA CLAUS NEAR ME THIS WEEKEND", "normalized_seqlogical": "[IN:GET_EVENT IS THERE [SL:NAME_EVENT A SANTA CLAUS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME THIS WEEKEND ] ]", "raw_data": {"file_id": "test_0/event_test_0/00002014.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Is there a Santa Claus near me this weekend", "seqlogical": "[IN:GET_EVENT Is there [SL:NAME_EVENT a Santa Claus ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME this weekend ] ]", "normalized_utterance": "IS THERE A SANTA CLAUS NEAR ME THIS WEEKEND", "normalized_seqlogical": "[IN:GET_EVENT IS THERE [SL:NAME_EVENT A SANTA CLAUS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME THIS WEEKEND ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:NAME_EVENT A SANTA CLAUS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME THIS WEEKEND ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "nearest", "location_user": "me"}}, {"name": "get_event", "arguments": {"category_event": "Santa Claus", "location": "MOCK_RESPONSE(get_location)", "date_time": "this weekend"}}]}
{"filename": "stop_data/stop/test_0/event_test/00001211.wav", "split": "test", "intent": "[IN:GET_EVENT Who is [SL:CATEGORY_EVENT headlining the concert ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the Nutter Center ] ] ] [SL:DATE_TIME next week ] ]", "parameters": {}, "sentence": "Who is headlining the concert at the Nutter Center next week", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "WHO IS HEADLINING THE CONCERT AT THE NUTTER CENTER NEXT WEEK", "normalized_seqlogical": "[IN:GET_EVENT WHO IS [SL:CATEGORY_EVENT HEADLINING THE CONCERT ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE NUTTER CENTER ] ] ] [SL:DATE_TIME NEXT WEEK ] ]", "raw_data": {"file_id": "test_0/event_test_0/00001211.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Who is headlining the concert at the Nutter Center next week", "seqlogical": "[IN:GET_EVENT Who is [SL:CATEGORY_EVENT headlining the concert ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the Nutter Center ] ] ] [SL:DATE_TIME next week ] ]", "normalized_utterance": "WHO IS HEADLINING THE CONCERT AT THE NUTTER CENTER NEXT WEEK", "normalized_seqlogical": "[IN:GET_EVENT WHO IS [SL:CATEGORY_EVENT HEADLINING THE CONCERT ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE NUTTER CENTER ] ] ] [SL:DATE_TIME NEXT WEEK ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT HEADLINING THE CONCERT ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE NUTTER CENTER ] ] ] [SL:DATE_TIME NEXT WEEK ] ]"}, "prediction": "", "function_calls": [{"name": "get_event_organizer", "arguments": {"location": "Nutter Center", "date_time": "next week", "category_event": "concert"}}]}
{"filename": "stop_data/stop/test_1/event_test/00001207.wav", "split": "test", "intent": "[IN:GET_EVENT what is [SL:CATEGORY_EVENT the anime event ] happening [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME next month ] ]", "parameters": {}, "sentence": "what is the anime event happening near me next month", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT IS THE ANIME EVENT HAPPENING NEAR ME NEXT MONTH", "normalized_seqlogical": "[IN:GET_EVENT WHAT IS [SL:CATEGORY_EVENT THE ANIME EVENT ] HAPPENING [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME NEXT MONTH ] ]", "raw_data": {"file_id": "test_1/event_test/00001207.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "what is the anime event happening near me next month", "seqlogical": "[IN:GET_EVENT what is [SL:CATEGORY_EVENT the anime event ] happening [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME next month ] ]", "normalized_utterance": "WHAT IS THE ANIME EVENT HAPPENING NEAR ME NEXT MONTH", "normalized_seqlogical": "[IN:GET_EVENT WHAT IS [SL:CATEGORY_EVENT THE ANIME EVENT ] HAPPENING [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME NEXT MONTH ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT THE ANIME EVENT ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME NEXT MONTH ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"category_event": "anime", "location": "MOCK_RESPONSE(get_location)", "date_time": "next month"}}]}
{"filename": "stop_data/stop/test_0/event_test/00002111.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:CATEGORY_EVENT Wine tasting events ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME for this weekend ] ]", "parameters": {}, "sentence": "Wine tasting events near me for this weekend", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "WINE TASTING EVENTS NEAR ME FOR THIS WEEKEND", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT WINE TASTING EVENTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME FOR THIS WEEKEND ] ]", "raw_data": {"file_id": "test_0/event_test_0/00002111.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Wine tasting events near me for this weekend", "seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT Wine tasting events ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME for this weekend ] ]", "normalized_utterance": "WINE TASTING EVENTS NEAR ME FOR THIS WEEKEND", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT WINE TASTING EVENTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME FOR THIS WEEKEND ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT WINE TASTING EVENTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME FOR THIS WEEKEND ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"category_event": "wine tasting", "location": "MOCK_RESPONSE(get_location)", "date_time": "this weekend"}}]}
{"filename": "stop_data/stop/test_0/event_test/00002431.wav", "split": "test", "intent": "[IN:GET_EVENT Events [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION San Diego California ] ] ] ]", "parameters": {}, "sentence": "Events near San Diego California", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "EVENTS NEAR SAN DIEGO CALIFORNIA", "normalized_seqlogical": "[IN:GET_EVENT EVENTS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION SAN DIEGO CALIFORNIA ] ] ] ]", "raw_data": {"file_id": "test_0/event_test_0/00002431.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Events near San Diego California", "seqlogical": "[IN:GET_EVENT Events [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION San Diego California ] ] ] ]", "normalized_utterance": "EVENTS NEAR SAN DIEGO CALIFORNIA", "normalized_seqlogical": "[IN:GET_EVENT EVENTS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION SAN DIEGO CALIFORNIA ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION SAN DIEGO CALIFORNIA ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"location": "San Diego, California"}}]}
{"filename": "stop_data/stop/test_0/event_test/00001631.wav", "split": "test", "intent": "[IN:GET_EVENT Any [SL:CATEGORY_EVENT shows ] coming to [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION town ] ] ] ]", "parameters": {}, "sentence": "Any shows coming to town", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "ANY SHOWS COMING TO TOWN", "normalized_seqlogical": "[IN:GET_EVENT ANY [SL:CATEGORY_EVENT SHOWS ] COMING TO [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION TOWN ] ] ] ]", "raw_data": {"file_id": "test_0/event_test_0/00001631.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Any shows coming to town", "seqlogical": "[IN:GET_EVENT Any [SL:CATEGORY_EVENT shows ] coming to [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION town ] ] ] ]", "normalized_utterance": "ANY SHOWS COMING TO TOWN", "normalized_seqlogical": "[IN:GET_EVENT ANY [SL:CATEGORY_EVENT SHOWS ] COMING TO [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION TOWN ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT SHOWS ] [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION TOWN ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"category_event": "shows", "date_time": "today"}}]}
{"filename": "stop_data/stop/test_0/event_test/00002569.wav", "split": "test", "intent": "[IN:GET_EVENT Any [SL:DATE_TIME New Year 's Eve ] [SL:CATEGORY_EVENT parties ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS close ] to [SL:LOCATION_USER me ] ] ] ]", "parameters": {}, "sentence": "Any New Year's Eve parties close to me", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "ANY NEW YEAR 'S EVE PARTIES CLOSE TO ME", "normalized_seqlogical": "[IN:GET_EVENT ANY [SL:DATE_TIME NEW YEAR 'S EVE ] [SL:CATEGORY_EVENT PARTIES ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS CLOSE ] TO [SL:LOCATION_USER ME ] ] ] ]", "raw_data": {"file_id": "test_0/event_test_0/00002569.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Any New Year's Eve parties close to me", "seqlogical": "[IN:GET_EVENT Any [SL:DATE_TIME New Year 's Eve ] [SL:CATEGORY_EVENT parties ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS close ] to [SL:LOCATION_USER me ] ] ] ]", "normalized_utterance": "ANY NEW YEAR 'S EVE PARTIES CLOSE TO ME", "normalized_seqlogical": "[IN:GET_EVENT ANY [SL:DATE_TIME NEW YEAR 'S EVE ] [SL:CATEGORY_EVENT PARTIES ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS CLOSE ] TO [SL:LOCATION_USER ME ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:DATE_TIME NEW YEAR 'S EVE ] [SL:CATEGORY_EVENT PARTIES ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS CLOSE ] [SL:LOCATION_USER ME ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "close to me"}}, {"name": "get_event", "arguments": {"category_event": "New Year's Eve parties", "location": "MOCK_RESPONSE(get_location)"}}]}
{"filename": "stop_data/stop/test_0/event_test/00001089.wav", "split": "test", "intent": "[IN:GET_EVENT what is [SL:CATEGORY_EVENT playing ] [SL:DATE_TIME now ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the parrish theater ] ] ] ]", "parameters": {}, "sentence": "what is playing now at the parrish theater", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT IS PLAYING NOW AT THE PARRISH THEATER", "normalized_seqlogical": "[IN:GET_EVENT WHAT IS [SL:CATEGORY_EVENT PLAYING ] [SL:DATE_TIME NOW ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE PARRISH THEATER ] ] ] ]", "raw_data": {"file_id": "test_0/event_test_0/00001089.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "what is playing now at the parrish theater", "seqlogical": "[IN:GET_EVENT what is [SL:CATEGORY_EVENT playing ] [SL:DATE_TIME now ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the parrish theater ] ] ] ]", "normalized_utterance": "WHAT IS PLAYING NOW AT THE PARRISH THEATER", "normalized_seqlogical": "[IN:GET_EVENT WHAT IS [SL:CATEGORY_EVENT PLAYING ] [SL:DATE_TIME NOW ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE PARRISH THEATER ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT PLAYING ] [SL:DATE_TIME NOW ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE PARRISH THEATER ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"location": "Parish Theater", "date_time": "now"}}]}
{"filename": "stop_data/stop/test_0/event_test/00002242.wav", "split": "test", "intent": "[IN:GET_EVENT When is the [SL:ORDINAL next ] [SL:DATE_TIME christmas ] [SL:CATEGORY_EVENT program ] in [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the city ] ] ] ]", "parameters": {}, "sentence": "When is the next christmas program in the city", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "WHEN IS THE NEXT CHRISTMAS PROGRAM IN THE CITY", "normalized_seqlogical": "[IN:GET_EVENT WHEN IS THE [SL:ORDINAL NEXT ] [SL:DATE_TIME CHRISTMAS ] [SL:CATEGORY_EVENT PROGRAM ] IN [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE CITY ] ] ] ]", "raw_data": {"file_id": "test_0/event_test_0/00002242.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "When is the next christmas program in the city", "seqlogical": "[IN:GET_EVENT When is the [SL:ORDINAL next ] [SL:DATE_TIME christmas ] [SL:CATEGORY_EVENT program ] in [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the city ] ] ] ]", "normalized_utterance": "WHEN IS THE NEXT CHRISTMAS PROGRAM IN THE CITY", "normalized_seqlogical": "[IN:GET_EVENT WHEN IS THE [SL:ORDINAL NEXT ] [SL:DATE_TIME CHRISTMAS ] [SL:CATEGORY_EVENT PROGRAM ] IN [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE CITY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:ORDINAL NEXT ] [SL:DATE_TIME CHRISTMAS ] [SL:CATEGORY_EVENT PROGRAM ] [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE CITY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"category_event": "Christmas program", "location": "city"}}]}
{"filename": "stop_data/stop/test_1/event_test/00002431.wav", "split": "test", "intent": "[IN:GET_EVENT Events [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION San Diego California ] ] ] ]", "parameters": {}, "sentence": "Events near San Diego California", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "EVENTS NEAR SAN DIEGO CALIFORNIA", "normalized_seqlogical": "[IN:GET_EVENT EVENTS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION SAN DIEGO CALIFORNIA ] ] ] ]", "raw_data": {"file_id": "test_1/event_test/00002431.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Events near San Diego California", "seqlogical": "[IN:GET_EVENT Events [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION San Diego California ] ] ] ]", "normalized_utterance": "EVENTS NEAR SAN DIEGO CALIFORNIA", "normalized_seqlogical": "[IN:GET_EVENT EVENTS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION SAN DIEGO CALIFORNIA ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION SAN DIEGO CALIFORNIA ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"location": "San Diego, California"}}]}
{"filename": "stop_data/stop/test_1/event_test/00000498.wav", "split": "test", "intent": "[IN:GET_EVENT Search for [SL:CATEGORY_EVENT live music ] in [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_USER the area ] ] ] [SL:DATE_TIME today ] ]", "parameters": {}, "sentence": "Search for live music in the area today", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "SEARCH FOR LIVE MUSIC IN THE AREA TODAY", "normalized_seqlogical": "[IN:GET_EVENT SEARCH FOR [SL:CATEGORY_EVENT LIVE MUSIC ] IN [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_USER THE AREA ] ] ] [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_1/event_test/00000498.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Search for live music in the area today", "seqlogical": "[IN:GET_EVENT Search for [SL:CATEGORY_EVENT live music ] in [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_USER the area ] ] ] [SL:DATE_TIME today ] ]", "normalized_utterance": "SEARCH FOR LIVE MUSIC IN THE AREA TODAY", "normalized_seqlogical": "[IN:GET_EVENT SEARCH FOR [SL:CATEGORY_EVENT LIVE MUSIC ] IN [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_USER THE AREA ] ] ] [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT LIVE MUSIC ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_USER THE AREA ] ] ] [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "nearest", "location_user": "me"}}, {"name": "get_event", "arguments": {"category_event": "live music", "location": "nearest", "date_time": "today"}}]}
{"filename": "stop_data/stop/test_0/event_test/00001850.wav", "split": "test", "intent": "[IN:GET_EVENT List some [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER local ] ] ] [SL:ATTRIBUTE_EVENT family - friendly ] activities ]", "parameters": {}, "sentence": "List some local family-friendly activities", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "LIST SOME LOCAL FAMILY FRIENDLY ACTIVITIES", "normalized_seqlogical": "[IN:GET_EVENT LIST SOME [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER LOCAL ] ] ] [SL:ATTRIBUTE_EVENT FAMILY FRIENDLY ] ACTIVITIES ]", "raw_data": {"file_id": "test_0/event_test_0/00001850.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "List some local family-friendly activities", "seqlogical": "[IN:GET_EVENT List some [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER local ] ] ] [SL:ATTRIBUTE_EVENT family - friendly ] activities ]", "normalized_utterance": "LIST SOME LOCAL FAMILY FRIENDLY ACTIVITIES", "normalized_seqlogical": "[IN:GET_EVENT LIST SOME [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER LOCAL ] ] ] [SL:ATTRIBUTE_EVENT FAMILY FRIENDLY ] ACTIVITIES ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER LOCAL ] ] ] [SL:ATTRIBUTE_EVENT FAMILY FRIENDLY ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "local"}}, {"name": "get_event", "arguments": {"category_event": "family-friendly", "location": "local"}}]}
{"filename": "stop_data/stop/test_0/event_test/00001416.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:CATEGORY_EVENT trekking events ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME in August ] ]", "parameters": {}, "sentence": "trekking events near me in August", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "TREKKING EVENTS NEAR ME IN AUGUST", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT TREKKING EVENTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME IN AUGUST ] ]", "raw_data": {"file_id": "test_0/event_test_0/00001416.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "trekking events near me in August", "seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT trekking events ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME in August ] ]", "normalized_utterance": "TREKKING EVENTS NEAR ME IN AUGUST", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT TREKKING EVENTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME IN AUGUST ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT TREKKING EVENTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME IN AUGUST ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"location": "User's current location", "date_time": "August"}}]}
{"filename": "stop_data/stop/test_1/event_test/00002589.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:CATEGORY_EVENT dog agility competitions ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME in the next six months ] ]", "parameters": {}, "sentence": "dog agility competitions near me in the next six months", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "DOG AGILITY COMPETITIONS NEAR ME IN THE NEXT SIX MONTHS", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT DOG AGILITY COMPETITIONS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME IN THE NEXT SIX MONTHS ] ]", "raw_data": {"file_id": "test_1/event_test/00002589.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "dog agility competitions near me in the next six months", "seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT dog agility competitions ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME in the next six months ] ]", "normalized_utterance": "DOG AGILITY COMPETITIONS NEAR ME IN THE NEXT SIX MONTHS", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT DOG AGILITY COMPETITIONS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME IN THE NEXT SIX MONTHS ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT DOG AGILITY COMPETITIONS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME IN THE NEXT SIX MONTHS ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"category_event": "Dog agility competitions", "location": "MOCK_RESPONSE(get_location)", "date_time": "next six months"}}]}
{"filename": "stop_data/stop/test_1/event_test/00001332.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:CATEGORY_EVENT Disney on Ice ] locations [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME within the next month ] ]", "parameters": {}, "sentence": "Disney on Ice locations near me within the next month", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "DISNEY ON ICE LOCATIONS NEAR ME WITHIN THE NEXT MONTH", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT DISNEY ON ICE ] LOCATIONS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME WITHIN THE NEXT MONTH ] ]", "raw_data": {"file_id": "test_1/event_test/00001332.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Disney on Ice locations near me within the next month", "seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT Disney on Ice ] locations [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME within the next month ] ]", "normalized_utterance": "DISNEY ON ICE LOCATIONS NEAR ME WITHIN THE NEXT MONTH", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT DISNEY ON ICE ] LOCATIONS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME WITHIN THE NEXT MONTH ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT DISNEY ON ICE ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME WITHIN THE NEXT MONTH ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"name_event": "Disney on Ice", "location": "MOCK_RESPONSE(get_location)", "date_time": "next month"}}]}
{"filename": "stop_data/stop/test_1/event_test/00000964.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:CATEGORY_EVENT metal concerts ] [SL:DATE_TIME this summer ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:POINT_ON_MAP Tinley Park ] ] ] ]", "parameters": {}, "sentence": "metal concerts this summer near Tinley Park", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "METAL CONCERTS THIS SUMMER NEAR TINLEY PARK", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT METAL CONCERTS ] [SL:DATE_TIME THIS SUMMER ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:POINT_ON_MAP TINLEY PARK ] ] ] ]", "raw_data": {"file_id": "test_1/event_test/00000964.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "metal concerts this summer near Tinley Park", "seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT metal concerts ] [SL:DATE_TIME this summer ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:POINT_ON_MAP Tinley Park ] ] ] ]", "normalized_utterance": "METAL CONCERTS THIS SUMMER NEAR TINLEY PARK", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT METAL CONCERTS ] [SL:DATE_TIME THIS SUMMER ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:POINT_ON_MAP TINLEY PARK ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT METAL CONCERTS ] [SL:DATE_TIME THIS SUMMER ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:POINT_ON_MAP TINLEY PARK ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"category_event": "concerts", "location": "Tinley Park", "date_time": "this summer"}}]}
{"filename": "stop_data/stop/test_0/event_test/00001620.wav", "split": "test", "intent": "[IN:GET_EVENT Are there any [SL:CATEGORY_EVENT parties ] going on [SL:DATE_TIME tonight ] , [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ]", "parameters": {}, "sentence": "Are there any parties going on tonight, near me", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "ARE THERE ANY PARTIES GOING ON TONIGHT NEAR ME", "normalized_seqlogical": "[IN:GET_EVENT ARE THERE ANY [SL:CATEGORY_EVENT PARTIES ] GOING ON [SL:DATE_TIME TONIGHT ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]", "raw_data": {"file_id": "test_0/event_test_0/00001620.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Are there any parties going on tonight, near me", "seqlogical": "[IN:GET_EVENT Are there any [SL:CATEGORY_EVENT parties ] going on [SL:DATE_TIME tonight ] , [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ]", "normalized_utterance": "ARE THERE ANY PARTIES GOING ON TONIGHT NEAR ME", "normalized_seqlogical": "[IN:GET_EVENT ARE THERE ANY [SL:CATEGORY_EVENT PARTIES ] GOING ON [SL:DATE_TIME TONIGHT ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT PARTIES ] [SL:DATE_TIME TONIGHT ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"location": "MOCK_RESPONSE(get_location)", "date_time": "tonight", "category_event": "parties"}}]}
{"filename": "stop_data/stop/test_0/event_test/00001874.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:DATE_TIME holiday ] [SL:CATEGORY_EVENT sales ] in [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP meadows mall ] ] ] ]", "parameters": {}, "sentence": "holiday sales in meadows mall", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "HOLIDAY SALES IN MEADOWS MALL", "normalized_seqlogical": "[IN:GET_EVENT [SL:DATE_TIME HOLIDAY ] [SL:CATEGORY_EVENT SALES ] IN [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP MEADOWS MALL ] ] ] ]", "raw_data": {"file_id": "test_0/event_test_0/00001874.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "holiday sales in meadows mall", "seqlogical": "[IN:GET_EVENT [SL:DATE_TIME holiday ] [SL:CATEGORY_EVENT sales ] in [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP meadows mall ] ] ] ]", "normalized_utterance": "HOLIDAY SALES IN MEADOWS MALL", "normalized_seqlogical": "[IN:GET_EVENT [SL:DATE_TIME HOLIDAY ] [SL:CATEGORY_EVENT SALES ] IN [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP MEADOWS MALL ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:DATE_TIME HOLIDAY ] [SL:CATEGORY_EVENT SALES ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP MEADOWS MALL ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"location": "Meadows Mall", "category_event": "sales"}}]}
{"filename": "stop_data/stop/test_1/event_test/00001446.wav", "split": "test", "intent": "[IN:GET_EVENT Search for [SL:CATEGORY_EVENT concerts ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME tomorrow ] ]", "parameters": {}, "sentence": "Search for concerts near me tomorrow", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "SEARCH FOR CONCERTS NEAR ME TOMORROW", "normalized_seqlogical": "[IN:GET_EVENT SEARCH FOR [SL:CATEGORY_EVENT CONCERTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME TOMORROW ] ]", "raw_data": {"file_id": "test_1/event_test/00001446.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Search for concerts near me tomorrow", "seqlogical": "[IN:GET_EVENT Search for [SL:CATEGORY_EVENT concerts ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME tomorrow ] ]", "normalized_utterance": "SEARCH FOR CONCERTS NEAR ME TOMORROW", "normalized_seqlogical": "[IN:GET_EVENT SEARCH FOR [SL:CATEGORY_EVENT CONCERTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME TOMORROW ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT CONCERTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME TOMORROW ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"category_event": "concerts", "location": "MOCK_RESPONSE(get_location)", "date_time": "tomorrow"}}]}
{"filename": "stop_data/stop/test_1/event_test/00001898.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:CATEGORY_EVENT Food and Wine Festivals ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME in January ] ]", "parameters": {}, "sentence": "Food and Wine Festivals near me in January", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "FOOD AND WINE FESTIVALS NEAR ME IN JANUARY", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT FOOD AND WINE FESTIVALS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME IN JANUARY ] ]", "raw_data": {"file_id": "test_1/event_test/00001898.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Food and Wine Festivals near me in January", "seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT Food and Wine Festivals ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME in January ] ]", "normalized_utterance": "FOOD AND WINE FESTIVALS NEAR ME IN JANUARY", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT FOOD AND WINE FESTIVALS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME IN JANUARY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT FOOD AND WINE FESTIVALS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME IN JANUARY ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"category_event": "food and wine festivals", "location": "MOCK_RESPONSE(get_location)", "date_time": "January"}}]}
{"filename": "stop_data/stop/test_1/event_test/00002408.wav", "split": "test", "intent": "[IN:GET_EVENT Something fun [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS within 25 miles ] ] ] ]", "parameters": {}, "sentence": "Something fun within 25 miles", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "SOMETHING FUN WITHIN TWENTY FIVE MILES", "normalized_seqlogical": "[IN:GET_EVENT SOMETHING FUN [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS WITHIN TWENTY FIVE MILES ] ] ] ]", "raw_data": {"file_id": "test_1/event_test/00002408.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Something fun within 25 miles", "seqlogical": "[IN:GET_EVENT Something fun [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS within 25 miles ] ] ] ]", "normalized_utterance": "SOMETHING FUN WITHIN TWENTY FIVE MILES", "normalized_seqlogical": "[IN:GET_EVENT SOMETHING FUN [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS WITHIN TWENTY FIVE MILES ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS WITHIN TWENTY FIVE MILES ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "within 25 miles"}}, {"name": "get_event", "arguments": {"location": "MOCK_RESPONSE(get_location)"}}]}
{"filename": "stop_data/stop/test_0/event_test/00000814.wav", "split": "test", "intent": "[IN:GET_EVENT are there any [SL:CATEGORY_EVENT costume parties ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION_USER here ] ] ] [SL:DATE_TIME this weekend ] ]", "parameters": {}, "sentence": "are there any costume parties around here this weekend", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "ARE THERE ANY COSTUME PARTIES AROUND HERE THIS WEEKEND", "normalized_seqlogical": "[IN:GET_EVENT ARE THERE ANY [SL:CATEGORY_EVENT COSTUME PARTIES ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION_USER HERE ] ] ] [SL:DATE_TIME THIS WEEKEND ] ]", "raw_data": {"file_id": "test_0/event_test_0/00000814.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "are there any costume parties around here this weekend", "seqlogical": "[IN:GET_EVENT are there any [SL:CATEGORY_EVENT costume parties ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION_USER here ] ] ] [SL:DATE_TIME this weekend ] ]", "normalized_utterance": "ARE THERE ANY COSTUME PARTIES AROUND HERE THIS WEEKEND", "normalized_seqlogical": "[IN:GET_EVENT ARE THERE ANY [SL:CATEGORY_EVENT COSTUME PARTIES ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION_USER HERE ] ] ] [SL:DATE_TIME THIS WEEKEND ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT COSTUME PARTIES ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION_USER HERE ] ] ] [SL:DATE_TIME THIS WEEKEND ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "around here"}}, {"name": "get_event", "arguments": {"category_event": "costume parties", "location": "MOCK_RESPONSE(get_location)", "date_time": "this weekend"}}]}
{"filename": "stop_data/stop/test_1/event_test/00002345.wav", "split": "test", "intent": "[IN:GET_EVENT What events are going on [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME tonight ] ]", "parameters": {}, "sentence": "What events are going on near me tonight", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT EVENTS ARE GOING ON NEAR ME TONIGHT", "normalized_seqlogical": "[IN:GET_EVENT WHAT EVENTS ARE GOING ON [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME TONIGHT ] ]", "raw_data": {"file_id": "test_1/event_test/00002345.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "What events are going on near me tonight", "seqlogical": "[IN:GET_EVENT What events are going on [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME tonight ] ]", "normalized_utterance": "WHAT EVENTS ARE GOING ON NEAR ME TONIGHT", "normalized_seqlogical": "[IN:GET_EVENT WHAT EVENTS ARE GOING ON [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME TONIGHT ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME TONIGHT ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"location": "MOCK_RESPONSE(get_location)", "date_time": "tonight"}}]}
{"filename": "stop_data/stop/test_0/event_test/00002567.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:CATEGORY_EVENT Comedy shows ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the Electric Factory ] ] ] [SL:DATE_TIME in March ] ]", "parameters": {}, "sentence": "Comedy shows at the Electric Factory in March", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "COMEDY SHOWS AT THE ELECTRIC FACTORY IN MARCH", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT COMEDY SHOWS ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE ELECTRIC FACTORY ] ] ] [SL:DATE_TIME IN MARCH ] ]", "raw_data": {"file_id": "test_0/event_test_0/00002567.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Comedy shows at the Electric Factory in March", "seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT Comedy shows ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the Electric Factory ] ] ] [SL:DATE_TIME in March ] ]", "normalized_utterance": "COMEDY SHOWS AT THE ELECTRIC FACTORY IN MARCH", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT COMEDY SHOWS ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE ELECTRIC FACTORY ] ] ] [SL:DATE_TIME IN MARCH ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT COMEDY SHOWS ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE ELECTRIC FACTORY ] ] ] [SL:DATE_TIME IN MARCH ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"category_event": "comedy shows", "location": "Electric Factory", "date_time": "March"}}]}
{"filename": "stop_data/stop/test_0/event_test/00001611.wav", "split": "test", "intent": "[IN:GET_EVENT Are there any [SL:CATEGORY_EVENT special exhibits ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the Museum of Natural History ] ] ] [SL:DATE_TIME next month ] ]", "parameters": {}, "sentence": "Are there any special exhibits at the Museum of Natural History next month", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "ARE THERE ANY SPECIAL EXHIBITS AT THE MUSEUM OF NATURAL HISTORY NEXT MONTH", "normalized_seqlogical": "[IN:GET_EVENT ARE THERE ANY [SL:CATEGORY_EVENT SPECIAL EXHIBITS ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE MUSEUM OF NATURAL HISTORY ] ] ] [SL:DATE_TIME NEXT MONTH ] ]", "raw_data": {"file_id": "test_0/event_test_0/00001611.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Are there any special exhibits at the Museum of Natural History next month", "seqlogical": "[IN:GET_EVENT Are there any [SL:CATEGORY_EVENT special exhibits ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the Museum of Natural History ] ] ] [SL:DATE_TIME next month ] ]", "normalized_utterance": "ARE THERE ANY SPECIAL EXHIBITS AT THE MUSEUM OF NATURAL HISTORY NEXT MONTH", "normalized_seqlogical": "[IN:GET_EVENT ARE THERE ANY [SL:CATEGORY_EVENT SPECIAL EXHIBITS ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE MUSEUM OF NATURAL HISTORY ] ] ] [SL:DATE_TIME NEXT MONTH ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT SPECIAL EXHIBITS ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE MUSEUM OF NATURAL HISTORY ] ] ] [SL:DATE_TIME NEXT MONTH ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"location": "Museum of Natural History", "date_time": "next month"}}]}
{"filename": "stop_data/stop/test_0/event_test/00002003.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:CATEGORY_EVENT cookie decorating ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ]", "parameters": {}, "sentence": "cookie decorating near me", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "COOKIE DECORATING NEAR ME", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT COOKIE DECORATING ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]", "raw_data": {"file_id": "test_0/event_test_0/00002003.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "cookie decorating near me", "seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT cookie decorating ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ]", "normalized_utterance": "COOKIE DECORATING NEAR ME", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT COOKIE DECORATING ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT COOKIE DECORATING ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}]}
{"filename": "stop_data/stop/test_0/event_test/00001317.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:DATE_TIME Halloween ] [SL:CATEGORY_EVENT themed activities ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER nearby ] ] ] ]", "parameters": {}, "sentence": "Halloween themed activities nearby", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "HALLOWEEN THEMED ACTIVITIES NEARBY", "normalized_seqlogical": "[IN:GET_EVENT [SL:DATE_TIME HALLOWEEN ] [SL:CATEGORY_EVENT THEMED ACTIVITIES ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER NEARBY ] ] ] ]", "raw_data": {"file_id": "test_0/event_test_0/00001317.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Halloween themed activities nearby", "seqlogical": "[IN:GET_EVENT [SL:DATE_TIME Halloween ] [SL:CATEGORY_EVENT themed activities ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER nearby ] ] ] ]", "normalized_utterance": "HALLOWEEN THEMED ACTIVITIES NEARBY", "normalized_seqlogical": "[IN:GET_EVENT [SL:DATE_TIME HALLOWEEN ] [SL:CATEGORY_EVENT THEMED ACTIVITIES ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER NEARBY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:DATE_TIME HALLOWEEN ] [SL:CATEGORY_EVENT THEMED ACTIVITIES ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER NEARBY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "nearby"}}, {"name": "get_event", "arguments": {"category_event": "Halloween-themed activities", "location": "MOCK_RESPONSE(get_location)"}}]}
{"filename": "stop_data/stop/test_0/event_test/00001481.wav", "split": "test", "intent": "[IN:GET_EVENT Who is [SL:CATEGORY_EVENT singing ] at the [SL:ORDINAL next ] [SL:CATEGORY_EVENT concert ] in [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION town ] ] ] ]", "parameters": {}, "sentence": "Who is singing at the next concert in town", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "WHO IS SINGING AT THE NEXT CONCERT IN TOWN", "normalized_seqlogical": "[IN:GET_EVENT WHO IS [SL:CATEGORY_EVENT SINGING ] AT THE [SL:ORDINAL NEXT ] [SL:CATEGORY_EVENT CONCERT ] IN [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION TOWN ] ] ] ]", "raw_data": {"file_id": "test_0/event_test_0/00001481.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Who is singing at the next concert in town", "seqlogical": "[IN:GET_EVENT Who is [SL:CATEGORY_EVENT singing ] at the [SL:ORDINAL next ] [SL:CATEGORY_EVENT concert ] in [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION town ] ] ] ]", "normalized_utterance": "WHO IS SINGING AT THE NEXT CONCERT IN TOWN", "normalized_seqlogical": "[IN:GET_EVENT WHO IS [SL:CATEGORY_EVENT SINGING ] AT THE [SL:ORDINAL NEXT ] [SL:CATEGORY_EVENT CONCERT ] IN [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION TOWN ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT SINGING ] [SL:ORDINAL NEXT ] [SL:CATEGORY_EVENT CONCERT ] [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION TOWN ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_event_organizer", "arguments": {"date_time": "next concert", "category_event": "concert"}}]}
{"filename": "stop_data/stop/test_1/event_test/00001273.wav", "split": "test", "intent": "[IN:GET_EVENT Does [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the Hayden Planetarium ] ] ] still offer the [SL:DATE_TIME late night ] [SL:CATEGORY_EVENT rock show ] ]", "parameters": {}, "sentence": "Does the Hayden Planetarium still offer the late night rock show", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "DOES THE HAYDEN PLANETARIUM STILL OFFER THE LATE NIGHT ROCK SHOW", "normalized_seqlogical": "[IN:GET_EVENT DOES [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE HAYDEN PLANETARIUM ] ] ] STILL OFFER THE [SL:DATE_TIME LATE NIGHT ] [SL:CATEGORY_EVENT ROCK SHOW ] ]", "raw_data": {"file_id": "test_1/event_test/00001273.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Does the Hayden Planetarium still offer the late night rock show", "seqlogical": "[IN:GET_EVENT Does [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the Hayden Planetarium ] ] ] still offer the [SL:DATE_TIME late night ] [SL:CATEGORY_EVENT rock show ] ]", "normalized_utterance": "DOES THE HAYDEN PLANETARIUM STILL OFFER THE LATE NIGHT ROCK SHOW", "normalized_seqlogical": "[IN:GET_EVENT DOES [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE HAYDEN PLANETARIUM ] ] ] STILL OFFER THE [SL:DATE_TIME LATE NIGHT ] [SL:CATEGORY_EVENT ROCK SHOW ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE HAYDEN PLANETARIUM ] ] ] [SL:DATE_TIME LATE NIGHT ] [SL:CATEGORY_EVENT ROCK SHOW ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"name_event": "late night rock show", "location": "Hayden Planetarium"}}]}
{"filename": "stop_data/stop/test_1/event_test/00000392.wav", "split": "test", "intent": "[IN:GET_EVENT are there any [SL:ATTRIBUTE_EVENT discounted ] [SL:CATEGORY_EVENT shows ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER close by ] ] ] ]", "parameters": {}, "sentence": "are there any discounted shows close by", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "ARE THERE ANY DISCOUNTED SHOWS CLOSE BY", "normalized_seqlogical": "[IN:GET_EVENT ARE THERE ANY [SL:ATTRIBUTE_EVENT DISCOUNTED ] [SL:CATEGORY_EVENT SHOWS ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER CLOSE BY ] ] ] ]", "raw_data": {"file_id": "test_1/event_test/00000392.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "are there any discounted shows close by", "seqlogical": "[IN:GET_EVENT are there any [SL:ATTRIBUTE_EVENT discounted ] [SL:CATEGORY_EVENT shows ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER close by ] ] ] ]", "normalized_utterance": "ARE THERE ANY DISCOUNTED SHOWS CLOSE BY", "normalized_seqlogical": "[IN:GET_EVENT ARE THERE ANY [SL:ATTRIBUTE_EVENT DISCOUNTED ] [SL:CATEGORY_EVENT SHOWS ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER CLOSE BY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT DISCOUNTED ] [SL:CATEGORY_EVENT SHOWS ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER CLOSE BY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "close by"}}, {"name": "get_event", "arguments": {"category_event": "shows", "location": "close by"}}]}
{"filename": "stop_data/stop/test_0/event_test/00002469.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:CATEGORY_EVENT Rock concerts ] [SL:DATE_TIME this month ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ]", "parameters": {}, "sentence": "Rock concerts this month near me", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "ROCK CONCERTS THIS MONTH NEAR ME", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT ROCK CONCERTS ] [SL:DATE_TIME THIS MONTH ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]", "raw_data": {"file_id": "test_0/event_test_0/00002469.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Rock concerts this month near me", "seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT Rock concerts ] [SL:DATE_TIME this month ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ]", "normalized_utterance": "ROCK CONCERTS THIS MONTH NEAR ME", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT ROCK CONCERTS ] [SL:DATE_TIME THIS MONTH ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT ROCK CONCERTS ] [SL:DATE_TIME THIS MONTH ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"category_event": "Rock concerts", "location": "MOCK_RESPONSE(get_location)", "date_time": "this month"}}]}
{"filename": "stop_data/stop/test_1/event_test/00001045.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:CATEGORY_EVENT craft shows ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ]", "parameters": {}, "sentence": "craft shows near me", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "CRAFT SHOWS NEAR ME", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT CRAFT SHOWS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]", "raw_data": {"file_id": "test_1/event_test/00001045.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "craft shows near me", "seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT craft shows ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ]", "normalized_utterance": "CRAFT SHOWS NEAR ME", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT CRAFT SHOWS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT CRAFT SHOWS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"category_event": "craft shows", "location": "MOCK_RESPONSE(get_location)"}}]}
{"filename": "stop_data/stop/test_1/event_test/00001280.wav", "split": "test", "intent": "[IN:GET_EVENT Any events happening at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Mile High Stadium ] ] ] ]", "parameters": {}, "sentence": "Any events happening at Mile High Stadium", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "ANY EVENTS HAPPENING AT MILE HIGH STADIUM", "normalized_seqlogical": "[IN:GET_EVENT ANY EVENTS HAPPENING AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP MILE HIGH STADIUM ] ] ] ]", "raw_data": {"file_id": "test_1/event_test/00001280.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Any events happening at Mile High Stadium", "seqlogical": "[IN:GET_EVENT Any events happening at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Mile High Stadium ] ] ] ]", "normalized_utterance": "ANY EVENTS HAPPENING AT MILE HIGH STADIUM", "normalized_seqlogical": "[IN:GET_EVENT ANY EVENTS HAPPENING AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP MILE HIGH STADIUM ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP MILE HIGH STADIUM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"location": "Mile High Stadium"}}]}
{"filename": "stop_data/stop/test_1/event_test/00001988.wav", "split": "test", "intent": "[IN:GET_EVENT Give me some events [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME this month ] ]", "parameters": {}, "sentence": "Give me some events near me this month", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "GIVE ME SOME EVENTS NEAR ME THIS MONTH", "normalized_seqlogical": "[IN:GET_EVENT GIVE ME SOME EVENTS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME THIS MONTH ] ]", "raw_data": {"file_id": "test_1/event_test/00001988.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Give me some events near me this month", "seqlogical": "[IN:GET_EVENT Give me some events [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME this month ] ]", "normalized_utterance": "GIVE ME SOME EVENTS NEAR ME THIS MONTH", "normalized_seqlogical": "[IN:GET_EVENT GIVE ME SOME EVENTS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME THIS MONTH ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME THIS MONTH ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"location": "MOCK_RESPONSE(get_location)", "date_time": "this month"}}]}
{"filename": "stop_data/stop/test_0/event_test/00001003.wav", "split": "test", "intent": "[IN:GET_EVENT Cool stuff in [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Harvard Square ] ] ] [SL:DATE_TIME next week ] ]", "parameters": {}, "sentence": "Cool stuff in Harvard Square next week", "domain": "event", "gender": "Female", "native": "Yes", "normalized_utterance": "COOL STUFF IN HARVARD SQUARE NEXT WEEK", "normalized_seqlogical": "[IN:GET_EVENT COOL STUFF IN [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP HARVARD SQUARE ] ] ] [SL:DATE_TIME NEXT WEEK ] ]", "raw_data": {"file_id": "test_0/event_test_0/00001003.wav", "domain": "event", "gender": "Female", "native": "Yes", "utterance": "Cool stuff in Harvard Square next week", "seqlogical": "[IN:GET_EVENT Cool stuff in [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Harvard Square ] ] ] [SL:DATE_TIME next week ] ]", "normalized_utterance": "COOL STUFF IN HARVARD SQUARE NEXT WEEK", "normalized_seqlogical": "[IN:GET_EVENT COOL STUFF IN [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP HARVARD SQUARE ] ] ] [SL:DATE_TIME NEXT WEEK ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP HARVARD SQUARE ] ] ] [SL:DATE_TIME NEXT WEEK ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"location": "Harvard Square", "date_time": "next week"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00000671.wav", "split": "test", "intent": "[IN:DELETE_ALARM delete my [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 6 am ] ] ] [SL:ALARM_NAME workout alarm ] ]", "parameters": {}, "sentence": "delete my 6am workout alarm", "domain": "alarm", "gender": "Female", "native": "No", "normalized_utterance": "DELETE MY SIX AM WORKOUT ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE MY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME SIX AM ] ] ] [SL:ALARM_NAME WORKOUT ALARM ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00000671.wav", "domain": "alarm", "gender": "Female", "native": "No", "utterance": "delete my 6am workout alarm", "seqlogical": "[IN:DELETE_ALARM delete my [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 6 am ] ] ] [SL:ALARM_NAME workout alarm ] ]", "normalized_utterance": "DELETE MY SIX AM WORKOUT ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE MY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME SIX AM ] ] ] [SL:ALARM_NAME WORKOUT ALARM ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME SIX AM ] ] ] [SL:ALARM_NAME WORKOUT ALARM ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "6am", "alarm_name": "workout"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00003137.wav", "split": "test", "intent": "[IN:UPDATE_ALARM Update my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME on the 8th ] ] ] to ring [SL:DATE_TIME at noon ] . ]", "parameters": {}, "sentence": "Update my alarm on the 8th  to ring at noon.", "domain": "alarm", "gender": "Female", "native": "No", "normalized_utterance": "UPDATE MY ALARM ON THE EIGHTH TO RING AT NOON", "normalized_seqlogical": "[IN:UPDATE_ALARM UPDATE MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME ON THE EIGHTH ] ] ] TO RING [SL:DATE_TIME AT NOON ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00003137.wav", "domain": "alarm", "gender": "Female", "native": "No", "utterance": "Update my alarm on the 8th  to ring at noon.", "seqlogical": "[IN:UPDATE_ALARM Update my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME on the 8th ] ] ] to ring [SL:DATE_TIME at noon ] . ]", "normalized_utterance": "UPDATE MY ALARM ON THE EIGHTH TO RING AT NOON", "normalized_seqlogical": "[IN:UPDATE_ALARM UPDATE MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME ON THE EIGHTH ] ] ] TO RING [SL:DATE_TIME AT NOON ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME ON THE EIGHTH ] ] ] [SL:DATE_TIME AT NOON ] ]"}, "prediction": "", "function_calls": [{"name": "update_alarm", "arguments": {"alarm_name": "alarm", "date_time": "2023-11-08T12:00:00"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00000845.wav", "split": "test", "intent": "[IN:DELETE_ALARM Cancel my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME this morning ] ] ] ]", "parameters": {}, "sentence": "Cancel my alarm this morning", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "CANCEL MY ALARM THIS MORNING", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME THIS MORNING ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00000845.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "Cancel my alarm this morning", "seqlogical": "[IN:DELETE_ALARM Cancel my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME this morning ] ] ] ]", "normalized_utterance": "CANCEL MY ALARM THIS MORNING", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME THIS MORNING ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME THIS MORNING ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "this morning"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00002495.wav", "split": "test", "intent": "[IN:GET_ALARM what time is my alarm set [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tomorrow ] ] ] ]", "parameters": {}, "sentence": "what time is my alarm set for tomorrow", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT TIME IS MY ALARM SET FOR TOMORROW", "normalized_seqlogical": "[IN:GET_ALARM WHAT TIME IS MY ALARM SET [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00002495.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "what time is my alarm set for tomorrow", "seqlogical": "[IN:GET_ALARM what time is my alarm set [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tomorrow ] ] ] ]", "normalized_utterance": "WHAT TIME IS MY ALARM SET FOR TOMORROW", "normalized_seqlogical": "[IN:GET_ALARM WHAT TIME IS MY ALARM SET [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"date_time": "tomorrow"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00006425.wav", "split": "test", "intent": "[IN:DELETE_ALARM Cancel the alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for in the morning ] ] ] . ]", "parameters": {}, "sentence": "Cancel the alarm for in the morning.", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "CANCEL THE ALARM FOR IN THE MORNING", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL THE ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR IN THE MORNING ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00006425.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "Cancel the alarm for in the morning.", "seqlogical": "[IN:DELETE_ALARM Cancel the alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for in the morning ] ] ] . ]", "normalized_utterance": "CANCEL THE ALARM FOR IN THE MORNING", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL THE ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR IN THE MORNING ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR IN THE MORNING ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "tomorrow morning"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00003977.wav", "split": "test", "intent": "[IN:GET_ALARM Display my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tomorrow ] ] ] . ]", "parameters": {}, "sentence": "Display my alarm for tomorrow.", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "DISPLAY MY ALARM FOR TOMORROW", "normalized_seqlogical": "[IN:GET_ALARM DISPLAY MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00003977.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "Display my alarm for tomorrow.", "seqlogical": "[IN:GET_ALARM Display my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tomorrow ] ] ] . ]", "normalized_utterance": "DISPLAY MY ALARM FOR TOMORROW", "normalized_seqlogical": "[IN:GET_ALARM DISPLAY MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"date_time": "tomorrow"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00001865.wav", "split": "test", "intent": "[IN:UPDATE_ALARM change [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 7 am ] ] ] alarm [SL:DATE_TIME to 6 : 30 am ] ]", "parameters": {}, "sentence": "change 7am alarm to 6:30am", "domain": "alarm", "gender": "Female", "native": "No", "normalized_utterance": "CHANGE SEVEN AM ALARM TO SIX THIRTY AM", "normalized_seqlogical": "[IN:UPDATE_ALARM CHANGE [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME SEVEN AM ] ] ] ALARM [SL:DATE_TIME TO SIX THIRTY AM ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00001865.wav", "domain": "alarm", "gender": "Female", "native": "No", "utterance": "change 7am alarm to 6:30am", "seqlogical": "[IN:UPDATE_ALARM change [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 7 am ] ] ] alarm [SL:DATE_TIME to 6 : 30 am ] ]", "normalized_utterance": "CHANGE SEVEN AM ALARM TO SIX THIRTY AM", "normalized_seqlogical": "[IN:UPDATE_ALARM CHANGE [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME SEVEN AM ] ] ] ALARM [SL:DATE_TIME TO SIX THIRTY AM ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME SEVEN AM ] ] ] [SL:DATE_TIME TO SIX THIRTY AM ] ]"}, "prediction": "", "function_calls": [{"name": "update_alarm", "arguments": {"alarm_name": "7 AM alarm", "date_time": "6:30 AM"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00002970.wav", "split": "test", "intent": "[IN:GET_ALARM when are my alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for this week ] ] ] ]", "parameters": {}, "sentence": "when are my alarms for this week", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "WHEN ARE MY ALARMS FOR THIS WEEK", "normalized_seqlogical": "[IN:GET_ALARM WHEN ARE MY ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR THIS WEEK ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00002970.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "when are my alarms for this week", "seqlogical": "[IN:GET_ALARM when are my alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for this week ] ] ] ]", "normalized_utterance": "WHEN ARE MY ALARMS FOR THIS WEEK", "normalized_seqlogical": "[IN:GET_ALARM WHEN ARE MY ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR THIS WEEK ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR THIS WEEK ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"date_time_recurring": "this week"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00000412.wav", "split": "test", "intent": "[IN:DELETE_ALARM cancel [SL:AMOUNT all ] my [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME weekend ] ] ] alarms ]", "parameters": {}, "sentence": "cancel all my weekend alarms", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "CANCEL ALL MY WEEKEND ALARMS", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL [SL:AMOUNT ALL ] MY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME WEEKEND ] ] ] ALARMS ]", "raw_data": {"file_id": "test_1/alarm_test/00000412.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "cancel all my weekend alarms", "seqlogical": "[IN:DELETE_ALARM cancel [SL:AMOUNT all ] my [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME weekend ] ] ] alarms ]", "normalized_utterance": "CANCEL ALL MY WEEKEND ALARMS", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL [SL:AMOUNT ALL ] MY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME WEEKEND ] ] ] ALARMS ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:AMOUNT ALL ] [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME WEEKEND ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"period": "weekend"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00002939.wav", "split": "test", "intent": "[IN:DELETE_ALARM Delete [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME this evening ] ] ] 's alarms . ]", "parameters": {}, "sentence": "Delete this evening's alarms.", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "DELETE THIS EVENING 'S ALARMS", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME THIS EVENING ] ] ] 'S ALARMS ]", "raw_data": {"file_id": "test_0/alarm_test_0/00002939.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "Delete this evening's alarms.", "seqlogical": "[IN:DELETE_ALARM Delete [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME this evening ] ] ] 's alarms . ]", "normalized_utterance": "DELETE THIS EVENING 'S ALARMS", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME THIS EVENING ] ] ] 'S ALARMS ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME THIS EVENING ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "this evening"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00002109.wav", "split": "test", "intent": "[IN:DELETE_ALARM Delete my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for 10 am ] ] ] . ]", "parameters": {}, "sentence": "Delete my alarm for 10 am.", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "DELETE MY ALARM FOR TEN AM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TEN AM ] ] ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00002109.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "Delete my alarm for 10 am.", "seqlogical": "[IN:DELETE_ALARM Delete my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for 10 am ] ] ] . ]", "normalized_utterance": "DELETE MY ALARM FOR TEN AM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TEN AM ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TEN AM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "2023-10-10T10:00:00"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00000966.wav", "split": "test", "intent": "[IN:SILENCE_ALARM turn off my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for in the morning ] ] ] ]", "parameters": {}, "sentence": "turn off my alarm for in the morning", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "TURN OFF MY ALARM FOR IN THE MORNING", "normalized_seqlogical": "[IN:SILENCE_ALARM TURN OFF MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR IN THE MORNING ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00000966.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "turn off my alarm for in the morning", "seqlogical": "[IN:SILENCE_ALARM turn off my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for in the morning ] ] ] ]", "normalized_utterance": "TURN OFF MY ALARM FOR IN THE MORNING", "normalized_seqlogical": "[IN:SILENCE_ALARM TURN OFF MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR IN THE MORNING ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:SILENCE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR IN THE MORNING ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "tomorrow morning"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00002725.wav", "split": "test", "intent": "[IN:UPDATE_ALARM Change my [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 3 PM ] ] ] alarm [SL:DATE_TIME to the next day ] ]", "parameters": {}, "sentence": "Change my 3 PM alarm to the next day", "domain": "alarm", "gender": "Female", "native": "No", "normalized_utterance": "CHANGE MY THREE PM ALARM TO THE NEXT DAY", "normalized_seqlogical": "[IN:UPDATE_ALARM CHANGE MY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME THREE PM ] ] ] ALARM [SL:DATE_TIME TO THE NEXT DAY ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00002725.wav", "domain": "alarm", "gender": "Female", "native": "No", "utterance": "Change my 3 PM alarm to the next day", "seqlogical": "[IN:UPDATE_ALARM Change my [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 3 PM ] ] ] alarm [SL:DATE_TIME to the next day ] ]", "normalized_utterance": "CHANGE MY THREE PM ALARM TO THE NEXT DAY", "normalized_seqlogical": "[IN:UPDATE_ALARM CHANGE MY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME THREE PM ] ] ] ALARM [SL:DATE_TIME TO THE NEXT DAY ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME THREE PM ] ] ] [SL:DATE_TIME TO THE NEXT DAY ] ]"}, "prediction": "", "function_calls": [{"name": "update_alarm", "arguments": {"alarm_name": "3pm alarm", "date_time": "next day"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00006543.wav", "split": "test", "intent": "[IN:DELETE_ALARM delete that alarm that was [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for 6 : 00 am ] ] ] ]", "parameters": {}, "sentence": "delete that alarm that was for 6:00 am", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "DELETE THAT ALARM THAT WAS FOR SIX AM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE THAT ALARM THAT WAS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR SIX AM ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00006543.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "delete that alarm that was for 6:00 am", "seqlogical": "[IN:DELETE_ALARM delete that alarm that was [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for 6 : 00 am ] ] ] ]", "normalized_utterance": "DELETE THAT ALARM THAT WAS FOR SIX AM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE THAT ALARM THAT WAS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR SIX AM ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR SIX AM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"alarm_name": "6am"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00000419.wav", "split": "test", "intent": "[IN:DELETE_ALARM cancel alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tomorrow ] ] ] ]", "parameters": {}, "sentence": "cancel alarm for tomorrow", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "CANCEL ALARM FOR TOMORROW", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW ] ] ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00000419.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "cancel alarm for tomorrow", "seqlogical": "[IN:DELETE_ALARM cancel alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tomorrow ] ] ] ]", "normalized_utterance": "CANCEL ALARM FOR TOMORROW", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "tomorrow"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00000934.wav", "split": "test", "intent": "[IN:DELETE_ALARM Delete my [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 6 pm ] ] ] alarm ]", "parameters": {}, "sentence": "Delete my 6 pm alarm", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "DELETE MY SIX PM ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE MY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME SIX PM ] ] ] ALARM ]", "raw_data": {"file_id": "test_1/alarm_test/00000934.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "Delete my 6 pm alarm", "seqlogical": "[IN:DELETE_ALARM Delete my [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 6 pm ] ] ] alarm ]", "normalized_utterance": "DELETE MY SIX PM ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE MY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME SIX PM ] ] ] ALARM ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME SIX PM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "6 PM"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00006246.wav", "split": "test", "intent": "[IN:DELETE_ALARM would you please delete this [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 2 : 00 am ] ] ] alarm ]", "parameters": {}, "sentence": "would you please delete this  2:00 am alarm", "domain": "alarm", "gender": "Female", "native": "No", "normalized_utterance": "WOULD YOU PLEASE DELETE THIS TWO AM ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM WOULD YOU PLEASE DELETE THIS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TWO AM ] ] ] ALARM ]", "raw_data": {"file_id": "test_0/alarm_test_0/00006246.wav", "domain": "alarm", "gender": "Female", "native": "No", "utterance": "would you please delete this  2:00 am alarm", "seqlogical": "[IN:DELETE_ALARM would you please delete this [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 2 : 00 am ] ] ] alarm ]", "normalized_utterance": "WOULD YOU PLEASE DELETE THIS TWO AM ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM WOULD YOU PLEASE DELETE THIS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TWO AM ] ] ] ALARM ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TWO AM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_timer", "arguments": {"method_timer": "this"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00002346.wav", "split": "test", "intent": "[IN:DELETE_ALARM Delete the alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for 6 PM ] ] ] ]", "parameters": {}, "sentence": "Delete the alarm for 6PM", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "DELETE THE ALARM FOR SIX PM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE THE ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR SIX PM ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00002346.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "Delete the alarm for 6PM", "seqlogical": "[IN:DELETE_ALARM Delete the alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for 6 PM ] ] ] ]", "normalized_utterance": "DELETE THE ALARM FOR SIX PM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE THE ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR SIX PM ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR SIX PM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "6 PM"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00006629.wav", "split": "test", "intent": "[IN:UPDATE_ALARM Change my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME from 5 pm ] ] ] [SL:DATE_TIME to 5 : 30 pm today ] . ]", "parameters": {}, "sentence": "Change my alarm from 5pm to 5:30pm today.", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "CHANGE MY ALARM FROM FIVE PM TO FIVE THIRTY PM TODAY", "normalized_seqlogical": "[IN:UPDATE_ALARM CHANGE MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FROM FIVE PM ] ] ] [SL:DATE_TIME TO FIVE THIRTY PM TODAY ] ]", "raw_data": {"file_id": "test_1/alarm_test/00006629.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "Change my alarm from 5pm to 5:30pm today.", "seqlogical": "[IN:UPDATE_ALARM Change my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME from 5 pm ] ] ] [SL:DATE_TIME to 5 : 30 pm today ] . ]", "normalized_utterance": "CHANGE MY ALARM FROM FIVE PM TO FIVE THIRTY PM TODAY", "normalized_seqlogical": "[IN:UPDATE_ALARM CHANGE MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FROM FIVE PM ] ] ] [SL:DATE_TIME TO FIVE THIRTY PM TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FROM FIVE PM ] ] ] [SL:DATE_TIME TO FIVE THIRTY PM TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "update_alarm", "arguments": {"alarm_name": "alarm", "date_time": "today at 5:30pm"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00004024.wav", "split": "test", "intent": "[IN:UPDATE_ALARM Modify alarm to ring [SL:DATE_TIME at 6 pm ] instead [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME on 6 am ] ] ] ]", "parameters": {}, "sentence": "Modify alarm to ring at 6 pm instead on 6 am", "domain": "alarm", "gender": "Female", "native": "No", "normalized_utterance": "MODIFY ALARM TO RING AT SIX PM INSTEAD ON SIX AM", "normalized_seqlogical": "[IN:UPDATE_ALARM MODIFY ALARM TO RING [SL:DATE_TIME AT SIX PM ] INSTEAD [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME ON SIX AM ] ] ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00004024.wav", "domain": "alarm", "gender": "Female", "native": "No", "utterance": "Modify alarm to ring at 6 pm instead on 6 am", "seqlogical": "[IN:UPDATE_ALARM Modify alarm to ring [SL:DATE_TIME at 6 pm ] instead [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME on 6 am ] ] ] ]", "normalized_utterance": "MODIFY ALARM TO RING AT SIX PM INSTEAD ON SIX AM", "normalized_seqlogical": "[IN:UPDATE_ALARM MODIFY ALARM TO RING [SL:DATE_TIME AT SIX PM ] INSTEAD [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME ON SIX AM ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_ALARM [SL:DATE_TIME AT SIX PM ] [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME ON SIX AM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "update_alarm", "arguments": {"alarm_name": "alarm", "date_time": "6pm"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00006148.wav", "split": "test", "intent": "[IN:UPDATE_ALARM Could you change my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME from 6 ] ] ] [SL:DATE_TIME to 5 am ] ]", "parameters": {}, "sentence": "Could you change my alarm from 6 to 5 am", "domain": "alarm", "gender": "Female", "native": "No", "normalized_utterance": "COULD YOU CHANGE MY ALARM FROM SIX TO FIVE AM", "normalized_seqlogical": "[IN:UPDATE_ALARM COULD YOU CHANGE MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FROM SIX ] ] ] [SL:DATE_TIME TO FIVE AM ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00006148.wav", "domain": "alarm", "gender": "Female", "native": "No", "utterance": "Could you change my alarm from 6 to 5 am", "seqlogical": "[IN:UPDATE_ALARM Could you change my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME from 6 ] ] ] [SL:DATE_TIME to 5 am ] ]", "normalized_utterance": "COULD YOU CHANGE MY ALARM FROM SIX TO FIVE AM", "normalized_seqlogical": "[IN:UPDATE_ALARM COULD YOU CHANGE MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FROM SIX ] ] ] [SL:DATE_TIME TO FIVE AM ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FROM SIX ] ] ] [SL:DATE_TIME TO FIVE AM ] ]"}, "prediction": "", "function_calls": [{"name": "update_alarm", "arguments": {"alarm_name": "6 AM", "date_time": "5 AM"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00002862.wav", "split": "test", "intent": "[IN:DELETE_ALARM Delete [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME Sunday ] ] ] 's alarm . ]", "parameters": {}, "sentence": "Delete Sunday's alarm.", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "DELETE SUNDAY 'S ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME SUNDAY ] ] ] 'S ALARM ]", "raw_data": {"file_id": "test_1/alarm_test/00002862.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "Delete Sunday's alarm.", "seqlogical": "[IN:DELETE_ALARM Delete [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME Sunday ] ] ] 's alarm . ]", "normalized_utterance": "DELETE SUNDAY 'S ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME SUNDAY ] ] ] 'S ALARM ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME SUNDAY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time_recurring": "Sunday"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00001698.wav", "split": "test", "intent": "[IN:GET_ALARM When is my alarm set to go off [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME tomorrow ] ] ] ? ]", "parameters": {}, "sentence": "When is my alarm set to go off tomorrow?", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "WHEN IS MY ALARM SET TO GO OFF TOMORROW", "normalized_seqlogical": "[IN:GET_ALARM WHEN IS MY ALARM SET TO GO OFF [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TOMORROW ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00001698.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "When is my alarm set to go off tomorrow?", "seqlogical": "[IN:GET_ALARM When is my alarm set to go off [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME tomorrow ] ] ] ? ]", "normalized_utterance": "WHEN IS MY ALARM SET TO GO OFF TOMORROW", "normalized_seqlogical": "[IN:GET_ALARM WHEN IS MY ALARM SET TO GO OFF [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TOMORROW ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TOMORROW ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"date_time": "tomorrow"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00006057.wav", "split": "test", "intent": "[IN:DELETE_ALARM Please cancel the [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 5 am ] ] ] alarm ]", "parameters": {}, "sentence": "Please cancel the 5 am alarm", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "PLEASE CANCEL THE FIVE AM ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM PLEASE CANCEL THE [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FIVE AM ] ] ] ALARM ]", "raw_data": {"file_id": "test_1/alarm_test/00006057.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "Please cancel the 5 am alarm", "seqlogical": "[IN:DELETE_ALARM Please cancel the [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 5 am ] ] ] alarm ]", "normalized_utterance": "PLEASE CANCEL THE FIVE AM ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM PLEASE CANCEL THE [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FIVE AM ] ] ] ALARM ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FIVE AM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "5am"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00003938.wav", "split": "test", "intent": "[IN:DELETE_ALARM Scrub [SL:AMOUNT all ] alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for Tuesday ] ] ] ]", "parameters": {}, "sentence": "Scrub all alarms for Tuesday", "domain": "alarm", "gender": "Female", "native": "Prefer not to say", "normalized_utterance": "SCRUB ALL ALARMS FOR TUESDAY", "normalized_seqlogical": "[IN:DELETE_ALARM SCRUB [SL:AMOUNT ALL ] ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TUESDAY ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00003938.wav", "domain": "alarm", "gender": "Female", "native": "Prefer not to say", "utterance": "Scrub all alarms for Tuesday", "seqlogical": "[IN:DELETE_ALARM Scrub [SL:AMOUNT all ] alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for Tuesday ] ] ] ]", "normalized_utterance": "SCRUB ALL ALARMS FOR TUESDAY", "normalized_seqlogical": "[IN:DELETE_ALARM SCRUB [SL:AMOUNT ALL ] ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TUESDAY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:AMOUNT ALL ] [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TUESDAY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "Tuesday"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00000211.wav", "split": "test", "intent": "[IN:UPDATE_ALARM Change my [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 5 am ] ] ] alarm [SL:DATE_TIME to 5 : 30 AM ] ]", "parameters": {}, "sentence": "Change my 5 am alarm to 5:30 AM", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "CHANGE MY FIVE AM ALARM TO FIVE THIRTY AM", "normalized_seqlogical": "[IN:UPDATE_ALARM CHANGE MY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FIVE AM ] ] ] ALARM [SL:DATE_TIME TO FIVE THIRTY AM ] ]", "raw_data": {"file_id": "test_1/alarm_test/00000211.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "Change my 5 am alarm to 5:30 AM", "seqlogical": "[IN:UPDATE_ALARM Change my [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 5 am ] ] ] alarm [SL:DATE_TIME to 5 : 30 AM ] ]", "normalized_utterance": "CHANGE MY FIVE AM ALARM TO FIVE THIRTY AM", "normalized_seqlogical": "[IN:UPDATE_ALARM CHANGE MY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FIVE AM ] ] ] ALARM [SL:DATE_TIME TO FIVE THIRTY AM ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FIVE AM ] ] ] [SL:DATE_TIME TO FIVE THIRTY AM ] ]"}, "prediction": "", "function_calls": [{"name": "update_alarm", "arguments": {"alarm_name": "5am alarm", "date_time": "5:30am"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00006278.wav", "split": "test", "intent": "[IN:DELETE_ALARM Delete the alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for 4 pm ] ] ] ]", "parameters": {}, "sentence": "Delete the alarm for 4pm", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "DELETE THE ALARM FOR FOUR PM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE THE ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR FOUR PM ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00006278.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "Delete the alarm for 4pm", "seqlogical": "[IN:DELETE_ALARM Delete the alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for 4 pm ] ] ] ]", "normalized_utterance": "DELETE THE ALARM FOR FOUR PM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE THE ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR FOUR PM ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR FOUR PM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "today", "alarm_name": "4pm"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00001872.wav", "split": "test", "intent": "[IN:DELETE_ALARM Delete [SL:AMOUNT all ] alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME on Saturday ] ] ] and [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME Sunday ] ] ] ]", "parameters": {}, "sentence": "Delete all alarms on Saturday and Sunday", "domain": "alarm", "gender": "Female", "native": "No", "normalized_utterance": "DELETE ALL ALARMS ON SATURDAY AND SUNDAY", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE [SL:AMOUNT ALL ] ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME ON SATURDAY ] ] ] AND [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME SUNDAY ] ] ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00001872.wav", "domain": "alarm", "gender": "Female", "native": "No", "utterance": "Delete all alarms on Saturday and Sunday", "seqlogical": "[IN:DELETE_ALARM Delete [SL:AMOUNT all ] alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME on Saturday ] ] ] and [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME Sunday ] ] ] ]", "normalized_utterance": "DELETE ALL ALARMS ON SATURDAY AND SUNDAY", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE [SL:AMOUNT ALL ] ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME ON SATURDAY ] ] ] AND [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME SUNDAY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:AMOUNT ALL ] [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME ON SATURDAY ] ] ] [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME SUNDAY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"date_time_recurring": "Saturday and Sunday"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00007020.wav", "split": "test", "intent": "[IN:UPDATE_ALARM Change the [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 5 pm ] ] ] alarm [SL:DATE_TIME to today at 5 : 30 pm ] ]", "parameters": {}, "sentence": "Change the 5pm alarm to today at 5:30 pm", "domain": "alarm", "gender": "Female", "native": "No", "normalized_utterance": "CHANGE THE FIVE PM ALARM TO TODAY AT FIVE THIRTY PM", "normalized_seqlogical": "[IN:UPDATE_ALARM CHANGE THE [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FIVE PM ] ] ] ALARM [SL:DATE_TIME TO TODAY AT FIVE THIRTY PM ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00007020.wav", "domain": "alarm", "gender": "Female", "native": "No", "utterance": "Change the 5pm alarm to today at 5:30 pm", "seqlogical": "[IN:UPDATE_ALARM Change the [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 5 pm ] ] ] alarm [SL:DATE_TIME to today at 5 : 30 pm ] ]", "normalized_utterance": "CHANGE THE FIVE PM ALARM TO TODAY AT FIVE THIRTY PM", "normalized_seqlogical": "[IN:UPDATE_ALARM CHANGE THE [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FIVE PM ] ] ] ALARM [SL:DATE_TIME TO TODAY AT FIVE THIRTY PM ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FIVE PM ] ] ] [SL:DATE_TIME TO TODAY AT FIVE THIRTY PM ] ]"}, "prediction": "", "function_calls": [{"name": "create_alarm", "arguments": {"date_time": "today at 5:30 PM"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00001887.wav", "split": "test", "intent": "[IN:GET_ALARM What time is [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME tomorrow morning ] ] ] 's alarm ? ]", "parameters": {}, "sentence": "What time is tomorrow morning's alarm?", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT TIME IS TOMORROW MORNING 'S ALARM", "normalized_seqlogical": "[IN:GET_ALARM WHAT TIME IS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TOMORROW MORNING ] ] ] 'S ALARM ]", "raw_data": {"file_id": "test_1/alarm_test/00001887.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "What time is tomorrow morning's alarm?", "seqlogical": "[IN:GET_ALARM What time is [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME tomorrow morning ] ] ] 's alarm ? ]", "normalized_utterance": "WHAT TIME IS TOMORROW MORNING 'S ALARM", "normalized_seqlogical": "[IN:GET_ALARM WHAT TIME IS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TOMORROW MORNING ] ] ] 'S ALARM ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TOMORROW MORNING ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"date_time": "tomorrow morning"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00001862.wav", "split": "test", "intent": "[IN:UPDATE_ALARM change my [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 2 pm ] ] ] alarm [SL:DATE_TIME today to 2 pm tomorrow ] ]", "parameters": {}, "sentence": "change my 2pm alarm today to 2pm tomorrow", "domain": "alarm", "gender": "Female", "native": "No", "normalized_utterance": "CHANGE MY TWO PM ALARM TODAY TO TWO PM TOMORROW", "normalized_seqlogical": "[IN:UPDATE_ALARM CHANGE MY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TWO PM ] ] ] ALARM [SL:DATE_TIME TODAY TO TWO PM TOMORROW ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00001862.wav", "domain": "alarm", "gender": "Female", "native": "No", "utterance": "change my 2pm alarm today to 2pm tomorrow", "seqlogical": "[IN:UPDATE_ALARM change my [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 2 pm ] ] ] alarm [SL:DATE_TIME today to 2 pm tomorrow ] ]", "normalized_utterance": "CHANGE MY TWO PM ALARM TODAY TO TWO PM TOMORROW", "normalized_seqlogical": "[IN:UPDATE_ALARM CHANGE MY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TWO PM ] ] ] ALARM [SL:DATE_TIME TODAY TO TWO PM TOMORROW ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TWO PM ] ] ] [SL:DATE_TIME TODAY TO TWO PM TOMORROW ] ]"}, "prediction": "", "function_calls": [{"name": "update_alarm", "arguments": {"alarm_name": "2 PM alarm", "date_time": "tomorrow at 2 PM"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00004161.wav", "split": "test", "intent": "[IN:DELETE_ALARM Delete [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME weekend ] ] ] alarm . ]", "parameters": {}, "sentence": "Delete weekend alarm.", "domain": "alarm", "gender": "Female", "native": "No", "normalized_utterance": "DELETE WEEKEND ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME WEEKEND ] ] ] ALARM ]", "raw_data": {"file_id": "test_0/alarm_test_0/00004161.wav", "domain": "alarm", "gender": "Female", "native": "No", "utterance": "Delete weekend alarm.", "seqlogical": "[IN:DELETE_ALARM Delete [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME weekend ] ] ] alarm . ]", "normalized_utterance": "DELETE WEEKEND ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME WEEKEND ] ] ] ALARM ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME WEEKEND ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"alarm_name": "milkanalar"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00006701.wav", "split": "test", "intent": "[IN:DELETE_ALARM would you cancel [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME tonight ] ] ] 's alarm ]", "parameters": {}, "sentence": "would you cancel tonight's alarm", "domain": "alarm", "gender": "Female", "native": "Prefer not to say", "normalized_utterance": "WOULD YOU CANCEL TONIGHT 'S ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM WOULD YOU CANCEL [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TONIGHT ] ] ] 'S ALARM ]", "raw_data": {"file_id": "test_1/alarm_test/00006701.wav", "domain": "alarm", "gender": "Female", "native": "Prefer not to say", "utterance": "would you cancel tonight's alarm", "seqlogical": "[IN:DELETE_ALARM would you cancel [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME tonight ] ] ] 's alarm ]", "normalized_utterance": "WOULD YOU CANCEL TONIGHT 'S ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM WOULD YOU CANCEL [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TONIGHT ] ] ] 'S ALARM ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TONIGHT ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "tonight"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00000766.wav", "split": "test", "intent": "[IN:DELETE_ALARM cancel alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for 4 pm ] ] ] ]", "parameters": {}, "sentence": "cancel alarm for 4pm", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "CANCEL ALARM FOR FOUR PM", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR FOUR PM ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00000766.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "cancel alarm for 4pm", "seqlogical": "[IN:DELETE_ALARM cancel alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for 4 pm ] ] ] ]", "normalized_utterance": "CANCEL ALARM FOR FOUR PM", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR FOUR PM ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR FOUR PM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "today at 4pm"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00004025.wav", "split": "test", "intent": "[IN:UPDATE_ALARM Reform alarm set [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for 8 am ] ] ] ]", "parameters": {}, "sentence": "Reform alarm set for 8 am", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "REFORM ALARM SET FOR EIGHT AM", "normalized_seqlogical": "[IN:UPDATE_ALARM REFORM ALARM SET [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR EIGHT AM ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00004025.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "Reform alarm set for 8 am", "seqlogical": "[IN:UPDATE_ALARM Reform alarm set [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for 8 am ] ] ] ]", "normalized_utterance": "REFORM ALARM SET FOR EIGHT AM", "normalized_seqlogical": "[IN:UPDATE_ALARM REFORM ALARM SET [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR EIGHT AM ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR EIGHT AM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "update_alarm", "arguments": {"alarm_name": "Reform", "date_time": "8 a.m."}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00003069.wav", "split": "test", "intent": "[IN:UPDATE_ALARM Update my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME on the 11th of May from 7 am ] ] ] [SL:DATE_TIME to 4 am ] ]", "parameters": {}, "sentence": "Update my alarm on the 11th of May from 7am to 4am", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "UPDATE MY ALARM ON THE ELEVENTH OF MAY FROM SEVEN AM TO FOUR AM", "normalized_seqlogical": "[IN:UPDATE_ALARM UPDATE MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME ON THE ELEVENTH OF MAY FROM SEVEN AM ] ] ] [SL:DATE_TIME TO FOUR AM ] ]", "raw_data": {"file_id": "test_1/alarm_test/00003069.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "Update my alarm on the 11th of May from 7am to 4am", "seqlogical": "[IN:UPDATE_ALARM Update my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME on the 11th of May from 7 am ] ] ] [SL:DATE_TIME to 4 am ] ]", "normalized_utterance": "UPDATE MY ALARM ON THE ELEVENTH OF MAY FROM SEVEN AM TO FOUR AM", "normalized_seqlogical": "[IN:UPDATE_ALARM UPDATE MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME ON THE ELEVENTH OF MAY FROM SEVEN AM ] ] ] [SL:DATE_TIME TO FOUR AM ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME ON THE ELEVENTH OF MAY FROM SEVEN AM ] ] ] [SL:DATE_TIME TO FOUR AM ] ]"}, "prediction": "", "function_calls": [{"name": "update_alarm", "arguments": {"alarm_name": "alarm", "date_time": "2024-05-11T04:00:00"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00007040.wav", "split": "test", "intent": "[IN:DELETE_ALARM Delete this alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for 5 PM ] ] ] ]", "parameters": {}, "sentence": "Delete this alarm for 5PM", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "DELETE THIS ALARM FOR FIVE PM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE THIS ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR FIVE PM ] ] ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00007040.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "Delete this alarm for 5PM", "seqlogical": "[IN:DELETE_ALARM Delete this alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for 5 PM ] ] ] ]", "normalized_utterance": "DELETE THIS ALARM FOR FIVE PM", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE THIS ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR FIVE PM ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR FIVE PM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_alarm", "arguments": {"date_time": "today at 5pm"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00003107.wav", "split": "test", "intent": "[IN:UPDATE_ALARM Change my alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME from 12 pm ] ] ] [SL:DATE_TIME to 1 pm ] [SL:DURATION for next 2 weekends ] ]", "parameters": {}, "sentence": "Change my alarms from 12pm to 1 pm for next 2 weekends", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "CHANGE MY ALARMS FROM TWELVE PM TO ONE PM FOR NEXT TWO WEEKENDS", "normalized_seqlogical": "[IN:UPDATE_ALARM CHANGE MY ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FROM TWELVE PM ] ] ] [SL:DATE_TIME TO ONE PM ] [SL:DURATION FOR NEXT TWO WEEKENDS ] ]", "raw_data": {"file_id": "test_1/alarm_test/00003107.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "Change my alarms from 12pm to 1 pm for next 2 weekends", "seqlogical": "[IN:UPDATE_ALARM Change my alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME from 12 pm ] ] ] [SL:DATE_TIME to 1 pm ] [SL:DURATION for next 2 weekends ] ]", "normalized_utterance": "CHANGE MY ALARMS FROM TWELVE PM TO ONE PM FOR NEXT TWO WEEKENDS", "normalized_seqlogical": "[IN:UPDATE_ALARM CHANGE MY ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FROM TWELVE PM ] ] ] [SL:DATE_TIME TO ONE PM ] [SL:DURATION FOR NEXT TWO WEEKENDS ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FROM TWELVE PM ] ] ] [SL:DATE_TIME TO ONE PM ] [SL:DURATION FOR NEXT TWO WEEKENDS ] ]"}, "prediction": "", "function_calls": [{"name": "update_alarm", "arguments": {"alarm_name": "12pm", "date_time": "1pm", "date_time_recurring": "next two weeks"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00006015.wav", "split": "test", "intent": "[IN:GET_ALARM Show alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for next week ] ] ] ]", "parameters": {}, "sentence": "Show alarms for next week", "domain": "alarm", "gender": "Female", "native": "No", "normalized_utterance": "SHOW ALARMS FOR NEXT WEEK", "normalized_seqlogical": "[IN:GET_ALARM SHOW ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR NEXT WEEK ] ] ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00006015.wav", "domain": "alarm", "gender": "Female", "native": "No", "utterance": "Show alarms for next week", "seqlogical": "[IN:GET_ALARM Show alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for next week ] ] ] ]", "normalized_utterance": "SHOW ALARMS FOR NEXT WEEK", "normalized_seqlogical": "[IN:GET_ALARM SHOW ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR NEXT WEEK ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR NEXT WEEK ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"date_time_recurring": "next week"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00004047.wav", "split": "test", "intent": "[IN:UPDATE_ALARM Move the alarm set [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for 7 pm ] ] ] up [SL:DATE_TIME to 8 pm tonight ] ]", "parameters": {}, "sentence": "Move the alarm set for 7pm up to 8pm tonight", "domain": "alarm", "gender": "Female", "native": "No", "normalized_utterance": "MOVE THE ALARM SET FOR SEVEN PM UP TO EIGHT PM TONIGHT", "normalized_seqlogical": "[IN:UPDATE_ALARM MOVE THE ALARM SET [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR SEVEN PM ] ] ] UP [SL:DATE_TIME TO EIGHT PM TONIGHT ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00004047.wav", "domain": "alarm", "gender": "Female", "native": "No", "utterance": "Move the alarm set for 7pm up to 8pm tonight", "seqlogical": "[IN:UPDATE_ALARM Move the alarm set [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for 7 pm ] ] ] up [SL:DATE_TIME to 8 pm tonight ] ]", "normalized_utterance": "MOVE THE ALARM SET FOR SEVEN PM UP TO EIGHT PM TONIGHT", "normalized_seqlogical": "[IN:UPDATE_ALARM MOVE THE ALARM SET [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR SEVEN PM ] ] ] UP [SL:DATE_TIME TO EIGHT PM TONIGHT ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR SEVEN PM ] ] ] [SL:DATE_TIME TO EIGHT PM TONIGHT ] ]"}, "prediction": "", "function_calls": [{"name": "update_alarm", "arguments": {"alarm_name": "7 PM alarm", "date_time": "8 PM"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00002989.wav", "split": "test", "intent": "[IN:GET_ALARM Please show me [SL:AMOUNT all ] my alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for Thursday ] ] ] . ]", "parameters": {}, "sentence": "Please show me all my alarms for Thursday.", "domain": "alarm", "gender": "Female", "native": "No", "normalized_utterance": "PLEASE SHOW ME ALL MY ALARMS FOR THURSDAY", "normalized_seqlogical": "[IN:GET_ALARM PLEASE SHOW ME [SL:AMOUNT ALL ] MY ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR THURSDAY ] ] ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00002989.wav", "domain": "alarm", "gender": "Female", "native": "No", "utterance": "Please show me all my alarms for Thursday.", "seqlogical": "[IN:GET_ALARM Please show me [SL:AMOUNT all ] my alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for Thursday ] ] ] . ]", "normalized_utterance": "PLEASE SHOW ME ALL MY ALARMS FOR THURSDAY", "normalized_seqlogical": "[IN:GET_ALARM PLEASE SHOW ME [SL:AMOUNT ALL ] MY ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR THURSDAY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:AMOUNT ALL ] [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR THURSDAY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"date_time": "Thursday"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00000853.wav", "split": "test", "intent": "[IN:GET_ALARM show me the alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for next week ] ] ] ]", "parameters": {}, "sentence": "show me the alarms for next week", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "SHOW ME THE ALARMS FOR NEXT WEEK", "normalized_seqlogical": "[IN:GET_ALARM SHOW ME THE ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR NEXT WEEK ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00000853.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "show me the alarms for next week", "seqlogical": "[IN:GET_ALARM show me the alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for next week ] ] ] ]", "normalized_utterance": "SHOW ME THE ALARMS FOR NEXT WEEK", "normalized_seqlogical": "[IN:GET_ALARM SHOW ME THE ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR NEXT WEEK ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR NEXT WEEK ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"date_time_recurring": "next week"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00001897.wav", "split": "test", "intent": "[IN:DELETE_ALARM Cancel [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME weekend ] ] ] alarms ]", "parameters": {}, "sentence": "Cancel weekend alarms", "domain": "alarm", "gender": "Female", "native": "No", "normalized_utterance": "CANCEL WEEKEND ALARMS", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME WEEKEND ] ] ] ALARMS ]", "raw_data": {"file_id": "test_0/alarm_test_0/00001897.wav", "domain": "alarm", "gender": "Female", "native": "No", "utterance": "Cancel weekend alarms", "seqlogical": "[IN:DELETE_ALARM Cancel [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME weekend ] ] ] alarms ]", "normalized_utterance": "CANCEL WEEKEND ALARMS", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME WEEKEND ] ] ] ALARMS ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME WEEKEND ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"period": "weekend"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00001896.wav", "split": "test", "intent": "[IN:SILENCE_ALARM No alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for Monday ] ] ] ]", "parameters": {}, "sentence": "No alarm for Monday", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "NO ALARM FOR MONDAY", "normalized_seqlogical": "[IN:SILENCE_ALARM NO ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR MONDAY ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00001896.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "No alarm for Monday", "seqlogical": "[IN:SILENCE_ALARM No alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for Monday ] ] ] ]", "normalized_utterance": "NO ALARM FOR MONDAY", "normalized_seqlogical": "[IN:SILENCE_ALARM NO ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR MONDAY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:SILENCE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR MONDAY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "Monday"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00001095.wav", "split": "test", "intent": "[IN:DELETE_ALARM cancel [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 1 hour ] ] ] alarm ]", "parameters": {}, "sentence": "cancel 1 hour alarm", "domain": "alarm", "gender": "Female", "native": "No", "normalized_utterance": "CANCEL ONE HOUR ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME ONE HOUR ] ] ] ALARM ]", "raw_data": {"file_id": "test_0/alarm_test_0/00001095.wav", "domain": "alarm", "gender": "Female", "native": "No", "utterance": "cancel 1 hour alarm", "seqlogical": "[IN:DELETE_ALARM cancel [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 1 hour ] ] ] alarm ]", "normalized_utterance": "CANCEL ONE HOUR ALARM", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME ONE HOUR ] ] ] ALARM ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME ONE HOUR ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"duration": "one hour"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00002079.wav", "split": "test", "intent": "[IN:DELETE_ALARM delete the [SL:ORDINAL last ] alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for today ] ] ] ]", "parameters": {}, "sentence": "delete the last alarm for today", "domain": "alarm", "gender": "Female", "native": "Prefer not to say", "normalized_utterance": "DELETE THE LAST ALARM FOR TODAY", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE THE [SL:ORDINAL LAST ] ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TODAY ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00002079.wav", "domain": "alarm", "gender": "Female", "native": "Prefer not to say", "utterance": "delete the last alarm for today", "seqlogical": "[IN:DELETE_ALARM delete the [SL:ORDINAL last ] alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for today ] ] ] ]", "normalized_utterance": "DELETE THE LAST ALARM FOR TODAY", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE THE [SL:ORDINAL LAST ] ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TODAY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ORDINAL LAST ] [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TODAY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "today", "ordinal": "last"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00000720.wav", "split": "test", "intent": "[IN:GET_ALARM Please show [SL:AMOUNT all ] alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for friday ] ] ] ]", "parameters": {}, "sentence": "Please show all alarms for friday", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "PLEASE SHOW ALL ALARMS FOR FRIDAY", "normalized_seqlogical": "[IN:GET_ALARM PLEASE SHOW [SL:AMOUNT ALL ] ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR FRIDAY ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00000720.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "Please show all alarms for friday", "seqlogical": "[IN:GET_ALARM Please show [SL:AMOUNT all ] alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for friday ] ] ] ]", "normalized_utterance": "PLEASE SHOW ALL ALARMS FOR FRIDAY", "normalized_seqlogical": "[IN:GET_ALARM PLEASE SHOW [SL:AMOUNT ALL ] ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR FRIDAY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:AMOUNT ALL ] [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR FRIDAY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"date_time": "Friday"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00002942.wav", "split": "test", "intent": "[IN:DELETE_ALARM Cancel my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME at 6 pm today ] ] ] ]", "parameters": {}, "sentence": "Cancel my alarm at 6pm today", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "CANCEL MY ALARM AT SIX PM TODAY", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME AT SIX PM TODAY ] ] ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00002942.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "Cancel my alarm at 6pm today", "seqlogical": "[IN:DELETE_ALARM Cancel my alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME at 6 pm today ] ] ] ]", "normalized_utterance": "CANCEL MY ALARM AT SIX PM TODAY", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL MY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME AT SIX PM TODAY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME AT SIX PM TODAY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "today", "alarm_name": "6 PM"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00000850.wav", "split": "test", "intent": "[IN:DELETE_ALARM Cancel [SL:AMOUNT all ] my alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for today ] ] ] ]", "parameters": {}, "sentence": "Cancel all my alarms for today", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "CANCEL ALL MY ALARMS FOR TODAY", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL [SL:AMOUNT ALL ] MY ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TODAY ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00000850.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "Cancel all my alarms for today", "seqlogical": "[IN:DELETE_ALARM Cancel [SL:AMOUNT all ] my alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for today ] ] ] ]", "normalized_utterance": "CANCEL ALL MY ALARMS FOR TODAY", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL [SL:AMOUNT ALL ] MY ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TODAY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:AMOUNT ALL ] [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TODAY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "today"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00001998.wav", "split": "test", "intent": "[IN:UPDATE_ALARM change [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 9 am ] ] ] alarm [SL:DATE_TIME to 8 am ] ]", "parameters": {}, "sentence": "change 9am alarm to 8am", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "CHANGE NINE AM ALARM TO EIGHT AM", "normalized_seqlogical": "[IN:UPDATE_ALARM CHANGE [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME NINE AM ] ] ] ALARM [SL:DATE_TIME TO EIGHT AM ] ]", "raw_data": {"file_id": "test_1/alarm_test/00001998.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "change 9am alarm to 8am", "seqlogical": "[IN:UPDATE_ALARM change [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 9 am ] ] ] alarm [SL:DATE_TIME to 8 am ] ]", "normalized_utterance": "CHANGE NINE AM ALARM TO EIGHT AM", "normalized_seqlogical": "[IN:UPDATE_ALARM CHANGE [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME NINE AM ] ] ] ALARM [SL:DATE_TIME TO EIGHT AM ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME NINE AM ] ] ] [SL:DATE_TIME TO EIGHT AM ] ]"}, "prediction": "", "function_calls": [{"name": "update_alarm", "arguments": {"alarm_name": "9am alarm", "date_time": "8am"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00001014.wav", "split": "test", "intent": "[IN:DELETE_ALARM Cancel the alarm set [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tomorrow at five a.m ] ] ] . ]", "parameters": {}, "sentence": "Cancel the alarm set for tomorrow at five a.m.", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "CANCEL THE ALARM SET FOR TOMORROW AT FIVE AM", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL THE ALARM SET [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW AT FIVE AM ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00001014.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "Cancel the alarm set for tomorrow at five a.m.", "seqlogical": "[IN:DELETE_ALARM Cancel the alarm set [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tomorrow at five a.m ] ] ] . ]", "normalized_utterance": "CANCEL THE ALARM SET FOR TOMORROW AT FIVE AM", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL THE ALARM SET [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW AT FIVE AM ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW AT FIVE AM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "tomorrow at 5 AM"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00002112.wav", "split": "test", "intent": "[IN:DELETE_ALARM cancel alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for friday ] ] ] ]", "parameters": {}, "sentence": "cancel alarm for friday", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "CANCEL ALARM FOR FRIDAY", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR FRIDAY ] ] ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00002112.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "cancel alarm for friday", "seqlogical": "[IN:DELETE_ALARM cancel alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for friday ] ] ] ]", "normalized_utterance": "CANCEL ALARM FOR FRIDAY", "normalized_seqlogical": "[IN:DELETE_ALARM CANCEL ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR FRIDAY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR FRIDAY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "Friday"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00002543.wav", "split": "test", "intent": "[IN:DELETE_ALARM Please cancel [SL:AMOUNT all ] alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for today ] ] ] ]", "parameters": {}, "sentence": "Please cancel all alarms for today", "domain": "alarm", "gender": "Female", "native": "No", "normalized_utterance": "PLEASE CANCEL ALL ALARMS FOR TODAY", "normalized_seqlogical": "[IN:DELETE_ALARM PLEASE CANCEL [SL:AMOUNT ALL ] ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TODAY ] ] ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00002543.wav", "domain": "alarm", "gender": "Female", "native": "No", "utterance": "Please cancel all alarms for today", "seqlogical": "[IN:DELETE_ALARM Please cancel [SL:AMOUNT all ] alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for today ] ] ] ]", "normalized_utterance": "PLEASE CANCEL ALL ALARMS FOR TODAY", "normalized_seqlogical": "[IN:DELETE_ALARM PLEASE CANCEL [SL:AMOUNT ALL ] ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TODAY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:AMOUNT ALL ] [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TODAY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time": "today"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00001520.wav", "split": "test", "intent": "[IN:GET_ALARM show me [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME the morning ] ] ] alarms ]", "parameters": {}, "sentence": "show me the morning alarms", "domain": "alarm", "gender": "Female", "native": "No", "normalized_utterance": "SHOW ME THE MORNING ALARMS", "normalized_seqlogical": "[IN:GET_ALARM SHOW ME [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME THE MORNING ] ] ] ALARMS ]", "raw_data": {"file_id": "test_0/alarm_test_0/00001520.wav", "domain": "alarm", "gender": "Female", "native": "No", "utterance": "show me the morning alarms", "seqlogical": "[IN:GET_ALARM show me [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME the morning ] ] ] alarms ]", "normalized_utterance": "SHOW ME THE MORNING ALARMS", "normalized_seqlogical": "[IN:GET_ALARM SHOW ME [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME THE MORNING ] ] ] ALARMS ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME THE MORNING ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"alarm_name": "Marvin"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00004012.wav", "split": "test", "intent": "[IN:UPDATE_ALARM Could you modify my [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 4 pm ] ] ] alarm [SL:DATE_TIME to 7 pm ] , please ? ]", "parameters": {}, "sentence": "Could you modify my 4 pm alarm to 7 pm, please?", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "COULD YOU MODIFY MY FOUR PM ALARM TO SEVEN PM PLEASE", "normalized_seqlogical": "[IN:UPDATE_ALARM COULD YOU MODIFY MY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOUR PM ] ] ] ALARM [SL:DATE_TIME TO SEVEN PM ] PLEASE ]", "raw_data": {"file_id": "test_1/alarm_test/00004012.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "Could you modify my 4 pm alarm to 7 pm, please?", "seqlogical": "[IN:UPDATE_ALARM Could you modify my [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME 4 pm ] ] ] alarm [SL:DATE_TIME to 7 pm ] , please ? ]", "normalized_utterance": "COULD YOU MODIFY MY FOUR PM ALARM TO SEVEN PM PLEASE", "normalized_seqlogical": "[IN:UPDATE_ALARM COULD YOU MODIFY MY [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOUR PM ] ] ] ALARM [SL:DATE_TIME TO SEVEN PM ] PLEASE ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOUR PM ] ] ] [SL:DATE_TIME TO SEVEN PM ] ]"}, "prediction": "", "function_calls": [{"name": "update_alarm", "arguments": {"alarm_name": "4 PM alarm", "date_time": "7 PM"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00001469.wav", "split": "test", "intent": "[IN:SILENCE_ALARM Turn off [SL:AMOUNT all ] my alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for this week ] ] ] only ]", "parameters": {}, "sentence": "Turn off all my alarms for this week only", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "TURN OFF ALL MY ALARMS FOR THIS WEEK ONLY", "normalized_seqlogical": "[IN:SILENCE_ALARM TURN OFF [SL:AMOUNT ALL ] MY ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR THIS WEEK ] ] ] ONLY ]", "raw_data": {"file_id": "test_1/alarm_test/00001469.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "Turn off all my alarms for this week only", "seqlogical": "[IN:SILENCE_ALARM Turn off [SL:AMOUNT all ] my alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for this week ] ] ] only ]", "normalized_utterance": "TURN OFF ALL MY ALARMS FOR THIS WEEK ONLY", "normalized_seqlogical": "[IN:SILENCE_ALARM TURN OFF [SL:AMOUNT ALL ] MY ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR THIS WEEK ] ] ] ONLY ]", "decoupled_normalized_seqlogical": "[IN:SILENCE_ALARM [SL:AMOUNT ALL ] [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR THIS WEEK ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time_recurring": "this week"}}]}
{"filename": "stop_data/stop/test_0/alarm_test/00002653.wav", "split": "test", "intent": "[IN:GET_ALARM WHEN IS THE ALARM SET [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW ] ] ] ]", "parameters": {}, "sentence": "WHEN IS THE ALARM SET FOR TOMORROW", "domain": "alarm", "gender": "Female", "native": "No", "normalized_utterance": "WHEN IS THE ALARM SET FOR TOMORROW", "normalized_seqlogical": "[IN:GET_ALARM WHEN IS THE ALARM SET [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW ] ] ] ]", "raw_data": {"file_id": "test_0/alarm_test_0/00002653.wav", "domain": "alarm", "gender": "Female", "native": "No", "utterance": "WHEN IS THE ALARM SET FOR TOMORROW", "seqlogical": "[IN:GET_ALARM WHEN IS THE ALARM SET [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW ] ] ] ]", "normalized_utterance": "WHEN IS THE ALARM SET FOR TOMORROW", "normalized_seqlogical": "[IN:GET_ALARM WHEN IS THE ALARM SET [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"date_time": "tomorrow"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00002879.wav", "split": "test", "intent": "[IN:DELETE_ALARM Delete [SL:AMOUNT all ] my [SL:PERIOD daily ] alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for 12 noon ] ] ] ]", "parameters": {}, "sentence": "Delete all my daily alarms for 12 noon", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "DELETE ALL MY DAILY ALARMS FOR TWELVE NOON", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE [SL:AMOUNT ALL ] MY [SL:PERIOD DAILY ] ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TWELVE NOON ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00002879.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "Delete all my daily alarms for 12 noon", "seqlogical": "[IN:DELETE_ALARM Delete [SL:AMOUNT all ] my [SL:PERIOD daily ] alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for 12 noon ] ] ] ]", "normalized_utterance": "DELETE ALL MY DAILY ALARMS FOR TWELVE NOON", "normalized_seqlogical": "[IN:DELETE_ALARM DELETE [SL:AMOUNT ALL ] MY [SL:PERIOD DAILY ] ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TWELVE NOON ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_ALARM [SL:AMOUNT ALL ] [SL:PERIOD DAILY ] [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TWELVE NOON ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_alarm", "arguments": {"date_time_recurring": "daily", "date_time": "12:00"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00006456.wav", "split": "test", "intent": "[IN:GET_ALARM Do I have an alarm set [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tonight ] ] ] ? ]", "parameters": {}, "sentence": "Do I have an alarm set for tonight?", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "DO I HAVE AN ALARM SET FOR TONIGHT", "normalized_seqlogical": "[IN:GET_ALARM DO I HAVE AN ALARM SET [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TONIGHT ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00006456.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "Do I have an alarm set for tonight?", "seqlogical": "[IN:GET_ALARM Do I have an alarm set [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for tonight ] ] ] ? ]", "normalized_utterance": "DO I HAVE AN ALARM SET FOR TONIGHT", "normalized_seqlogical": "[IN:GET_ALARM DO I HAVE AN ALARM SET [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TONIGHT ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TONIGHT ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"date_time": "tonight"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00003050.wav", "split": "test", "intent": "[IN:GET_ALARM Is there any alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for Tuesday ] ] ] ? ]", "parameters": {}, "sentence": "Is there any alarm for Tuesday?", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "IS THERE ANY ALARM FOR TUESDAY", "normalized_seqlogical": "[IN:GET_ALARM IS THERE ANY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TUESDAY ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00003050.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "Is there any alarm for Tuesday?", "seqlogical": "[IN:GET_ALARM Is there any alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for Tuesday ] ] ] ? ]", "normalized_utterance": "IS THERE ANY ALARM FOR TUESDAY", "normalized_seqlogical": "[IN:GET_ALARM IS THERE ANY ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TUESDAY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TUESDAY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"date_time_recurring": "Tuesday"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00006963.wav", "split": "test", "intent": "[IN:UPDATE_ALARM I want to change the alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME today ] ] ] [SL:DATE_TIME to 2 pm ] ]", "parameters": {}, "sentence": "I want to change the alarm today to 2 pm", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "I WANT TO CHANGE THE ALARM TODAY TO TWO PM", "normalized_seqlogical": "[IN:UPDATE_ALARM I WANT TO CHANGE THE ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TODAY ] ] ] [SL:DATE_TIME TO TWO PM ] ]", "raw_data": {"file_id": "test_1/alarm_test/00006963.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "I want to change the alarm today to 2 pm", "seqlogical": "[IN:UPDATE_ALARM I want to change the alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME today ] ] ] [SL:DATE_TIME to 2 pm ] ]", "normalized_utterance": "I WANT TO CHANGE THE ALARM TODAY TO TWO PM", "normalized_seqlogical": "[IN:UPDATE_ALARM I WANT TO CHANGE THE ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TODAY ] ] ] [SL:DATE_TIME TO TWO PM ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME TODAY ] ] ] [SL:DATE_TIME TO TWO PM ] ]"}, "prediction": "", "function_calls": [{"name": "update_alarm", "arguments": {"alarm_name": "today's alarm", "date_time": "2 PM"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00003126.wav", "split": "test", "intent": "[IN:UPDATE_ALARM Change my [SL:ORDINAL next ] alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME from 7 am ] ] ] [SL:DATE_TIME to 7 pm ] ]", "parameters": {}, "sentence": "Change my next alarm from 7am to 7pm", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "CHANGE MY NEXT ALARM FROM SEVEN AM TO SEVEN PM", "normalized_seqlogical": "[IN:UPDATE_ALARM CHANGE MY [SL:ORDINAL NEXT ] ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FROM SEVEN AM ] ] ] [SL:DATE_TIME TO SEVEN PM ] ]", "raw_data": {"file_id": "test_1/alarm_test/00003126.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "Change my next alarm from 7am to 7pm", "seqlogical": "[IN:UPDATE_ALARM Change my [SL:ORDINAL next ] alarm [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME from 7 am ] ] ] [SL:DATE_TIME to 7 pm ] ]", "normalized_utterance": "CHANGE MY NEXT ALARM FROM SEVEN AM TO SEVEN PM", "normalized_seqlogical": "[IN:UPDATE_ALARM CHANGE MY [SL:ORDINAL NEXT ] ALARM [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FROM SEVEN AM ] ] ] [SL:DATE_TIME TO SEVEN PM ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_ALARM [SL:ORDINAL NEXT ] [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FROM SEVEN AM ] ] ] [SL:DATE_TIME TO SEVEN PM ] ]"}, "prediction": "It seems like you want to change your next alarm from 7am to 7pm. Let me update that for you.", "function_calls": [{"name": "get_alarm", "arguments": {"date_time": "tomorrow"}}, {"name": "update_alarm", "arguments": {"alarm_name": "next alarm", "date_time": "tomorrow at 7pm"}}]}
{"filename": "stop_data/stop/test_1/alarm_test/00006677.wav", "split": "test", "intent": "[IN:GET_ALARM Show [SL:AMOUNT all ] alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for today ] ] ] ]", "parameters": {}, "sentence": "Show all alarms for today", "domain": "alarm", "gender": "Female", "native": "Yes", "normalized_utterance": "SHOW ALL ALARMS FOR TODAY", "normalized_seqlogical": "[IN:GET_ALARM SHOW [SL:AMOUNT ALL ] ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TODAY ] ] ] ]", "raw_data": {"file_id": "test_1/alarm_test/00006677.wav", "domain": "alarm", "gender": "Female", "native": "Yes", "utterance": "Show all alarms for today", "seqlogical": "[IN:GET_ALARM Show [SL:AMOUNT all ] alarms [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME for today ] ] ] ]", "normalized_utterance": "SHOW ALL ALARMS FOR TODAY", "normalized_seqlogical": "[IN:GET_ALARM SHOW [SL:AMOUNT ALL ] ALARMS [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TODAY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ALARM [SL:AMOUNT ALL ] [SL:ALARM_NAME [IN:GET_TIME [SL:DATE_TIME FOR TODAY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_alarm", "arguments": {"date_time": "today"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00000209.wav", "split": "test", "intent": "[IN:GET_DIRECTIONS directions to [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT sally ] 's house [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS next to ] [SL:LOCATION [IN:GET_LOCATION the [SL:LOCATION_MODIFIER local ] [SL:CATEGORY_LOCATION farmers market ] ] ] ] ] ] ] ]", "parameters": {}, "sentence": "directions to sally's house next to the local farmers market", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "DIRECTIONS TO SALLY 'S HOUSE NEXT TO THE LOCAL FARMERS MARKET", "normalized_seqlogical": "[IN:GET_DIRECTIONS DIRECTIONS TO [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT SALLY ] 'S HOUSE [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEXT TO ] [SL:LOCATION [IN:GET_LOCATION THE [SL:LOCATION_MODIFIER LOCAL ] [SL:CATEGORY_LOCATION FARMERS MARKET ] ] ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00000209.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "directions to sally's house next to the local farmers market", "seqlogical": "[IN:GET_DIRECTIONS directions to [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT sally ] 's house [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS next to ] [SL:LOCATION [IN:GET_LOCATION the [SL:LOCATION_MODIFIER local ] [SL:CATEGORY_LOCATION farmers market ] ] ] ] ] ] ] ]", "normalized_utterance": "DIRECTIONS TO SALLY 'S HOUSE NEXT TO THE LOCAL FARMERS MARKET", "normalized_seqlogical": "[IN:GET_DIRECTIONS DIRECTIONS TO [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT SALLY ] 'S HOUSE [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEXT TO ] [SL:LOCATION [IN:GET_LOCATION THE [SL:LOCATION_MODIFIER LOCAL ] [SL:CATEGORY_LOCATION FARMERS MARKET ] ] ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_DIRECTIONS [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT SALLY ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEXT TO ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER LOCAL ] [SL:CATEGORY_LOCATION FARMERS MARKET ] ] ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "local farmer's market"}}, {"name": "get_directions", "arguments": {"destination": "Sally's house", "location": "local farmer's market"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00002532.wav", "split": "test", "intent": "[IN:GET_DIRECTIONS Get the [SL:METHOD_TRAVEL driving ] directions to [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the waterpark ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT my ] house ] ] ] ] ] ] . ]", "parameters": {}, "sentence": "Get the driving directions to the waterpark near my house.", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "GET THE DRIVING DIRECTIONS TO THE WATERPARK NEAR MY HOUSE", "normalized_seqlogical": "[IN:GET_DIRECTIONS GET THE [SL:METHOD_TRAVEL DRIVING ] DIRECTIONS TO [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE WATERPARK ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT MY ] HOUSE ] ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00002532.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "Get the driving directions to the waterpark near my house.", "seqlogical": "[IN:GET_DIRECTIONS Get the [SL:METHOD_TRAVEL driving ] directions to [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the waterpark ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT my ] house ] ] ] ] ] ] . ]", "normalized_utterance": "GET THE DRIVING DIRECTIONS TO THE WATERPARK NEAR MY HOUSE", "normalized_seqlogical": "[IN:GET_DIRECTIONS GET THE [SL:METHOD_TRAVEL DRIVING ] DIRECTIONS TO [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE WATERPARK ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT MY ] HOUSE ] ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_DIRECTIONS [SL:METHOD_TRAVEL DRIVING ] [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE WATERPARK ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT MY ] ] ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "waterpark", "location_user": "my house"}}, {"name": "get_directions", "arguments": {"destination": "waterpark", "location": "my house"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00002532.wav", "split": "test", "intent": "[IN:GET_DIRECTIONS Get the [SL:METHOD_TRAVEL driving ] directions to [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the waterpark ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT my ] house ] ] ] ] ] ] . ]", "parameters": {}, "sentence": "Get the driving directions to the waterpark near my house.", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "GET THE DRIVING DIRECTIONS TO THE WATERPARK NEAR MY HOUSE", "normalized_seqlogical": "[IN:GET_DIRECTIONS GET THE [SL:METHOD_TRAVEL DRIVING ] DIRECTIONS TO [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE WATERPARK ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT MY ] HOUSE ] ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00002532.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "Get the driving directions to the waterpark near my house.", "seqlogical": "[IN:GET_DIRECTIONS Get the [SL:METHOD_TRAVEL driving ] directions to [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the waterpark ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT my ] house ] ] ] ] ] ] . ]", "normalized_utterance": "GET THE DRIVING DIRECTIONS TO THE WATERPARK NEAR MY HOUSE", "normalized_seqlogical": "[IN:GET_DIRECTIONS GET THE [SL:METHOD_TRAVEL DRIVING ] DIRECTIONS TO [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE WATERPARK ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT MY ] HOUSE ] ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_DIRECTIONS [SL:METHOD_TRAVEL DRIVING ] [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE WATERPARK ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT MY ] ] ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "water park", "location_user": "my house"}}, {"name": "get_directions", "arguments": {"destination": "water park", "source": "my house"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00002624.wav", "split": "test", "intent": "[IN:GET_DIRECTIONS Get me directions to [SL:DESTINATION [IN:GET_LOCATION the [SL:LOCATION_MODIFIER closest ] [SL:POINT_ON_MAP Walgreen 's ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT my ] home ] ] ] ] ] ] . ]", "parameters": {}, "sentence": "Get me directions to the closest Walgreen's near my home.", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "GET ME DIRECTIONS TO THE CLOSEST WALGREEN 'S NEAR MY HOME", "normalized_seqlogical": "[IN:GET_DIRECTIONS GET ME DIRECTIONS TO [SL:DESTINATION [IN:GET_LOCATION THE [SL:LOCATION_MODIFIER CLOSEST ] [SL:POINT_ON_MAP WALGREEN 'S ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT MY ] HOME ] ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00002624.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "Get me directions to the closest Walgreen's near my home.", "seqlogical": "[IN:GET_DIRECTIONS Get me directions to [SL:DESTINATION [IN:GET_LOCATION the [SL:LOCATION_MODIFIER closest ] [SL:POINT_ON_MAP Walgreen 's ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT my ] home ] ] ] ] ] ] . ]", "normalized_utterance": "GET ME DIRECTIONS TO THE CLOSEST WALGREEN 'S NEAR MY HOME", "normalized_seqlogical": "[IN:GET_DIRECTIONS GET ME DIRECTIONS TO [SL:DESTINATION [IN:GET_LOCATION THE [SL:LOCATION_MODIFIER CLOSEST ] [SL:POINT_ON_MAP WALGREEN 'S ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT MY ] HOME ] ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_DIRECTIONS [SL:DESTINATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER CLOSEST ] [SL:POINT_ON_MAP WALGREEN 'S ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT MY ] ] ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "closest Walgreens", "location_user": "my home"}}, {"name": "get_directions", "arguments": {"destination": "Walgreens", "location": "my home"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00001360.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC traffic [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS by ] [SL:LOCATION [IN:GET_LOCATION_WORK [SL:CONTACT my ] office ] ] ] ] ] ] ]", "parameters": {}, "sentence": "traffic by my office", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "TRAFFIC BY MY OFFICE", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS BY ] [SL:LOCATION [IN:GET_LOCATION_WORK [SL:CONTACT MY ] OFFICE ] ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00001360.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "traffic by my office", "seqlogical": "[IN:GET_INFO_TRAFFIC traffic [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS by ] [SL:LOCATION [IN:GET_LOCATION_WORK [SL:CONTACT my ] office ] ] ] ] ] ] ]", "normalized_utterance": "TRAFFIC BY MY OFFICE", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS BY ] [SL:LOCATION [IN:GET_LOCATION_WORK [SL:CONTACT MY ] OFFICE ] ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS BY ] [SL:LOCATION [IN:GET_LOCATION_WORK [SL:CONTACT MY ] ] ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "my office"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00002027.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC traffic [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION [IN:GET_LOCATION_WORK work ] ] ] ] ] ] ]", "parameters": {}, "sentence": "traffic near work", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "TRAFFIC NEAR WORK", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_WORK WORK ] ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00002027.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "traffic near work", "seqlogical": "[IN:GET_INFO_TRAFFIC traffic [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION [IN:GET_LOCATION_WORK work ] ] ] ] ] ] ]", "normalized_utterance": "TRAFFIC NEAR WORK", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_WORK WORK ] ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_WORK ] ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "work"}}, {"name": "get_info_traffic", "arguments": {"location": "work"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00002027.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC traffic [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION [IN:GET_LOCATION_WORK work ] ] ] ] ] ] ]", "parameters": {}, "sentence": "traffic near work", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "TRAFFIC NEAR WORK", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_WORK WORK ] ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00002027.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "traffic near work", "seqlogical": "[IN:GET_INFO_TRAFFIC traffic [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION [IN:GET_LOCATION_WORK work ] ] ] ] ] ] ]", "normalized_utterance": "TRAFFIC NEAR WORK", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_WORK WORK ] ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_WORK ] ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "work"}}, {"name": "get_info_traffic", "arguments": {"location": "work"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00004313.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC Will there be road closures [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the Farmers Market ] in [SL:LOCATION Everett ] ] ] ] ] ? ]", "parameters": {}, "sentence": "Will there be road closures around the Farmers Market in Everett?", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "WILL THERE BE ROAD CLOSURES AROUND THE FARMERS MARKET IN EVERETT", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC WILL THERE BE ROAD CLOSURES [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE FARMERS MARKET ] IN [SL:LOCATION EVERETT ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00004313.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "Will there be road closures around the Farmers Market in Everett?", "seqlogical": "[IN:GET_INFO_TRAFFIC Will there be road closures [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the Farmers Market ] in [SL:LOCATION Everett ] ] ] ] ] ? ]", "normalized_utterance": "WILL THERE BE ROAD CLOSURES AROUND THE FARMERS MARKET IN EVERETT", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC WILL THERE BE ROAD CLOSURES [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE FARMERS MARKET ] IN [SL:LOCATION EVERETT ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE FARMERS MARKET ] [SL:LOCATION EVERETT ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "Everett", "path": "around the farmers market"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00003391.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC Are there any car accidents [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the Flambear Parade ] ] ] ] ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS off of ] [SL:LOCATION Houston street ] ] ] ? ]", "parameters": {}, "sentence": "Are there any car accidents near the Flambear Parade off of Houston street?", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "ARE THERE ANY CAR ACCIDENTS NEAR THE FLAMBEAR PARADE OFF OF HOUSTON STREET", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC ARE THERE ANY CAR ACCIDENTS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE FLAMBEAR PARADE ] ] ] ] ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS OFF OF ] [SL:LOCATION HOUSTON STREET ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00003391.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "Are there any car accidents near the Flambear Parade off of Houston street?", "seqlogical": "[IN:GET_INFO_TRAFFIC Are there any car accidents [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the Flambear Parade ] ] ] ] ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS off of ] [SL:LOCATION Houston street ] ] ] ? ]", "normalized_utterance": "ARE THERE ANY CAR ACCIDENTS NEAR THE FLAMBEAR PARADE OFF OF HOUSTON STREET", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC ARE THERE ANY CAR ACCIDENTS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE FLAMBEAR PARADE ] ] ] ] ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS OFF OF ] [SL:LOCATION HOUSTON STREET ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE FLAMBEAR PARADE ] ] ] ] ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS OFF OF ] [SL:LOCATION HOUSTON STREET ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "Houston Street"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00003973.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC Is there heavy traffic [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:POINT_ON_MAP the Staples Center ] ] ] ] ] ]", "parameters": {}, "sentence": "Is there heavy traffic around the Staples Center", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "IS THERE HEAVY TRAFFIC AROUND THE STAPLES CENTER", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC IS THERE HEAVY TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:POINT_ON_MAP THE STAPLES CENTER ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00003973.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "Is there heavy traffic around the Staples Center", "seqlogical": "[IN:GET_INFO_TRAFFIC Is there heavy traffic [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:POINT_ON_MAP the Staples Center ] ] ] ] ] ]", "normalized_utterance": "IS THERE HEAVY TRAFFIC AROUND THE STAPLES CENTER", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC IS THERE HEAVY TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:POINT_ON_MAP THE STAPLES CENTER ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:POINT_ON_MAP THE STAPLES CENTER ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "Staples Center"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00004313.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC Will there be road closures [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the Farmers Market ] in [SL:LOCATION Everett ] ] ] ] ] ? ]", "parameters": {}, "sentence": "Will there be road closures around the Farmers Market in Everett?", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "WILL THERE BE ROAD CLOSURES AROUND THE FARMERS MARKET IN EVERETT", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC WILL THERE BE ROAD CLOSURES [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE FARMERS MARKET ] IN [SL:LOCATION EVERETT ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00004313.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "Will there be road closures around the Farmers Market in Everett?", "seqlogical": "[IN:GET_INFO_TRAFFIC Will there be road closures [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the Farmers Market ] in [SL:LOCATION Everett ] ] ] ] ] ? ]", "normalized_utterance": "WILL THERE BE ROAD CLOSURES AROUND THE FARMERS MARKET IN EVERETT", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC WILL THERE BE ROAD CLOSURES [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE FARMERS MARKET ] IN [SL:LOCATION EVERETT ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE FARMERS MARKET ] [SL:LOCATION EVERETT ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "Everett", "path": "around the farmers market"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00004443.wav", "split": "test", "intent": "[IN:GET_DIRECTIONS Whats the [SL:METHOD_TRAVEL driving ] directions to [SL:DESTINATION [IN:GET_LOCATION [SL:POINT_ON_MAP the Walmart ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION downtown ] ] ] ] ] ]", "parameters": {}, "sentence": "Whats the driving directions to the Walmart near downtown", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "WHATS THE DRIVING DIRECTIONS TO THE WALMART NEAR DOWNTOWN", "normalized_seqlogical": "[IN:GET_DIRECTIONS WHATS THE [SL:METHOD_TRAVEL DRIVING ] DIRECTIONS TO [SL:DESTINATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE WALMART ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION DOWNTOWN ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00004443.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "Whats the driving directions to the Walmart near downtown", "seqlogical": "[IN:GET_DIRECTIONS Whats the [SL:METHOD_TRAVEL driving ] directions to [SL:DESTINATION [IN:GET_LOCATION [SL:POINT_ON_MAP the Walmart ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION downtown ] ] ] ] ] ]", "normalized_utterance": "WHATS THE DRIVING DIRECTIONS TO THE WALMART NEAR DOWNTOWN", "normalized_seqlogical": "[IN:GET_DIRECTIONS WHATS THE [SL:METHOD_TRAVEL DRIVING ] DIRECTIONS TO [SL:DESTINATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE WALMART ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION DOWNTOWN ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_DIRECTIONS [SL:METHOD_TRAVEL DRIVING ] [SL:DESTINATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE WALMART ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION DOWNTOWN ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "Walmart", "location_user": "downtown"}}, {"name": "get_directions", "arguments": {"destination": "Walmart near downtown"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00005627.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_DURATION How long will it take to [SL:METHOD_TRAVEL drive ] from [SL:SOURCE [IN:GET_LOCATION_HOME [SL:TYPE_RELATION Mom ] 's house ] ] to [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT JazzFest ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP The Landing ] [SL:LOCATION_MODIFIER downtown ] ] ] ] ] ? ]", "parameters": {}, "sentence": "How long will it take to drive from Mom's house to JazzFest at The Landing downtown?", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "HOW LONG WILL IT TAKE TO DRIVE FROM MOM 'S HOUSE TO JAZZFEST AT THE LANDING DOWNTOWN", "normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION HOW LONG WILL IT TAKE TO [SL:METHOD_TRAVEL DRIVE ] FROM [SL:SOURCE [IN:GET_LOCATION_HOME [SL:TYPE_RELATION MOM ] 'S HOUSE ] ] TO [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT JAZZFEST ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE LANDING ] [SL:LOCATION_MODIFIER DOWNTOWN ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00005627.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "How long will it take to drive from Mom's house to JazzFest at The Landing downtown?", "seqlogical": "[IN:GET_ESTIMATED_DURATION How long will it take to [SL:METHOD_TRAVEL drive ] from [SL:SOURCE [IN:GET_LOCATION_HOME [SL:TYPE_RELATION Mom ] 's house ] ] to [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT JazzFest ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP The Landing ] [SL:LOCATION_MODIFIER downtown ] ] ] ] ] ? ]", "normalized_utterance": "HOW LONG WILL IT TAKE TO DRIVE FROM MOM 'S HOUSE TO JAZZFEST AT THE LANDING DOWNTOWN", "normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION HOW LONG WILL IT TAKE TO [SL:METHOD_TRAVEL DRIVE ] FROM [SL:SOURCE [IN:GET_LOCATION_HOME [SL:TYPE_RELATION MOM ] 'S HOUSE ] ] TO [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT JAZZFEST ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE LANDING ] [SL:LOCATION_MODIFIER DOWNTOWN ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION [SL:METHOD_TRAVEL DRIVE ] [SL:SOURCE [IN:GET_LOCATION_HOME [SL:TYPE_RELATION MOM ] ] ] [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT JAZZFEST ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE LANDING ] [SL:LOCATION_MODIFIER DOWNTOWN ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "Mom's house"}}, {"name": "get_location", "arguments": {"location_modifier": "Jazz Fest at the Landing downtown"}}, {"name": "get_estimated_duration", "arguments": {"source": "Mom's house", "destination": "Jazz Fest at the Landing downtown"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00002155.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC Are there any delays going into [SL:DESTINATION Ann Arbor ] from [SL:SOURCE [IN:GET_LOCATION the [SL:LOCATION Plymouth ] area [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:POINT_ON_MAP the U of M hospital ] ] ] ] ] ]", "parameters": {}, "sentence": "Are there any delays going into Ann Arbor from the Plymouth area near the U of M hospital", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "ARE THERE ANY DELAYS GOING INTO ANN ARBOR FROM THE PLYMOUTH AREA NEAR THE U OF M HOSPITAL", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC ARE THERE ANY DELAYS GOING INTO [SL:DESTINATION ANN ARBOR ] FROM [SL:SOURCE [IN:GET_LOCATION THE [SL:LOCATION PLYMOUTH ] AREA [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:POINT_ON_MAP THE U OF M HOSPITAL ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00002155.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "Are there any delays going into Ann Arbor from the Plymouth area near the U of M hospital", "seqlogical": "[IN:GET_INFO_TRAFFIC Are there any delays going into [SL:DESTINATION Ann Arbor ] from [SL:SOURCE [IN:GET_LOCATION the [SL:LOCATION Plymouth ] area [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:POINT_ON_MAP the U of M hospital ] ] ] ] ] ]", "normalized_utterance": "ARE THERE ANY DELAYS GOING INTO ANN ARBOR FROM THE PLYMOUTH AREA NEAR THE U OF M HOSPITAL", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC ARE THERE ANY DELAYS GOING INTO [SL:DESTINATION ANN ARBOR ] FROM [SL:SOURCE [IN:GET_LOCATION THE [SL:LOCATION PLYMOUTH ] AREA [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:POINT_ON_MAP THE U OF M HOSPITAL ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:DESTINATION ANN ARBOR ] [SL:SOURCE [IN:GET_LOCATION [SL:LOCATION PLYMOUTH ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:POINT_ON_MAP THE U OF M HOSPITAL ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "Ann Arbor", "source": "Plymouth", "destination": "U of M hospital"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00002644.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_DEPARTURE What time do I need to leave for [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT graduation ceremonies ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Barton ] ] ] [SL:DATE_TIME at 1 pm ] ] ] ? ]", "parameters": {}, "sentence": "What time do I need to leave for graduation ceremonies at Barton at 1pm?", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT TIME DO I NEED TO LEAVE FOR GRADUATION CEREMONIES AT BARTON AT ONE PM", "normalized_seqlogical": "[IN:GET_ESTIMATED_DEPARTURE WHAT TIME DO I NEED TO LEAVE FOR [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT GRADUATION CEREMONIES ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP BARTON ] ] ] [SL:DATE_TIME AT ONE PM ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00002644.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "What time do I need to leave for graduation ceremonies at Barton at 1pm?", "seqlogical": "[IN:GET_ESTIMATED_DEPARTURE What time do I need to leave for [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT graduation ceremonies ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Barton ] ] ] [SL:DATE_TIME at 1 pm ] ] ] ? ]", "normalized_utterance": "WHAT TIME DO I NEED TO LEAVE FOR GRADUATION CEREMONIES AT BARTON AT ONE PM", "normalized_seqlogical": "[IN:GET_ESTIMATED_DEPARTURE WHAT TIME DO I NEED TO LEAVE FOR [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT GRADUATION CEREMONIES ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP BARTON ] ] ] [SL:DATE_TIME AT ONE PM ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_DEPARTURE [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT GRADUATION CEREMONIES ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP BARTON ] ] ] [SL:DATE_TIME AT ONE PM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "Barton"}}, {"name": "get_estimated_departure", "arguments": {"destination": "Barton", "date_time_arrival": "today at 1 pm"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00002858.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_DEPARTURE [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT [IN:GET_CONTACT [SL:CONTACT_RELATED My ] [SL:TYPE_RELATION daughter ] ] ] 's [SL:CATEGORY_EVENT concert ] starts [SL:DATE_TIME at 7 PM ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP COBOL Hall ] ] ] ] ] what time should I leave to get there [SL:DATE_TIME_ARRIVAL by 615 ] ]", "parameters": {}, "sentence": "My daughter's concert starts at 7 PM at COBOL Hall what time should I leave to get there by 615", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "MY DAUGHTER 'S CONCERT STARTS AT SEVEN PM AT COBOL HALL WHAT TIME SHOULD I LEAVE TO GET THERE BY SIX FIFTEEN", "normalized_seqlogical": "[IN:GET_ESTIMATED_DEPARTURE [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAUGHTER ] ] ] 'S [SL:CATEGORY_EVENT CONCERT ] STARTS [SL:DATE_TIME AT SEVEN PM ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP COBOL HALL ] ] ] ] ] WHAT TIME SHOULD I LEAVE TO GET THERE [SL:DATE_TIME_ARRIVAL BY SIX FIFTEEN ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00002858.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "My daughter's concert starts at 7 PM at COBOL Hall what time should I leave to get there by 615", "seqlogical": "[IN:GET_ESTIMATED_DEPARTURE [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT [IN:GET_CONTACT [SL:CONTACT_RELATED My ] [SL:TYPE_RELATION daughter ] ] ] 's [SL:CATEGORY_EVENT concert ] starts [SL:DATE_TIME at 7 PM ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP COBOL Hall ] ] ] ] ] what time should I leave to get there [SL:DATE_TIME_ARRIVAL by 615 ] ]", "normalized_utterance": "MY DAUGHTER 'S CONCERT STARTS AT SEVEN PM AT COBOL HALL WHAT TIME SHOULD I LEAVE TO GET THERE BY SIX FIFTEEN", "normalized_seqlogical": "[IN:GET_ESTIMATED_DEPARTURE [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAUGHTER ] ] ] 'S [SL:CATEGORY_EVENT CONCERT ] STARTS [SL:DATE_TIME AT SEVEN PM ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP COBOL HALL ] ] ] ] ] WHAT TIME SHOULD I LEAVE TO GET THERE [SL:DATE_TIME_ARRIVAL BY SIX FIFTEEN ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_DEPARTURE [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAUGHTER ] ] ] [SL:CATEGORY_EVENT CONCERT ] [SL:DATE_TIME AT SEVEN PM ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP COBOL HALL ] ] ] ] ] [SL:DATE_TIME_ARRIVAL BY SIX FIFTEEN ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "my"}}, {"name": "get_estimated_departure", "arguments": {"destination": "Cobble Hall", "date_time_arrival": "today at 6:15 pm"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00001891.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC How 's traffic [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the MTV music awards ] in [SL:LOCATION New York ] ] ] ] ] ? ]", "parameters": {}, "sentence": "How's traffic around the MTV music awards in New York?", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "HOW 'S TRAFFIC AROUND THE MTV MUSIC AWARDS IN NEW YORK", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW 'S TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE MTV MUSIC AWARDS ] IN [SL:LOCATION NEW YORK ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00001891.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "How's traffic around the MTV music awards in New York?", "seqlogical": "[IN:GET_INFO_TRAFFIC How 's traffic [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the MTV music awards ] in [SL:LOCATION New York ] ] ] ] ] ? ]", "normalized_utterance": "HOW 'S TRAFFIC AROUND THE MTV MUSIC AWARDS IN NEW YORK", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW 'S TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE MTV MUSIC AWARDS ] IN [SL:LOCATION NEW YORK ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE MTV MUSIC AWARDS ] [SL:LOCATION NEW YORK ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "New York", "date_time": "now"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00000326.wav", "split": "test", "intent": "[IN:GET_DIRECTIONS show me the shortest route to reach [SL:DESTINATION [IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Smithwick Theater ] ] ] for [SL:CATEGORY_EVENT art exhibition ] ] ] . ]", "parameters": {}, "sentence": "show me the shortest route to reach Smithwick Theater for art exhibition.", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "SHOW ME THE SHORTEST ROUTE TO REACH SMITHWICK THEATER FOR ART EXHIBITION", "normalized_seqlogical": "[IN:GET_DIRECTIONS SHOW ME THE SHORTEST ROUTE TO REACH [SL:DESTINATION [IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP SMITHWICK THEATER ] ] ] FOR [SL:CATEGORY_EVENT ART EXHIBITION ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00000326.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "show me the shortest route to reach Smithwick Theater for art exhibition.", "seqlogical": "[IN:GET_DIRECTIONS show me the shortest route to reach [SL:DESTINATION [IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Smithwick Theater ] ] ] for [SL:CATEGORY_EVENT art exhibition ] ] ] . ]", "normalized_utterance": "SHOW ME THE SHORTEST ROUTE TO REACH SMITHWICK THEATER FOR ART EXHIBITION", "normalized_seqlogical": "[IN:GET_DIRECTIONS SHOW ME THE SHORTEST ROUTE TO REACH [SL:DESTINATION [IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP SMITHWICK THEATER ] ] ] FOR [SL:CATEGORY_EVENT ART EXHIBITION ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_DIRECTIONS [SL:DESTINATION [IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP SMITHWICK THEATER ] ] ] [SL:CATEGORY_EVENT ART EXHIBITION ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "Smithwick Theater"}}, {"name": "get_directions", "arguments": {"destination": "Smithwick Theater", "path": "shortest"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00003134.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC How 's traffic [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the Asian Games final ] in [SL:LOCATION Gelora Bung Karno , Jakarta ] ] ] ] ] ? ]", "parameters": {}, "sentence": "How's traffic around the Asian Games final in Gelora Bung Karno, Jakarta?", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "HOW 'S TRAFFIC AROUND THE ASIAN GAMES FINAL IN GELORA BUNG KARNO JAKARTA", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW 'S TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE ASIAN GAMES FINAL ] IN [SL:LOCATION GELORA BUNG KARNO JAKARTA ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00003134.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "How's traffic around the Asian Games final in Gelora Bung Karno, Jakarta?", "seqlogical": "[IN:GET_INFO_TRAFFIC How 's traffic [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the Asian Games final ] in [SL:LOCATION Gelora Bung Karno , Jakarta ] ] ] ] ] ? ]", "normalized_utterance": "HOW 'S TRAFFIC AROUND THE ASIAN GAMES FINAL IN GELORA BUNG KARNO JAKARTA", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW 'S TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE ASIAN GAMES FINAL ] IN [SL:LOCATION GELORA BUNG KARNO JAKARTA ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE ASIAN GAMES FINAL ] [SL:LOCATION GELORA BUNG KARNO JAKARTA ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "Gelora Bung Karno, Jakarta"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00000843.wav", "split": "test", "intent": "[IN:GET_DIRECTIONS Show me the simplest route when I leave from [SL:SOURCE [IN:GET_LOCATION_WORK work ] ] to go to [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION uncle ] ] ] 's house ] ] . ]", "parameters": {}, "sentence": "Show me the simplest route when I leave from work to go to my uncle's house.", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "SHOW ME THE SIMPLEST ROUTE WHEN I LEAVE FROM WORK TO GO TO MY UNCLE 'S HOUSE", "normalized_seqlogical": "[IN:GET_DIRECTIONS SHOW ME THE SIMPLEST ROUTE WHEN I LEAVE FROM [SL:SOURCE [IN:GET_LOCATION_WORK WORK ] ] TO GO TO [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION UNCLE ] ] ] 'S HOUSE ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00000843.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "Show me the simplest route when I leave from work to go to my uncle's house.", "seqlogical": "[IN:GET_DIRECTIONS Show me the simplest route when I leave from [SL:SOURCE [IN:GET_LOCATION_WORK work ] ] to go to [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION uncle ] ] ] 's house ] ] . ]", "normalized_utterance": "SHOW ME THE SIMPLEST ROUTE WHEN I LEAVE FROM WORK TO GO TO MY UNCLE 'S HOUSE", "normalized_seqlogical": "[IN:GET_DIRECTIONS SHOW ME THE SIMPLEST ROUTE WHEN I LEAVE FROM [SL:SOURCE [IN:GET_LOCATION_WORK WORK ] ] TO GO TO [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION UNCLE ] ] ] 'S HOUSE ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_DIRECTIONS [SL:SOURCE [IN:GET_LOCATION_WORK ] ] [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION UNCLE ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "my uncle's house"}}, {"name": "get_location", "arguments": {"location_modifier": "work"}}, {"name": "get_directions", "arguments": {"source": "work", "destination": "my uncle's house"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00005506.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_DURATION How long will it take me to [SL:METHOD_TRAVEL drive ] to [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the theater ] at [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:CATEGORY_LOCATION the mall ] ] ] ] ] [SL:DATE_TIME_DEPARTURE at 7 pm ] ? ]", "parameters": {}, "sentence": "How long will it take me to drive to the theater at the mall at 7pm?", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "HOW LONG WILL IT TAKE ME TO DRIVE TO THE THEATER AT THE MALL AT SEVEN PM", "normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION HOW LONG WILL IT TAKE ME TO [SL:METHOD_TRAVEL DRIVE ] TO [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE THEATER ] AT [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE MALL ] ] ] ] ] [SL:DATE_TIME_DEPARTURE AT SEVEN PM ] ]", "raw_data": {"file_id": "test_1/navigation_test/00005506.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "How long will it take me to drive to the theater at the mall at 7pm?", "seqlogical": "[IN:GET_ESTIMATED_DURATION How long will it take me to [SL:METHOD_TRAVEL drive ] to [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the theater ] at [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:CATEGORY_LOCATION the mall ] ] ] ] ] [SL:DATE_TIME_DEPARTURE at 7 pm ] ? ]", "normalized_utterance": "HOW LONG WILL IT TAKE ME TO DRIVE TO THE THEATER AT THE MALL AT SEVEN PM", "normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION HOW LONG WILL IT TAKE ME TO [SL:METHOD_TRAVEL DRIVE ] TO [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE THEATER ] AT [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE MALL ] ] ] ] ] [SL:DATE_TIME_DEPARTURE AT SEVEN PM ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION [SL:METHOD_TRAVEL DRIVE ] [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE THEATER ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE MALL ] ] ] ] ] [SL:DATE_TIME_DEPARTURE AT SEVEN PM ] ]"}, "prediction": "", "function_calls": [{"name": "get_estimated_duration", "arguments": {"destination": "the theater at the mall", "date_time_departure": "7 PM"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00001567.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC What 's traffic like [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS outside of ] [SL:LOCATION Nashville ] ] ] ] ] [SL:DATE_TIME right now ] ]", "parameters": {}, "sentence": "What's traffic like outside of Nashville right now", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT 'S TRAFFIC LIKE OUTSIDE OF NASHVILLE RIGHT NOW", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC WHAT 'S TRAFFIC LIKE [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS OUTSIDE OF ] [SL:LOCATION NASHVILLE ] ] ] ] ] [SL:DATE_TIME RIGHT NOW ] ]", "raw_data": {"file_id": "test_1/navigation_test/00001567.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "What's traffic like outside of Nashville right now", "seqlogical": "[IN:GET_INFO_TRAFFIC What 's traffic like [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS outside of ] [SL:LOCATION Nashville ] ] ] ] ] [SL:DATE_TIME right now ] ]", "normalized_utterance": "WHAT 'S TRAFFIC LIKE OUTSIDE OF NASHVILLE RIGHT NOW", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC WHAT 'S TRAFFIC LIKE [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS OUTSIDE OF ] [SL:LOCATION NASHVILLE ] ] ] ] ] [SL:DATE_TIME RIGHT NOW ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS OUTSIDE OF ] [SL:LOCATION NASHVILLE ] ] ] ] ] [SL:DATE_TIME RIGHT NOW ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "Nashville", "date_time": "now"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00005954.wav", "split": "test", "intent": "[IN:GET_DIRECTIONS Give me directions for [SL:DESTINATION [IN:GET_EVENT the [SL:DATE_TIME Christmas ] [SL:CATEGORY_EVENT festival ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the Boston Trade Center ] ] ] ] ] ]", "parameters": {}, "sentence": "Give me directions for the Christmas festival at the Boston Trade Center", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "GIVE ME DIRECTIONS FOR THE CHRISTMAS FESTIVAL AT THE BOSTON TRADE CENTER", "normalized_seqlogical": "[IN:GET_DIRECTIONS GIVE ME DIRECTIONS FOR [SL:DESTINATION [IN:GET_EVENT THE [SL:DATE_TIME CHRISTMAS ] [SL:CATEGORY_EVENT FESTIVAL ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE BOSTON TRADE CENTER ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00005954.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "Give me directions for the Christmas festival at the Boston Trade Center", "seqlogical": "[IN:GET_DIRECTIONS Give me directions for [SL:DESTINATION [IN:GET_EVENT the [SL:DATE_TIME Christmas ] [SL:CATEGORY_EVENT festival ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the Boston Trade Center ] ] ] ] ] ]", "normalized_utterance": "GIVE ME DIRECTIONS FOR THE CHRISTMAS FESTIVAL AT THE BOSTON TRADE CENTER", "normalized_seqlogical": "[IN:GET_DIRECTIONS GIVE ME DIRECTIONS FOR [SL:DESTINATION [IN:GET_EVENT THE [SL:DATE_TIME CHRISTMAS ] [SL:CATEGORY_EVENT FESTIVAL ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE BOSTON TRADE CENTER ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_DIRECTIONS [SL:DESTINATION [IN:GET_EVENT [SL:DATE_TIME CHRISTMAS ] [SL:CATEGORY_EVENT FESTIVAL ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE BOSTON TRADE CENTER ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "Boston Trade Center"}}, {"name": "get_directions", "arguments": {"destination": "Boston Trade Center"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00005782.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC Are there any traffics [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the Winter Olympics ] in [SL:LOCATION South Korea ] ] ] ] ] ? ]", "parameters": {}, "sentence": "Are there any traffics around the Winter Olympics in South Korea?", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "ARE THERE ANY TRAFFICS AROUND THE WINTER OLYMPICS IN SOUTH KOREA", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC ARE THERE ANY TRAFFICS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE WINTER OLYMPICS ] IN [SL:LOCATION SOUTH KOREA ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00005782.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "Are there any traffics around the Winter Olympics in South Korea?", "seqlogical": "[IN:GET_INFO_TRAFFIC Are there any traffics [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the Winter Olympics ] in [SL:LOCATION South Korea ] ] ] ] ] ? ]", "normalized_utterance": "ARE THERE ANY TRAFFICS AROUND THE WINTER OLYMPICS IN SOUTH KOREA", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC ARE THERE ANY TRAFFICS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE WINTER OLYMPICS ] IN [SL:LOCATION SOUTH KOREA ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE WINTER OLYMPICS ] [SL:LOCATION SOUTH KOREA ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "Winter Olympics, South Korea"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00004258.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC Is there traffic [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION downtown Fernandina ] ] ] ] ] [SL:DATE_TIME today ] ]", "parameters": {}, "sentence": "Is there traffic near downtown Fernandina today", "domain": "navigation", "gender": "Male", "native": "No", "normalized_utterance": "IS THERE TRAFFIC NEAR DOWNTOWN FERNANDINA TODAY", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC IS THERE TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION DOWNTOWN FERNANDINA ] ] ] ] ] [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_1/navigation_test/00004258.wav", "domain": "navigation", "gender": "Male", "native": "No", "utterance": "Is there traffic near downtown Fernandina today", "seqlogical": "[IN:GET_INFO_TRAFFIC Is there traffic [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION downtown Fernandina ] ] ] ] ] [SL:DATE_TIME today ] ]", "normalized_utterance": "IS THERE TRAFFIC NEAR DOWNTOWN FERNANDINA TODAY", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC IS THERE TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION DOWNTOWN FERNANDINA ] ] ] ] ] [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION DOWNTOWN FERNANDINA ] ] ] ] ] [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "downtown Fernandina", "date_time": "today"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00005723.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC How 's traffic [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the Music Festival ] in [SL:LOCATION Detroit ] ] ] ] ] ]", "parameters": {}, "sentence": "How's traffic around the Music Festival in Detroit", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "HOW 'S TRAFFIC AROUND THE MUSIC FESTIVAL IN DETROIT", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW 'S TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE MUSIC FESTIVAL ] IN [SL:LOCATION DETROIT ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00005723.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "How's traffic around the Music Festival in Detroit", "seqlogical": "[IN:GET_INFO_TRAFFIC How 's traffic [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the Music Festival ] in [SL:LOCATION Detroit ] ] ] ] ] ]", "normalized_utterance": "HOW 'S TRAFFIC AROUND THE MUSIC FESTIVAL IN DETROIT", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW 'S TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE MUSIC FESTIVAL ] IN [SL:LOCATION DETROIT ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE MUSIC FESTIVAL ] [SL:LOCATION DETROIT ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "Detroit"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00000924.wav", "split": "test", "intent": "[IN:GET_INFO_ROAD_CONDITION Is there [SL:ROAD_CONDITION any flooding ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT my ] house ] ] ] ] [SL:DATE_TIME this morning ] ? ]", "parameters": {}, "sentence": "Is there any flooding around my house this morning?", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "IS THERE ANY FLOODING AROUND MY HOUSE THIS MORNING", "normalized_seqlogical": "[IN:GET_INFO_ROAD_CONDITION IS THERE [SL:ROAD_CONDITION ANY FLOODING ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT MY ] HOUSE ] ] ] ] [SL:DATE_TIME THIS MORNING ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00000924.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "Is there any flooding around my house this morning?", "seqlogical": "[IN:GET_INFO_ROAD_CONDITION Is there [SL:ROAD_CONDITION any flooding ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT my ] house ] ] ] ] [SL:DATE_TIME this morning ] ? ]", "normalized_utterance": "IS THERE ANY FLOODING AROUND MY HOUSE THIS MORNING", "normalized_seqlogical": "[IN:GET_INFO_ROAD_CONDITION IS THERE [SL:ROAD_CONDITION ANY FLOODING ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT MY ] HOUSE ] ] ] ] [SL:DATE_TIME THIS MORNING ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_ROAD_CONDITION [SL:ROAD_CONDITION ANY FLOODING ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT MY ] ] ] ] ] [SL:DATE_TIME THIS MORNING ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "my house"}}, {"name": "get_info_road_condition", "arguments": {"location": "my house", "road_condition": "flooding", "date_time": "this morning"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00003157.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC What is the traffic conditions like [SL:DATE_TIME right now ] at [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the Home and Garden show ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the I X center ] in [SL:LOCATION_MODIFIER Cleveland ] ] ] ] ] ]", "parameters": {}, "sentence": "What is the traffic conditions like right now at the Home and Garden show at the I X center in Cleveland", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT IS THE TRAFFIC CONDITIONS LIKE RIGHT NOW AT THE HOME AND GARDEN SHOW AT THE I X CENTER IN CLEVELAND", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC WHAT IS THE TRAFFIC CONDITIONS LIKE [SL:DATE_TIME RIGHT NOW ] AT [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE HOME AND GARDEN SHOW ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE I X CENTER ] IN [SL:LOCATION_MODIFIER CLEVELAND ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00003157.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "What is the traffic conditions like right now at the Home and Garden show at the I X center in Cleveland", "seqlogical": "[IN:GET_INFO_TRAFFIC What is the traffic conditions like [SL:DATE_TIME right now ] at [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the Home and Garden show ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the I X center ] in [SL:LOCATION_MODIFIER Cleveland ] ] ] ] ] ]", "normalized_utterance": "WHAT IS THE TRAFFIC CONDITIONS LIKE RIGHT NOW AT THE HOME AND GARDEN SHOW AT THE I X CENTER IN CLEVELAND", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC WHAT IS THE TRAFFIC CONDITIONS LIKE [SL:DATE_TIME RIGHT NOW ] AT [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE HOME AND GARDEN SHOW ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE I X CENTER ] IN [SL:LOCATION_MODIFIER CLEVELAND ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:DATE_TIME RIGHT NOW ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE HOME AND GARDEN SHOW ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE I X CENTER ] [SL:LOCATION_MODIFIER CLEVELAND ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "I-X Center, Cleveland"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00003532.wav", "split": "test", "intent": "[IN:GET_DIRECTIONS Is there a way to get to [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT the garage sale ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP thr Green Valley Ranch ] ] ] ] ] with no heavy [SL:OBSTRUCTION_AVOID traffic ] ? ]", "parameters": {}, "sentence": "Is there a way to get to the garage sale at thr Green Valley Ranch with no heavy traffic?", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "IS THERE A WAY TO GET TO THE GARAGE SALE AT THR GREEN VALLEY RANCH WITH NO HEAVY TRAFFIC", "normalized_seqlogical": "[IN:GET_DIRECTIONS IS THERE A WAY TO GET TO [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE GARAGE SALE ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THR GREEN VALLEY RANCH ] ] ] ] ] WITH NO HEAVY [SL:OBSTRUCTION_AVOID TRAFFIC ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00003532.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "Is there a way to get to the garage sale at thr Green Valley Ranch with no heavy traffic?", "seqlogical": "[IN:GET_DIRECTIONS Is there a way to get to [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT the garage sale ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP thr Green Valley Ranch ] ] ] ] ] with no heavy [SL:OBSTRUCTION_AVOID traffic ] ? ]", "normalized_utterance": "IS THERE A WAY TO GET TO THE GARAGE SALE AT THR GREEN VALLEY RANCH WITH NO HEAVY TRAFFIC", "normalized_seqlogical": "[IN:GET_DIRECTIONS IS THERE A WAY TO GET TO [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE GARAGE SALE ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THR GREEN VALLEY RANCH ] ] ] ] ] WITH NO HEAVY [SL:OBSTRUCTION_AVOID TRAFFIC ] ]", "decoupled_normalized_seqlogical": "[IN:GET_DIRECTIONS [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE GARAGE SALE ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THR GREEN VALLEY RANCH ] ] ] ] ] [SL:OBSTRUCTION_AVOID TRAFFIC ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "Green Valley Ranch"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00000103.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC How is traffic [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the Rose Festival ] in [SL:LOCATION Portland ] ] ] ] ] ? ]", "parameters": {}, "sentence": "How is traffic around the Rose Festival in Portland?", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "HOW IS TRAFFIC AROUND THE ROSE FESTIVAL IN PORTLAND", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW IS TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE ROSE FESTIVAL ] IN [SL:LOCATION PORTLAND ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00000103.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "How is traffic around the Rose Festival in Portland?", "seqlogical": "[IN:GET_INFO_TRAFFIC How is traffic [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the Rose Festival ] in [SL:LOCATION Portland ] ] ] ] ] ? ]", "normalized_utterance": "HOW IS TRAFFIC AROUND THE ROSE FESTIVAL IN PORTLAND", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW IS TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE ROSE FESTIVAL ] IN [SL:LOCATION PORTLAND ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE ROSE FESTIVAL ] [SL:LOCATION PORTLAND ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "Portland", "date_time": "today"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00005209.wav", "split": "test", "intent": "[IN:GET_DIRECTIONS Whats the [SL:METHOD_TRAVEL driving ] directions to [SL:DESTINATION [IN:GET_LOCATION [SL:POINT_ON_MAP the Ladys Footlocker ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION downtown ] ] ] near downtown ] ] ]", "parameters": {}, "sentence": "Whats the driving directions to the Ladys Footlocker near downtown near downtown", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "WHATS THE DRIVING DIRECTIONS TO THE LADYS FOOTLOCKER NEAR DOWNTOWN NEAR DOWNTOWN", "normalized_seqlogical": "[IN:GET_DIRECTIONS WHATS THE [SL:METHOD_TRAVEL DRIVING ] DIRECTIONS TO [SL:DESTINATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE LADYS FOOTLOCKER ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION DOWNTOWN ] ] ] NEAR DOWNTOWN ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00005209.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "Whats the driving directions to the Ladys Footlocker near downtown near downtown", "seqlogical": "[IN:GET_DIRECTIONS Whats the [SL:METHOD_TRAVEL driving ] directions to [SL:DESTINATION [IN:GET_LOCATION [SL:POINT_ON_MAP the Ladys Footlocker ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION downtown ] ] ] near downtown ] ] ]", "normalized_utterance": "WHATS THE DRIVING DIRECTIONS TO THE LADYS FOOTLOCKER NEAR DOWNTOWN NEAR DOWNTOWN", "normalized_seqlogical": "[IN:GET_DIRECTIONS WHATS THE [SL:METHOD_TRAVEL DRIVING ] DIRECTIONS TO [SL:DESTINATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE LADYS FOOTLOCKER ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION DOWNTOWN ] ] ] NEAR DOWNTOWN ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_DIRECTIONS [SL:METHOD_TRAVEL DRIVING ] [SL:DESTINATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE LADYS FOOTLOCKER ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION DOWNTOWN ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near downtown", "location": "Lady's Foot Locker"}}, {"name": "get_directions", "arguments": {"destination": "Lady's Foot Locker near downtown"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00004506.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC Is there traffic congestion on [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION Congress Street ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:POINT_ON_MAP the Penobscot Building ] ] ] ] ] ? ]", "parameters": {}, "sentence": "Is there traffic congestion on Congress Street near the Penobscot Building?", "domain": "navigation", "gender": "Male", "native": "No", "normalized_utterance": "IS THERE TRAFFIC CONGESTION ON CONGRESS STREET NEAR THE PENOBSCOT BUILDING", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC IS THERE TRAFFIC CONGESTION ON [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION CONGRESS STREET ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:POINT_ON_MAP THE PENOBSCOT BUILDING ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00004506.wav", "domain": "navigation", "gender": "Male", "native": "No", "utterance": "Is there traffic congestion on Congress Street near the Penobscot Building?", "seqlogical": "[IN:GET_INFO_TRAFFIC Is there traffic congestion on [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION Congress Street ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:POINT_ON_MAP the Penobscot Building ] ] ] ] ] ? ]", "normalized_utterance": "IS THERE TRAFFIC CONGESTION ON CONGRESS STREET NEAR THE PENOBSCOT BUILDING", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC IS THERE TRAFFIC CONGESTION ON [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION CONGRESS STREET ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:POINT_ON_MAP THE PENOBSCOT BUILDING ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION CONGRESS STREET ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:POINT_ON_MAP THE PENOBSCOT BUILDING ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "Congress Street near Peanuts Bot Building"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00003473.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_ARRIVAL when will i get to [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT the party ] at [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT freds ] ] ] ] ] if i leave [SL:DATE_TIME_DEPARTURE now ] and avoid [SL:PATH_AVOID the 215 ] ? ]", "parameters": {}, "sentence": "when will i get to the party at freds if i leave now and avoid the 215?", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "WHEN WILL I GET TO THE PARTY AT FREDS IF I LEAVE NOW AND AVOID THE TWO HUNDRED FIFTEEN", "normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL WHEN WILL I GET TO [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE PARTY ] AT [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT FREDS ] ] ] ] ] IF I LEAVE [SL:DATE_TIME_DEPARTURE NOW ] AND AVOID [SL:PATH_AVOID THE TWO HUNDRED FIFTEEN ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00003473.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "when will i get to the party at freds if i leave now and avoid the 215?", "seqlogical": "[IN:GET_ESTIMATED_ARRIVAL when will i get to [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT the party ] at [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT freds ] ] ] ] ] if i leave [SL:DATE_TIME_DEPARTURE now ] and avoid [SL:PATH_AVOID the 215 ] ? ]", "normalized_utterance": "WHEN WILL I GET TO THE PARTY AT FREDS IF I LEAVE NOW AND AVOID THE TWO HUNDRED FIFTEEN", "normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL WHEN WILL I GET TO [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE PARTY ] AT [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT FREDS ] ] ] ] ] IF I LEAVE [SL:DATE_TIME_DEPARTURE NOW ] AND AVOID [SL:PATH_AVOID THE TWO HUNDRED FIFTEEN ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE PARTY ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT FREDS ] ] ] ] ] [SL:DATE_TIME_DEPARTURE NOW ] [SL:PATH_AVOID THE TWO HUNDRED FIFTEEN ] ]"}, "prediction": "", "function_calls": [{"name": "get_estimated_arrival", "arguments": {"source": "current location", "destination": "Fred's", "obstruction_avoid": "215"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00005782.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC Are there any traffics [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the Winter Olympics ] in [SL:LOCATION South Korea ] ] ] ] ] ? ]", "parameters": {}, "sentence": "Are there any traffics around the Winter Olympics in South Korea?", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "ARE THERE ANY TRAFFICS AROUND THE WINTER OLYMPICS IN SOUTH KOREA", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC ARE THERE ANY TRAFFICS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE WINTER OLYMPICS ] IN [SL:LOCATION SOUTH KOREA ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00005782.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "Are there any traffics around the Winter Olympics in South Korea?", "seqlogical": "[IN:GET_INFO_TRAFFIC Are there any traffics [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the Winter Olympics ] in [SL:LOCATION South Korea ] ] ] ] ] ? ]", "normalized_utterance": "ARE THERE ANY TRAFFICS AROUND THE WINTER OLYMPICS IN SOUTH KOREA", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC ARE THERE ANY TRAFFICS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE WINTER OLYMPICS ] IN [SL:LOCATION SOUTH KOREA ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE WINTER OLYMPICS ] [SL:LOCATION SOUTH KOREA ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "Winter Olympics, South Korea"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00000795.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC What time is [SL:DATE_TIME rush hour ] on [SL:LOCATION I - 75 ] [SL:DATE_TIME in the evening ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION Tampa ] ] ] ] ] ]", "parameters": {}, "sentence": "What time is rush hour on I-75 in the evening around Tampa", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT TIME IS RUSH HOUR ON I SEVENTY FIVE IN THE EVENING AROUND TAMPA", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC WHAT TIME IS [SL:DATE_TIME RUSH HOUR ] ON [SL:LOCATION I SEVENTY FIVE ] [SL:DATE_TIME IN THE EVENING ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION TAMPA ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00000795.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "What time is rush hour on I-75 in the evening around Tampa", "seqlogical": "[IN:GET_INFO_TRAFFIC What time is [SL:DATE_TIME rush hour ] on [SL:LOCATION I - 75 ] [SL:DATE_TIME in the evening ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION Tampa ] ] ] ] ] ]", "normalized_utterance": "WHAT TIME IS RUSH HOUR ON I SEVENTY FIVE IN THE EVENING AROUND TAMPA", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC WHAT TIME IS [SL:DATE_TIME RUSH HOUR ] ON [SL:LOCATION I SEVENTY FIVE ] [SL:DATE_TIME IN THE EVENING ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION TAMPA ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:DATE_TIME RUSH HOUR ] [SL:LOCATION I SEVENTY FIVE ] [SL:DATE_TIME IN THE EVENING ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION TAMPA ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "I-75, Tampa", "date_time": "evening"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00001436.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_DURATION If I plan on leaving [SL:SOURCE [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION girlfriend ] 's house in [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER Opelousas ] ] ] ] ] [SL:DATE_TIME_DEPARTURE at 10AM ] , how long will my [SL:METHOD_TRAVEL drive ] be back to [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] 's house ] ] ? ]", "parameters": {}, "sentence": "If I plan on leaving my girlfriend's house in Opelousas at 10AM, how long will my drive be back to my mom's house?", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "IF I PLAN ON LEAVING MY GIRLFRIEND 'S HOUSE IN OPELOUSAS AT TEN AM HOW LONG WILL MY DRIVE BE BACK TO MY MOM 'S HOUSE", "normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION IF I PLAN ON LEAVING [SL:SOURCE [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION GIRLFRIEND ] 'S HOUSE IN [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER OPELOUSAS ] ] ] ] ] [SL:DATE_TIME_DEPARTURE AT TEN AM ] HOW LONG WILL MY [SL:METHOD_TRAVEL DRIVE ] BE BACK TO [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] 'S HOUSE ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00001436.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "If I plan on leaving my girlfriend's house in Opelousas at 10AM, how long will my drive be back to my mom's house?", "seqlogical": "[IN:GET_ESTIMATED_DURATION If I plan on leaving [SL:SOURCE [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION girlfriend ] 's house in [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER Opelousas ] ] ] ] ] [SL:DATE_TIME_DEPARTURE at 10AM ] , how long will my [SL:METHOD_TRAVEL drive ] be back to [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] 's house ] ] ? ]", "normalized_utterance": "IF I PLAN ON LEAVING MY GIRLFRIEND 'S HOUSE IN OPELOUSAS AT TEN AM HOW LONG WILL MY DRIVE BE BACK TO MY MOM 'S HOUSE", "normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION IF I PLAN ON LEAVING [SL:SOURCE [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION GIRLFRIEND ] 'S HOUSE IN [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER OPELOUSAS ] ] ] ] ] [SL:DATE_TIME_DEPARTURE AT TEN AM ] HOW LONG WILL MY [SL:METHOD_TRAVEL DRIVE ] BE BACK TO [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] 'S HOUSE ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION [SL:SOURCE [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION GIRLFRIEND ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER OPELOUSAS ] ] ] ] ] [SL:DATE_TIME_DEPARTURE AT TEN AM ] [SL:METHOD_TRAVEL DRIVE ] [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "my mom's house"}}, {"name": "get_estimated_duration", "arguments": {"source": "Opelousas", "destination": "my mom's house", "date_time_departure": "10am"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00001668.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_ARRIVAL If I [SL:SOURCE [IN:GET_EVENT [SL:CATEGORY_EVENT the concert ] ] ] gets over [SL:DATE_TIME_DEPARTURE at 11 pm ] , what time will I get [SL:DESTINATION [IN:GET_LOCATION_HOME home in [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER Newport ] ] ] ] ] ? ]", "parameters": {}, "sentence": "If I the concert gets over at 11 pm, what time will I get home in Newport?", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "IF I THE CONCERT GETS OVER AT ELEVEN PM WHAT TIME WILL I GET HOME IN NEWPORT", "normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL IF I [SL:SOURCE [IN:GET_EVENT [SL:CATEGORY_EVENT THE CONCERT ] ] ] GETS OVER [SL:DATE_TIME_DEPARTURE AT ELEVEN PM ] WHAT TIME WILL I GET [SL:DESTINATION [IN:GET_LOCATION_HOME HOME IN [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER NEWPORT ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00001668.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "If I the concert gets over at 11 pm, what time will I get home in Newport?", "seqlogical": "[IN:GET_ESTIMATED_ARRIVAL If I [SL:SOURCE [IN:GET_EVENT [SL:CATEGORY_EVENT the concert ] ] ] gets over [SL:DATE_TIME_DEPARTURE at 11 pm ] , what time will I get [SL:DESTINATION [IN:GET_LOCATION_HOME home in [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER Newport ] ] ] ] ] ? ]", "normalized_utterance": "IF I THE CONCERT GETS OVER AT ELEVEN PM WHAT TIME WILL I GET HOME IN NEWPORT", "normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL IF I [SL:SOURCE [IN:GET_EVENT [SL:CATEGORY_EVENT THE CONCERT ] ] ] GETS OVER [SL:DATE_TIME_DEPARTURE AT ELEVEN PM ] WHAT TIME WILL I GET [SL:DESTINATION [IN:GET_LOCATION_HOME HOME IN [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER NEWPORT ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL [SL:SOURCE [IN:GET_EVENT [SL:CATEGORY_EVENT THE CONCERT ] ] ] [SL:DATE_TIME_DEPARTURE AT ELEVEN PM ] [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER NEWPORT ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_estimated_arrival", "arguments": {"destination": "Newport", "date_time_departure": "11pm"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00002858.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_DEPARTURE [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT [IN:GET_CONTACT [SL:CONTACT_RELATED My ] [SL:TYPE_RELATION daughter ] ] ] 's [SL:CATEGORY_EVENT concert ] starts [SL:DATE_TIME at 7 PM ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP COBOL Hall ] ] ] ] ] what time should I leave to get there [SL:DATE_TIME_ARRIVAL by 615 ] ]", "parameters": {}, "sentence": "My daughter's concert starts at 7 PM at COBOL Hall what time should I leave to get there by 615", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "MY DAUGHTER 'S CONCERT STARTS AT SEVEN PM AT COBOL HALL WHAT TIME SHOULD I LEAVE TO GET THERE BY SIX FIFTEEN", "normalized_seqlogical": "[IN:GET_ESTIMATED_DEPARTURE [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAUGHTER ] ] ] 'S [SL:CATEGORY_EVENT CONCERT ] STARTS [SL:DATE_TIME AT SEVEN PM ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP COBOL HALL ] ] ] ] ] WHAT TIME SHOULD I LEAVE TO GET THERE [SL:DATE_TIME_ARRIVAL BY SIX FIFTEEN ] ]", "raw_data": {"file_id": "test_1/navigation_test/00002858.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "My daughter's concert starts at 7 PM at COBOL Hall what time should I leave to get there by 615", "seqlogical": "[IN:GET_ESTIMATED_DEPARTURE [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT [IN:GET_CONTACT [SL:CONTACT_RELATED My ] [SL:TYPE_RELATION daughter ] ] ] 's [SL:CATEGORY_EVENT concert ] starts [SL:DATE_TIME at 7 PM ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP COBOL Hall ] ] ] ] ] what time should I leave to get there [SL:DATE_TIME_ARRIVAL by 615 ] ]", "normalized_utterance": "MY DAUGHTER 'S CONCERT STARTS AT SEVEN PM AT COBOL HALL WHAT TIME SHOULD I LEAVE TO GET THERE BY SIX FIFTEEN", "normalized_seqlogical": "[IN:GET_ESTIMATED_DEPARTURE [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAUGHTER ] ] ] 'S [SL:CATEGORY_EVENT CONCERT ] STARTS [SL:DATE_TIME AT SEVEN PM ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP COBOL HALL ] ] ] ] ] WHAT TIME SHOULD I LEAVE TO GET THERE [SL:DATE_TIME_ARRIVAL BY SIX FIFTEEN ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_DEPARTURE [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAUGHTER ] ] ] [SL:CATEGORY_EVENT CONCERT ] [SL:DATE_TIME AT SEVEN PM ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP COBOL HALL ] ] ] ] ] [SL:DATE_TIME_ARRIVAL BY SIX FIFTEEN ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "my"}}, {"name": "get_estimated_departure", "arguments": {"source": "MOCK_RESPONSE(get_location)", "destination": "Coble Hall", "date_time_arrival": "today at 6:15pm"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00003620.wav", "split": "test", "intent": "[IN:GET_DIRECTIONS IS THERE [SL:PATH A BACK ROAD ] TO [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION GRANDMA'S ] HOUSE IN [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER CONNECTICUT ] ] ] ] ] ]", "parameters": {}, "sentence": "IS THERE A BACK ROAD TO MY GRANDMA'S HOUSE IN CONNECTICUT", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "IS THERE A BACK ROAD TO MY GRANDMA'S HOUSE IN CONNECTICUT", "normalized_seqlogical": "[IN:GET_DIRECTIONS IS THERE [SL:PATH A BACK ROAD ] TO [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION GRANDMA'S ] HOUSE IN [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER CONNECTICUT ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00003620.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "IS THERE A BACK ROAD TO MY GRANDMA'S HOUSE IN CONNECTICUT", "seqlogical": "[IN:GET_DIRECTIONS IS THERE [SL:PATH A BACK ROAD ] TO [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION GRANDMA'S ] HOUSE IN [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER CONNECTICUT ] ] ] ] ] ]", "normalized_utterance": "IS THERE A BACK ROAD TO MY GRANDMA'S HOUSE IN CONNECTICUT", "normalized_seqlogical": "[IN:GET_DIRECTIONS IS THERE [SL:PATH A BACK ROAD ] TO [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION GRANDMA'S ] HOUSE IN [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER CONNECTICUT ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_DIRECTIONS [SL:PATH A BACK ROAD ] [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION GRANDMA'S ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER CONNECTICUT ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "my grandma's house", "location": "Connecticut"}}, {"name": "get_directions", "arguments": {"destination": "Connecticut", "path_avoid": "main roads"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00000649.wav", "split": "test", "intent": "[IN:GET_DIRECTIONS i need to get to [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT Fireworks show ] at [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the park ] ] ] ] ] , how can I from [SL:SOURCE [IN:GET_LOCATION [SL:LOCATION_USER my location ] ] ] ]", "parameters": {}, "sentence": "i need to get to Fireworks show at the park, how can I from my location", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "I NEED TO GET TO FIREWORKS SHOW AT THE PARK HOW CAN I FROM MY LOCATION", "normalized_seqlogical": "[IN:GET_DIRECTIONS I NEED TO GET TO [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT FIREWORKS SHOW ] AT [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE PARK ] ] ] ] ] HOW CAN I FROM [SL:SOURCE [IN:GET_LOCATION [SL:LOCATION_USER MY LOCATION ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00000649.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "i need to get to Fireworks show at the park, how can I from my location", "seqlogical": "[IN:GET_DIRECTIONS i need to get to [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT Fireworks show ] at [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the park ] ] ] ] ] , how can I from [SL:SOURCE [IN:GET_LOCATION [SL:LOCATION_USER my location ] ] ] ]", "normalized_utterance": "I NEED TO GET TO FIREWORKS SHOW AT THE PARK HOW CAN I FROM MY LOCATION", "normalized_seqlogical": "[IN:GET_DIRECTIONS I NEED TO GET TO [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT FIREWORKS SHOW ] AT [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE PARK ] ] ] ] ] HOW CAN I FROM [SL:SOURCE [IN:GET_LOCATION [SL:LOCATION_USER MY LOCATION ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_DIRECTIONS [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT FIREWORKS SHOW ] [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE PARK ] ] ] ] ] [SL:SOURCE [IN:GET_LOCATION [SL:LOCATION_USER MY LOCATION ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "my location"}}, {"name": "get_directions", "arguments": {"source": "MOCK_RESPONSE(get_location)", "destination": "fireworks show at the park"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00004493.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC How congested is the traffic on the roads [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT Voodoo Fest ] ] ] ] ] ? ]", "parameters": {}, "sentence": "How congested is the traffic on the roads around Voodoo Fest?", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "HOW CONGESTED IS THE TRAFFIC ON THE ROADS AROUND VOODOO FEST", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW CONGESTED IS THE TRAFFIC ON THE ROADS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT VOODOO FEST ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00004493.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "How congested is the traffic on the roads around Voodoo Fest?", "seqlogical": "[IN:GET_INFO_TRAFFIC How congested is the traffic on the roads [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT Voodoo Fest ] ] ] ] ] ? ]", "normalized_utterance": "HOW CONGESTED IS THE TRAFFIC ON THE ROADS AROUND VOODOO FEST", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW CONGESTED IS THE TRAFFIC ON THE ROADS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT VOODOO FEST ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT VOODOO FEST ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "Voodoo Fest"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00005726.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_DEPARTURE if [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT bunco ] is at [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT Karen Harper ] 's house ] ] [SL:DATE_TIME at 6 pm ] ] ] what time do I need to leave to be there on time ]", "parameters": {}, "sentence": "if bunco is at Karen Harper's house at 6 pm what time do I need to leave to be there on time", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "IF BUNCO IS AT KAREN HARPER 'S HOUSE AT SIX PM WHAT TIME DO I NEED TO LEAVE TO BE THERE ON TIME", "normalized_seqlogical": "[IN:GET_ESTIMATED_DEPARTURE IF [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT BUNCO ] IS AT [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT KAREN HARPER ] 'S HOUSE ] ] [SL:DATE_TIME AT SIX PM ] ] ] WHAT TIME DO I NEED TO LEAVE TO BE THERE ON TIME ]", "raw_data": {"file_id": "test_0/navigation_test_0/00005726.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "if bunco is at Karen Harper's house at 6 pm what time do I need to leave to be there on time", "seqlogical": "[IN:GET_ESTIMATED_DEPARTURE if [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT bunco ] is at [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT Karen Harper ] 's house ] ] [SL:DATE_TIME at 6 pm ] ] ] what time do I need to leave to be there on time ]", "normalized_utterance": "IF BUNCO IS AT KAREN HARPER 'S HOUSE AT SIX PM WHAT TIME DO I NEED TO LEAVE TO BE THERE ON TIME", "normalized_seqlogical": "[IN:GET_ESTIMATED_DEPARTURE IF [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT BUNCO ] IS AT [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT KAREN HARPER ] 'S HOUSE ] ] [SL:DATE_TIME AT SIX PM ] ] ] WHAT TIME DO I NEED TO LEAVE TO BE THERE ON TIME ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_DEPARTURE [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT BUNCO ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT KAREN HARPER ] ] ] [SL:DATE_TIME AT SIX PM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_estimated_departure", "arguments": {"destination": "Karen Harper's house", "date_time_arrival": "6pm"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00003185.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC Are there any accidents on [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the Parkway ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION Asheville ] ] ] ] ] ]", "parameters": {}, "sentence": "Are there any accidents on the Parkway near Asheville", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "ARE THERE ANY ACCIDENTS ON THE PARKWAY NEAR ASHEVILLE", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC ARE THERE ANY ACCIDENTS ON [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE PARKWAY ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION ASHEVILLE ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00003185.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "Are there any accidents on the Parkway near Asheville", "seqlogical": "[IN:GET_INFO_TRAFFIC Are there any accidents on [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the Parkway ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION Asheville ] ] ] ] ] ]", "normalized_utterance": "ARE THERE ANY ACCIDENTS ON THE PARKWAY NEAR ASHEVILLE", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC ARE THERE ANY ACCIDENTS ON [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE PARKWAY ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION ASHEVILLE ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE PARKWAY ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION ASHEVILLE ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "Asheville", "path": "parkway"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00004345.wav", "split": "test", "intent": "[IN:GET_DIRECTIONS Directions to [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the hospital ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS down the road from ] [SL:POINT_ON_MAP the walmart ] ] ] ] ] . ]", "parameters": {}, "sentence": "Directions to the hospital down the road from the walmart.", "domain": "navigation", "gender": "Male", "native": "No", "normalized_utterance": "DIRECTIONS TO THE HOSPITAL DOWN THE ROAD FROM THE WALMART", "normalized_seqlogical": "[IN:GET_DIRECTIONS DIRECTIONS TO [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE HOSPITAL ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS DOWN THE ROAD FROM ] [SL:POINT_ON_MAP THE WALMART ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00004345.wav", "domain": "navigation", "gender": "Male", "native": "No", "utterance": "Directions to the hospital down the road from the walmart.", "seqlogical": "[IN:GET_DIRECTIONS Directions to [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the hospital ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS down the road from ] [SL:POINT_ON_MAP the walmart ] ] ] ] ] . ]", "normalized_utterance": "DIRECTIONS TO THE HOSPITAL DOWN THE ROAD FROM THE WALMART", "normalized_seqlogical": "[IN:GET_DIRECTIONS DIRECTIONS TO [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE HOSPITAL ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS DOWN THE ROAD FROM ] [SL:POINT_ON_MAP THE WALMART ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_DIRECTIONS [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE HOSPITAL ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS DOWN THE ROAD FROM ] [SL:POINT_ON_MAP THE WALMART ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "down the road from the Walmart"}}, {"name": "get_directions", "arguments": {"destination": "hospital", "location": "down the road from the Walmart"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00005506.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_DURATION How long will it take me to [SL:METHOD_TRAVEL drive ] to [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the theater ] at [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:CATEGORY_LOCATION the mall ] ] ] ] ] [SL:DATE_TIME_DEPARTURE at 7 pm ] ? ]", "parameters": {}, "sentence": "How long will it take me to drive to the theater at the mall at 7pm?", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "HOW LONG WILL IT TAKE ME TO DRIVE TO THE THEATER AT THE MALL AT SEVEN PM", "normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION HOW LONG WILL IT TAKE ME TO [SL:METHOD_TRAVEL DRIVE ] TO [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE THEATER ] AT [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE MALL ] ] ] ] ] [SL:DATE_TIME_DEPARTURE AT SEVEN PM ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00005506.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "How long will it take me to drive to the theater at the mall at 7pm?", "seqlogical": "[IN:GET_ESTIMATED_DURATION How long will it take me to [SL:METHOD_TRAVEL drive ] to [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the theater ] at [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:CATEGORY_LOCATION the mall ] ] ] ] ] [SL:DATE_TIME_DEPARTURE at 7 pm ] ? ]", "normalized_utterance": "HOW LONG WILL IT TAKE ME TO DRIVE TO THE THEATER AT THE MALL AT SEVEN PM", "normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION HOW LONG WILL IT TAKE ME TO [SL:METHOD_TRAVEL DRIVE ] TO [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE THEATER ] AT [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE MALL ] ] ] ] ] [SL:DATE_TIME_DEPARTURE AT SEVEN PM ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION [SL:METHOD_TRAVEL DRIVE ] [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE THEATER ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE MALL ] ] ] ] ] [SL:DATE_TIME_DEPARTURE AT SEVEN PM ] ]"}, "prediction": "", "function_calls": [{"name": "get_estimated_duration", "arguments": {"destination": "the theater at the mall", "date_time_departure": "7 PM"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00001351.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC has traffic [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:CATEGORY_LOCATION the metroplex ] ] ] ] ] improved ]", "parameters": {}, "sentence": "has traffic around the metroplex improved", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "HAS TRAFFIC AROUND THE METROPLEX IMPROVED", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HAS TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:CATEGORY_LOCATION THE METROPLEX ] ] ] ] ] IMPROVED ]", "raw_data": {"file_id": "test_0/navigation_test_0/00001351.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "has traffic around the metroplex improved", "seqlogical": "[IN:GET_INFO_TRAFFIC has traffic [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:CATEGORY_LOCATION the metroplex ] ] ] ] ] improved ]", "normalized_utterance": "HAS TRAFFIC AROUND THE METROPLEX IMPROVED", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HAS TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:CATEGORY_LOCATION THE METROPLEX ] ] ] ] ] IMPROVED ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:CATEGORY_LOCATION THE METROPLEX ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "metroplex"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00003482.wav", "split": "test", "intent": "[IN:GET_DIRECTIONS What is the best route to [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the Presbyterian church ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:POINT_ON_MAP UMSL ] ] ] ] ] from [SL:SOURCE [IN:GET_LOCATION [SL:LOCATION_USER here ] ] ] ? ]", "parameters": {}, "sentence": "What is the best route to the  Presbyterian church near UMSL  from here?", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT IS THE BEST ROUTE TO THE PRESBYTERIAN CHURCH NEAR UMSL FROM HERE", "normalized_seqlogical": "[IN:GET_DIRECTIONS WHAT IS THE BEST ROUTE TO [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE PRESBYTERIAN CHURCH ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:POINT_ON_MAP UMSL ] ] ] ] ] FROM [SL:SOURCE [IN:GET_LOCATION [SL:LOCATION_USER HERE ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00003482.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "What is the best route to the  Presbyterian church near UMSL  from here?", "seqlogical": "[IN:GET_DIRECTIONS What is the best route to [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the Presbyterian church ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:POINT_ON_MAP UMSL ] ] ] ] ] from [SL:SOURCE [IN:GET_LOCATION [SL:LOCATION_USER here ] ] ] ? ]", "normalized_utterance": "WHAT IS THE BEST ROUTE TO THE PRESBYTERIAN CHURCH NEAR UMSL FROM HERE", "normalized_seqlogical": "[IN:GET_DIRECTIONS WHAT IS THE BEST ROUTE TO [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE PRESBYTERIAN CHURCH ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:POINT_ON_MAP UMSL ] ] ] ] ] FROM [SL:SOURCE [IN:GET_LOCATION [SL:LOCATION_USER HERE ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_DIRECTIONS [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE PRESBYTERIAN CHURCH ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:POINT_ON_MAP UMSL ] ] ] ] ] [SL:SOURCE [IN:GET_LOCATION [SL:LOCATION_USER HERE ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "Presbyterian church", "location_user": "UMSL"}}, {"name": "get_directions", "arguments": {"destination": "Presbyterian church near UMSL"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00005409.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC What is the backup on [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION the 101 Freeway ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION the 405 freeway ] ] ] ] ] ]", "parameters": {}, "sentence": "What is the backup on the 101 Freeway near the 405 freeway", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT IS THE BACKUP ON THE ONE OH ONE FREEWAY NEAR THE FOUR OH FIVE FREEWAY", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC WHAT IS THE BACKUP ON [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION THE ONE OH ONE FREEWAY ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION THE FOUR OH FIVE FREEWAY ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00005409.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "What is the backup on the 101 Freeway near the 405 freeway", "seqlogical": "[IN:GET_INFO_TRAFFIC What is the backup on [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION the 101 Freeway ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION the 405 freeway ] ] ] ] ] ]", "normalized_utterance": "WHAT IS THE BACKUP ON THE ONE OH ONE FREEWAY NEAR THE FOUR OH FIVE FREEWAY", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC WHAT IS THE BACKUP ON [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION THE ONE OH ONE FREEWAY ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION THE FOUR OH FIVE FREEWAY ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION THE ONE OH ONE FREEWAY ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION THE FOUR OH FIVE FREEWAY ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "101 Freeway near the 401 Freeway"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00002075.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_ARRIVAL will i arrive to [SL:DESTINATION [IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION my hotel ] ] ] on time for the [SL:DATE_TIME midnight ] [SL:CATEGORY_EVENT party ] ] ] if i leave [SL:DATE_TIME_DEPARTURE at 9 pm ] ? ]", "parameters": {}, "sentence": "will i arrive to my hotel on time for the midnight party if i leave at 9 pm?", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "WILL I ARRIVE TO MY HOTEL ON TIME FOR THE MIDNIGHT PARTY IF I LEAVE AT NINE PM", "normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL WILL I ARRIVE TO [SL:DESTINATION [IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION MY HOTEL ] ] ] ON TIME FOR THE [SL:DATE_TIME MIDNIGHT ] [SL:CATEGORY_EVENT PARTY ] ] ] IF I LEAVE [SL:DATE_TIME_DEPARTURE AT NINE PM ] ]", "raw_data": {"file_id": "test_1/navigation_test/00002075.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "will i arrive to my hotel on time for the midnight party if i leave at 9 pm?", "seqlogical": "[IN:GET_ESTIMATED_ARRIVAL will i arrive to [SL:DESTINATION [IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION my hotel ] ] ] on time for the [SL:DATE_TIME midnight ] [SL:CATEGORY_EVENT party ] ] ] if i leave [SL:DATE_TIME_DEPARTURE at 9 pm ] ? ]", "normalized_utterance": "WILL I ARRIVE TO MY HOTEL ON TIME FOR THE MIDNIGHT PARTY IF I LEAVE AT NINE PM", "normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL WILL I ARRIVE TO [SL:DESTINATION [IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION MY HOTEL ] ] ] ON TIME FOR THE [SL:DATE_TIME MIDNIGHT ] [SL:CATEGORY_EVENT PARTY ] ] ] IF I LEAVE [SL:DATE_TIME_DEPARTURE AT NINE PM ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL [SL:DESTINATION [IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION MY HOTEL ] ] ] [SL:DATE_TIME MIDNIGHT ] [SL:CATEGORY_EVENT PARTY ] ] ] [SL:DATE_TIME_DEPARTURE AT NINE PM ] ]"}, "prediction": "", "function_calls": [{"name": "get_estimated_arrival", "arguments": {"source": "current location", "destination": "hotel", "date_time_departure": "today at 9 PM"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00005648.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC Are there any delays on the way to see [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT the fireworks ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Times Square ] ] ] ] ] ? ]", "parameters": {}, "sentence": "Are there any delays on the way to see the fireworks at Times Square?", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "ARE THERE ANY DELAYS ON THE WAY TO SEE THE FIREWORKS AT TIMES SQUARE", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC ARE THERE ANY DELAYS ON THE WAY TO SEE [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE FIREWORKS ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP TIMES SQUARE ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00005648.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "Are there any delays on the way to see the fireworks at Times Square?", "seqlogical": "[IN:GET_INFO_TRAFFIC Are there any delays on the way to see [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT the fireworks ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Times Square ] ] ] ] ] ? ]", "normalized_utterance": "ARE THERE ANY DELAYS ON THE WAY TO SEE THE FIREWORKS AT TIMES SQUARE", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC ARE THERE ANY DELAYS ON THE WAY TO SEE [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE FIREWORKS ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP TIMES SQUARE ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE FIREWORKS ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP TIMES SQUARE ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "Times Square"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00005599.wav", "split": "test", "intent": "[IN:GET_DIRECTIONS Get directions to [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT Allison ] 's house in [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER Chicago ] ] ] ] ] from [SL:SOURCE [IN:GET_LOCATION_WORK [SL:CONTACT my ] new office in [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER Pleasantville ] ] ] ] ] . ]", "parameters": {}, "sentence": "Get directions to Allison's house in Chicago from my new office in Pleasantville.", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "GET DIRECTIONS TO ALLISON 'S HOUSE IN CHICAGO FROM MY NEW OFFICE IN PLEASANTVILLE", "normalized_seqlogical": "[IN:GET_DIRECTIONS GET DIRECTIONS TO [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT ALLISON ] 'S HOUSE IN [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER CHICAGO ] ] ] ] ] FROM [SL:SOURCE [IN:GET_LOCATION_WORK [SL:CONTACT MY ] NEW OFFICE IN [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER PLEASANTVILLE ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00005599.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "Get directions to Allison's house in Chicago from my new office in Pleasantville.", "seqlogical": "[IN:GET_DIRECTIONS Get directions to [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT Allison ] 's house in [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER Chicago ] ] ] ] ] from [SL:SOURCE [IN:GET_LOCATION_WORK [SL:CONTACT my ] new office in [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER Pleasantville ] ] ] ] ] . ]", "normalized_utterance": "GET DIRECTIONS TO ALLISON 'S HOUSE IN CHICAGO FROM MY NEW OFFICE IN PLEASANTVILLE", "normalized_seqlogical": "[IN:GET_DIRECTIONS GET DIRECTIONS TO [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT ALLISON ] 'S HOUSE IN [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER CHICAGO ] ] ] ] ] FROM [SL:SOURCE [IN:GET_LOCATION_WORK [SL:CONTACT MY ] NEW OFFICE IN [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER PLEASANTVILLE ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_DIRECTIONS [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT ALLISON ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER CHICAGO ] ] ] ] ] [SL:SOURCE [IN:GET_LOCATION_WORK [SL:CONTACT MY ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER PLEASANTVILLE ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "my new office", "location_user": "Pleasantville"}}, {"name": "get_directions", "arguments": {"source": "Pleasantville", "destination": "Allison's house in Chicago"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00005421.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_DURATION If I leave [SL:SOURCE [IN:GET_LOCATION_WORK [SL:CONTACT my ] job at [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER ACIT ] ] ] ] ] [SL:DATE_TIME_DEPARTURE right now ] how long will it take me to get to [SL:DESTINATION Ocean City ] ? ]", "parameters": {}, "sentence": "If I leave my job at ACIT right now how long will it take me to get to Ocean City?", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "IF I LEAVE MY JOB AT ACIT RIGHT NOW HOW LONG WILL IT TAKE ME TO GET TO OCEAN CITY", "normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION IF I LEAVE [SL:SOURCE [IN:GET_LOCATION_WORK [SL:CONTACT MY ] JOB AT [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER ACIT ] ] ] ] ] [SL:DATE_TIME_DEPARTURE RIGHT NOW ] HOW LONG WILL IT TAKE ME TO GET TO [SL:DESTINATION OCEAN CITY ] ]", "raw_data": {"file_id": "test_1/navigation_test/00005421.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "If I leave my job at ACIT right now how long will it take me to get to Ocean City?", "seqlogical": "[IN:GET_ESTIMATED_DURATION If I leave [SL:SOURCE [IN:GET_LOCATION_WORK [SL:CONTACT my ] job at [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER ACIT ] ] ] ] ] [SL:DATE_TIME_DEPARTURE right now ] how long will it take me to get to [SL:DESTINATION Ocean City ] ? ]", "normalized_utterance": "IF I LEAVE MY JOB AT ACIT RIGHT NOW HOW LONG WILL IT TAKE ME TO GET TO OCEAN CITY", "normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION IF I LEAVE [SL:SOURCE [IN:GET_LOCATION_WORK [SL:CONTACT MY ] JOB AT [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER ACIT ] ] ] ] ] [SL:DATE_TIME_DEPARTURE RIGHT NOW ] HOW LONG WILL IT TAKE ME TO GET TO [SL:DESTINATION OCEAN CITY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION [SL:SOURCE [IN:GET_LOCATION_WORK [SL:CONTACT MY ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER ACIT ] ] ] ] ] [SL:DATE_TIME_DEPARTURE RIGHT NOW ] [SL:DESTINATION OCEAN CITY ] ]"}, "prediction": "", "function_calls": [{"name": "get_estimated_duration", "arguments": {"source": "ACID", "destination": "Ocean City"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00005118.wav", "split": "test", "intent": "[IN:GET_DIRECTIONS Directions to a [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION parking garage ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:LOCATION_MODIFIER nearest ] [SL:POINT_ON_MAP key bank center ] ] ] ] ] ]", "parameters": {}, "sentence": "Directions to a parking garage nearest key bank center", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "DIRECTIONS TO A PARKING GARAGE NEAREST KEY BANK CENTER", "normalized_seqlogical": "[IN:GET_DIRECTIONS DIRECTIONS TO A [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION PARKING GARAGE ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:LOCATION_MODIFIER NEAREST ] [SL:POINT_ON_MAP KEY BANK CENTER ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00005118.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "Directions to a parking garage nearest key bank center", "seqlogical": "[IN:GET_DIRECTIONS Directions to a [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION parking garage ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:LOCATION_MODIFIER nearest ] [SL:POINT_ON_MAP key bank center ] ] ] ] ] ]", "normalized_utterance": "DIRECTIONS TO A PARKING GARAGE NEAREST KEY BANK CENTER", "normalized_seqlogical": "[IN:GET_DIRECTIONS DIRECTIONS TO A [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION PARKING GARAGE ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:LOCATION_MODIFIER NEAREST ] [SL:POINT_ON_MAP KEY BANK CENTER ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_DIRECTIONS [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION PARKING GARAGE ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:LOCATION_MODIFIER NEAREST ] [SL:POINT_ON_MAP KEY BANK CENTER ] ] ] ] ] ]"}, "prediction": "I will now get directions to a parking garage near KeyBank Center.", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near", "location": "KeyBank Center"}}, {"name": "get_directions", "arguments": {"destination": "KeyBank Center"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00002790.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC How 's traffic [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ] ] ]", "parameters": {}, "sentence": "How's traffic near me", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "HOW 'S TRAFFIC NEAR ME", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW 'S TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00002790.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "How's traffic near me", "seqlogical": "[IN:GET_INFO_TRAFFIC How 's traffic [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ] ] ]", "normalized_utterance": "HOW 'S TRAFFIC NEAR ME", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW 'S TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_info_traffic", "arguments": {"location": "MOCK_RESPONSE(get_location)"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00004561.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_DEPARTURE When do I need to leave [SL:SOURCE [IN:GET_LOCATION_HOME home ] ] to arrive in time for [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT my ] [SL:DATE_TIME 7 am ] [SL:CATEGORY_EVENT flight ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP MSP airport ] ] ] ] ] ? ]", "parameters": {}, "sentence": "When do I need to leave home to arrive in time for my 7am flight at MSP airport?", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "WHEN DO I NEED TO LEAVE HOME TO ARRIVE IN TIME FOR MY SEVEN AM FLIGHT AT MSP AIRPORT", "normalized_seqlogical": "[IN:GET_ESTIMATED_DEPARTURE WHEN DO I NEED TO LEAVE [SL:SOURCE [IN:GET_LOCATION_HOME HOME ] ] TO ARRIVE IN TIME FOR [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT MY ] [SL:DATE_TIME SEVEN AM ] [SL:CATEGORY_EVENT FLIGHT ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP MSP AIRPORT ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00004561.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "When do I need to leave home to arrive in time for my 7am flight at MSP airport?", "seqlogical": "[IN:GET_ESTIMATED_DEPARTURE When do I need to leave [SL:SOURCE [IN:GET_LOCATION_HOME home ] ] to arrive in time for [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT my ] [SL:DATE_TIME 7 am ] [SL:CATEGORY_EVENT flight ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP MSP airport ] ] ] ] ] ? ]", "normalized_utterance": "WHEN DO I NEED TO LEAVE HOME TO ARRIVE IN TIME FOR MY SEVEN AM FLIGHT AT MSP AIRPORT", "normalized_seqlogical": "[IN:GET_ESTIMATED_DEPARTURE WHEN DO I NEED TO LEAVE [SL:SOURCE [IN:GET_LOCATION_HOME HOME ] ] TO ARRIVE IN TIME FOR [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT MY ] [SL:DATE_TIME SEVEN AM ] [SL:CATEGORY_EVENT FLIGHT ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP MSP AIRPORT ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_DEPARTURE [SL:SOURCE [IN:GET_LOCATION_HOME ] ] [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT MY ] [SL:DATE_TIME SEVEN AM ] [SL:CATEGORY_EVENT FLIGHT ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP MSP AIRPORT ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_estimated_departure", "arguments": {"destination": "MSP Airport", "date_time_arrival": "7am"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00004796.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC How backed up is [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION I - 90 ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION Orlando ] ] ] ] ] ]", "parameters": {}, "sentence": "How backed up is I-90 near Orlando", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "HOW BACKED UP IS I NINETY NEAR ORLANDO", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW BACKED UP IS [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION I NINETY ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION ORLANDO ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00004796.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "How backed up is I-90 near Orlando", "seqlogical": "[IN:GET_INFO_TRAFFIC How backed up is [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION I - 90 ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION Orlando ] ] ] ] ] ]", "normalized_utterance": "HOW BACKED UP IS I NINETY NEAR ORLANDO", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW BACKED UP IS [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION I NINETY ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION ORLANDO ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION I NINETY ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION ORLANDO ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "I-9 in Orlando"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00001436.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_DURATION If I plan on leaving [SL:SOURCE [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION girlfriend ] 's house in [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER Opelousas ] ] ] ] ] [SL:DATE_TIME_DEPARTURE at 10AM ] , how long will my [SL:METHOD_TRAVEL drive ] be back to [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] 's house ] ] ? ]", "parameters": {}, "sentence": "If I plan on leaving my girlfriend's house in Opelousas at 10AM, how long will my drive be back to my mom's house?", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "IF I PLAN ON LEAVING MY GIRLFRIEND 'S HOUSE IN OPELOUSAS AT TEN AM HOW LONG WILL MY DRIVE BE BACK TO MY MOM 'S HOUSE", "normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION IF I PLAN ON LEAVING [SL:SOURCE [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION GIRLFRIEND ] 'S HOUSE IN [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER OPELOUSAS ] ] ] ] ] [SL:DATE_TIME_DEPARTURE AT TEN AM ] HOW LONG WILL MY [SL:METHOD_TRAVEL DRIVE ] BE BACK TO [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] 'S HOUSE ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00001436.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "If I plan on leaving my girlfriend's house in Opelousas at 10AM, how long will my drive be back to my mom's house?", "seqlogical": "[IN:GET_ESTIMATED_DURATION If I plan on leaving [SL:SOURCE [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION girlfriend ] 's house in [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER Opelousas ] ] ] ] ] [SL:DATE_TIME_DEPARTURE at 10AM ] , how long will my [SL:METHOD_TRAVEL drive ] be back to [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] 's house ] ] ? ]", "normalized_utterance": "IF I PLAN ON LEAVING MY GIRLFRIEND 'S HOUSE IN OPELOUSAS AT TEN AM HOW LONG WILL MY DRIVE BE BACK TO MY MOM 'S HOUSE", "normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION IF I PLAN ON LEAVING [SL:SOURCE [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION GIRLFRIEND ] 'S HOUSE IN [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER OPELOUSAS ] ] ] ] ] [SL:DATE_TIME_DEPARTURE AT TEN AM ] HOW LONG WILL MY [SL:METHOD_TRAVEL DRIVE ] BE BACK TO [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] 'S HOUSE ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION [SL:SOURCE [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION GIRLFRIEND ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER OPELOUSAS ] ] ] ] ] [SL:DATE_TIME_DEPARTURE AT TEN AM ] [SL:METHOD_TRAVEL DRIVE ] [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "my mom's house"}}, {"name": "get_estimated_duration", "arguments": {"source": "Opelousas", "destination": "my mom's house", "date_time_departure": "2023-10-11T10:00:00"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00001798.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC How is the traffic on [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the bypass ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS by ] [SL:CATEGORY_LOCATION the airport ] ] ] ] ] [SL:DATE_TIME this morning ] ? ]", "parameters": {}, "sentence": "How is the traffic on the bypass by the airport this morning?", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "HOW IS THE TRAFFIC ON THE BYPASS BY THE AIRPORT THIS MORNING", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW IS THE TRAFFIC ON [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE BYPASS ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS BY ] [SL:CATEGORY_LOCATION THE AIRPORT ] ] ] ] ] [SL:DATE_TIME THIS MORNING ] ]", "raw_data": {"file_id": "test_1/navigation_test/00001798.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "How is the traffic on the bypass by the airport this morning?", "seqlogical": "[IN:GET_INFO_TRAFFIC How is the traffic on [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the bypass ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS by ] [SL:CATEGORY_LOCATION the airport ] ] ] ] ] [SL:DATE_TIME this morning ] ? ]", "normalized_utterance": "HOW IS THE TRAFFIC ON THE BYPASS BY THE AIRPORT THIS MORNING", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW IS THE TRAFFIC ON [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE BYPASS ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS BY ] [SL:CATEGORY_LOCATION THE AIRPORT ] ] ] ] ] [SL:DATE_TIME THIS MORNING ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE BYPASS ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS BY ] [SL:CATEGORY_LOCATION THE AIRPORT ] ] ] ] ] [SL:DATE_TIME THIS MORNING ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "bypass by the airport", "date_time": "this morning"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00004366.wav", "split": "test", "intent": "[IN:GET_DIRECTIONS Find quickest route to [SL:DESTINATION [IN:GET_LOCATION the [SL:LOCATION_MODIFIER closest ] [SL:CATEGORY_LOCATION parking garage ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:POINT_ON_MAP MSG ] ] ] ] ] . ]", "parameters": {}, "sentence": "Find quickest route to the closest parking garage around MSG.", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "FIND QUICKEST ROUTE TO THE CLOSEST PARKING GARAGE AROUND MSG", "normalized_seqlogical": "[IN:GET_DIRECTIONS FIND QUICKEST ROUTE TO [SL:DESTINATION [IN:GET_LOCATION THE [SL:LOCATION_MODIFIER CLOSEST ] [SL:CATEGORY_LOCATION PARKING GARAGE ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:POINT_ON_MAP MSG ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00004366.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "Find quickest route to the closest parking garage around MSG.", "seqlogical": "[IN:GET_DIRECTIONS Find quickest route to [SL:DESTINATION [IN:GET_LOCATION the [SL:LOCATION_MODIFIER closest ] [SL:CATEGORY_LOCATION parking garage ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:POINT_ON_MAP MSG ] ] ] ] ] . ]", "normalized_utterance": "FIND QUICKEST ROUTE TO THE CLOSEST PARKING GARAGE AROUND MSG", "normalized_seqlogical": "[IN:GET_DIRECTIONS FIND QUICKEST ROUTE TO [SL:DESTINATION [IN:GET_LOCATION THE [SL:LOCATION_MODIFIER CLOSEST ] [SL:CATEGORY_LOCATION PARKING GARAGE ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:POINT_ON_MAP MSG ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_DIRECTIONS [SL:DESTINATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER CLOSEST ] [SL:CATEGORY_LOCATION PARKING GARAGE ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:POINT_ON_MAP MSG ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "closest parking garage", "location": "MSG"}}, {"name": "get_directions", "arguments": {"destination": "closest parking garage to MSG"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00003193.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_DURATION How long will it take for me to [SL:METHOD_TRAVEL drive ] to [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION sisters ] on [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER 5th avenue ] ] ] ] ] from [SL:SOURCE [IN:GET_LOCATION [SL:LOCATION_USER here ] ] ] ? ]", "parameters": {}, "sentence": "How long will it take for me to drive to my sisters on 5th avenue from here?", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "HOW LONG WILL IT TAKE FOR ME TO DRIVE TO MY SISTERS ON FIFTH AVENUE FROM HERE", "normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION HOW LONG WILL IT TAKE FOR ME TO [SL:METHOD_TRAVEL DRIVE ] TO [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION SISTERS ] ON [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER FIFTH AVENUE ] ] ] ] ] FROM [SL:SOURCE [IN:GET_LOCATION [SL:LOCATION_USER HERE ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00003193.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "How long will it take for me to drive to my sisters on 5th avenue from here?", "seqlogical": "[IN:GET_ESTIMATED_DURATION How long will it take for me to [SL:METHOD_TRAVEL drive ] to [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION sisters ] on [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER 5th avenue ] ] ] ] ] from [SL:SOURCE [IN:GET_LOCATION [SL:LOCATION_USER here ] ] ] ? ]", "normalized_utterance": "HOW LONG WILL IT TAKE FOR ME TO DRIVE TO MY SISTERS ON FIFTH AVENUE FROM HERE", "normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION HOW LONG WILL IT TAKE FOR ME TO [SL:METHOD_TRAVEL DRIVE ] TO [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION SISTERS ] ON [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER FIFTH AVENUE ] ] ] ] ] FROM [SL:SOURCE [IN:GET_LOCATION [SL:LOCATION_USER HERE ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION [SL:METHOD_TRAVEL DRIVE ] [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION SISTERS ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER FIFTH AVENUE ] ] ] ] ] [SL:SOURCE [IN:GET_LOCATION [SL:LOCATION_USER HERE ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "here"}}, {"name": "get_estimated_duration", "arguments": {"source": "current location", "destination": "Fifth Avenue"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00001478.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_ARRIVAL under current traffic conditions , will I arrive to [SL:DESTINATION [IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Metlife Stadium ] ] ] for [SL:NAME_EVENT the Met 's ] [SL:CATEGORY_EVENT game ] ] ] [SL:DATE_TIME_ARRIVAL by 6 pm ] ]", "parameters": {}, "sentence": "under current traffic conditions, will I arrive to Metlife Stadium for the Met's game by 6pm", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "UNDER CURRENT TRAFFIC CONDITIONS WILL I ARRIVE TO METLIFE STADIUM FOR THE MET 'S GAME BY SIX PM", "normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL UNDER CURRENT TRAFFIC CONDITIONS WILL I ARRIVE TO [SL:DESTINATION [IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP METLIFE STADIUM ] ] ] FOR [SL:NAME_EVENT THE MET 'S ] [SL:CATEGORY_EVENT GAME ] ] ] [SL:DATE_TIME_ARRIVAL BY SIX PM ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00001478.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "under current traffic conditions, will I arrive to Metlife Stadium for the Met's game by 6pm", "seqlogical": "[IN:GET_ESTIMATED_ARRIVAL under current traffic conditions , will I arrive to [SL:DESTINATION [IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Metlife Stadium ] ] ] for [SL:NAME_EVENT the Met 's ] [SL:CATEGORY_EVENT game ] ] ] [SL:DATE_TIME_ARRIVAL by 6 pm ] ]", "normalized_utterance": "UNDER CURRENT TRAFFIC CONDITIONS WILL I ARRIVE TO METLIFE STADIUM FOR THE MET 'S GAME BY SIX PM", "normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL UNDER CURRENT TRAFFIC CONDITIONS WILL I ARRIVE TO [SL:DESTINATION [IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP METLIFE STADIUM ] ] ] FOR [SL:NAME_EVENT THE MET 'S ] [SL:CATEGORY_EVENT GAME ] ] ] [SL:DATE_TIME_ARRIVAL BY SIX PM ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL [SL:DESTINATION [IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP METLIFE STADIUM ] ] ] [SL:NAME_EVENT THE MET 'S ] [SL:CATEGORY_EVENT GAME ] ] ] [SL:DATE_TIME_ARRIVAL BY SIX PM ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "current"}}, {"name": "get_estimated_departure", "arguments": {"source": "current location", "destination": "MetLife Stadium", "date_time_arrival": "today at 6pm"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00004492.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC What are the roads like [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_EVENT the [SL:NAME_EVENT Bulls ] [SL:CATEGORY_EVENT Rally ] ] ] ] ] ? ]", "parameters": {}, "sentence": "What are the roads like around the Bulls Rally?", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT ARE THE ROADS LIKE AROUND THE BULLS RALLY", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC WHAT ARE THE ROADS LIKE [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT THE [SL:NAME_EVENT BULLS ] [SL:CATEGORY_EVENT RALLY ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00004492.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "What are the roads like around the Bulls Rally?", "seqlogical": "[IN:GET_INFO_TRAFFIC What are the roads like [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_EVENT the [SL:NAME_EVENT Bulls ] [SL:CATEGORY_EVENT Rally ] ] ] ] ] ? ]", "normalized_utterance": "WHAT ARE THE ROADS LIKE AROUND THE BULLS RALLY", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC WHAT ARE THE ROADS LIKE [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT THE [SL:NAME_EVENT BULLS ] [SL:CATEGORY_EVENT RALLY ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:NAME_EVENT BULLS ] [SL:CATEGORY_EVENT RALLY ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_road_condition", "arguments": {"location": "Dubbo", "road_condition": "rally"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00003421.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_DURATION How long will it take me to get from [SL:SOURCE [IN:GET_LOCATION_WORK work ] ] to [SL:DESTINATION [IN:GET_EVENT [SL:ATTENDEE_EVENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION sister ] ] ] 's [SL:CATEGORY_EVENT dance recital ] ] ] if I leave [SL:DATE_TIME_DEPARTURE in 15 minutes ] ? ]", "parameters": {}, "sentence": "How long will it take me to get from work to my sister's dance recital if I leave in 15 minutes?", "domain": "navigation", "gender": "Male", "native": "Yes", "normalized_utterance": "HOW LONG WILL IT TAKE ME TO GET FROM WORK TO MY SISTER 'S DANCE RECITAL IF I LEAVE IN FIFTEEN MINUTES", "normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION HOW LONG WILL IT TAKE ME TO GET FROM [SL:SOURCE [IN:GET_LOCATION_WORK WORK ] ] TO [SL:DESTINATION [IN:GET_EVENT [SL:ATTENDEE_EVENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION SISTER ] ] ] 'S [SL:CATEGORY_EVENT DANCE RECITAL ] ] ] IF I LEAVE [SL:DATE_TIME_DEPARTURE IN FIFTEEN MINUTES ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00003421.wav", "domain": "navigation", "gender": "Male", "native": "Yes", "utterance": "How long will it take me to get from work to my sister's dance recital if I leave in 15 minutes?", "seqlogical": "[IN:GET_ESTIMATED_DURATION How long will it take me to get from [SL:SOURCE [IN:GET_LOCATION_WORK work ] ] to [SL:DESTINATION [IN:GET_EVENT [SL:ATTENDEE_EVENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION sister ] ] ] 's [SL:CATEGORY_EVENT dance recital ] ] ] if I leave [SL:DATE_TIME_DEPARTURE in 15 minutes ] ? ]", "normalized_utterance": "HOW LONG WILL IT TAKE ME TO GET FROM WORK TO MY SISTER 'S DANCE RECITAL IF I LEAVE IN FIFTEEN MINUTES", "normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION HOW LONG WILL IT TAKE ME TO GET FROM [SL:SOURCE [IN:GET_LOCATION_WORK WORK ] ] TO [SL:DESTINATION [IN:GET_EVENT [SL:ATTENDEE_EVENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION SISTER ] ] ] 'S [SL:CATEGORY_EVENT DANCE RECITAL ] ] ] IF I LEAVE [SL:DATE_TIME_DEPARTURE IN FIFTEEN MINUTES ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION [SL:SOURCE [IN:GET_LOCATION_WORK ] ] [SL:DESTINATION [IN:GET_EVENT [SL:ATTENDEE_EVENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION SISTER ] ] ] [SL:CATEGORY_EVENT DANCE RECITAL ] ] ] [SL:DATE_TIME_DEPARTURE IN FIFTEEN MINUTES ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "my sister's dance recital"}}, {"name": "get_estimated_duration", "arguments": {"source": "my sister's dance recital", "destination": "work", "date_time_departure": "in fifteen minutes"}}]}
{"filename": "stop_data/stop/test_1/music_test/00002760.wav", "split": "test", "intent": "[IN:CREATE_PLAYLIST_MUSIC Create [SL:MUSIC_TYPE playlist ] , Rock and add current [SL:MUSIC_TYPE song ] ]", "parameters": {}, "sentence": "Create playlist, Rock and add current song", "domain": "music", "gender": "Male", "native": "Unanswered", "normalized_utterance": "CREATE PLAYLIST ROCK AND ADD CURRENT SONG", "normalized_seqlogical": "[IN:CREATE_PLAYLIST_MUSIC CREATE [SL:MUSIC_TYPE PLAYLIST ] ROCK AND ADD CURRENT [SL:MUSIC_TYPE SONG ] ]", "raw_data": {"file_id": "test_1/music_test/00002760.wav", "domain": "music", "gender": "Male", "native": "Unanswered", "utterance": "Create playlist, Rock and add current song", "seqlogical": "[IN:CREATE_PLAYLIST_MUSIC Create [SL:MUSIC_TYPE playlist ] , Rock and add current [SL:MUSIC_TYPE song ] ]", "normalized_utterance": "CREATE PLAYLIST ROCK AND ADD CURRENT SONG", "normalized_seqlogical": "[IN:CREATE_PLAYLIST_MUSIC CREATE [SL:MUSIC_TYPE PLAYLIST ] ROCK AND ADD CURRENT [SL:MUSIC_TYPE SONG ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_PLAYLIST_MUSIC [SL:MUSIC_TYPE PLAYLIST ] [SL:MUSIC_TYPE SONG ] ]"}, "prediction": "", "function_calls": [{"name": "create_playlist_music", "arguments": {"music_playlist_title": "rock", "music_type": "playlist"}}, {"name": "add_to_playlist_music", "arguments": {"music_playlist_title": "rock", "music_type": "song"}}]}
{"filename": "stop_data/stop/test_0/music_test/00001308.wav", "split": "test", "intent": "[IN:PLAY_MUSIC play [SL:MUSIC_ARTIST_NAME black veil brides ] new [SL:MUSIC_TYPE song ] ]", "parameters": {}, "sentence": "play black veil brides new song", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "PLAY BLACK VEIL BRIDES NEW SONG", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_ARTIST_NAME BLACK VEIL BRIDES ] NEW [SL:MUSIC_TYPE SONG ] ]", "raw_data": {"file_id": "test_0/music_test_0/00001308.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "play black veil brides new song", "seqlogical": "[IN:PLAY_MUSIC play [SL:MUSIC_ARTIST_NAME black veil brides ] new [SL:MUSIC_TYPE song ] ]", "normalized_utterance": "PLAY BLACK VEIL BRIDES NEW SONG", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_ARTIST_NAME BLACK VEIL BRIDES ] NEW [SL:MUSIC_TYPE SONG ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_ARTIST_NAME BLACK VEIL BRIDES ] [SL:MUSIC_TYPE SONG ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_artist_name": "Black Veil Brides", "music_type": "new song"}}]}
{"filename": "stop_data/stop/test_0/music_test/00001924.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Play me a [SL:MUSIC_ARTIST_NAME Beatles ] [SL:MUSIC_TYPE song ] ]", "parameters": {}, "sentence": "Play me a Beatles song", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "PLAY ME A BEATLES SONG", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY ME A [SL:MUSIC_ARTIST_NAME BEATLES ] [SL:MUSIC_TYPE SONG ] ]", "raw_data": {"file_id": "test_0/music_test_0/00001924.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "Play me a Beatles song", "seqlogical": "[IN:PLAY_MUSIC Play me a [SL:MUSIC_ARTIST_NAME Beatles ] [SL:MUSIC_TYPE song ] ]", "normalized_utterance": "PLAY ME A BEATLES SONG", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY ME A [SL:MUSIC_ARTIST_NAME BEATLES ] [SL:MUSIC_TYPE SONG ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_ARTIST_NAME BEATLES ] [SL:MUSIC_TYPE SONG ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_artist_name": "Beatles"}}]}
{"filename": "stop_data/stop/test_1/music_test/00003769.wav", "split": "test", "intent": "[IN:REPLAY_MUSIC Repeat these [SL:MUSIC_TYPE tracks ] ]", "parameters": {}, "sentence": "Repeat these tracks", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "REPEAT THESE TRACKS", "normalized_seqlogical": "[IN:REPLAY_MUSIC REPEAT THESE [SL:MUSIC_TYPE TRACKS ] ]", "raw_data": {"file_id": "test_1/music_test/00003769.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "Repeat these tracks", "seqlogical": "[IN:REPLAY_MUSIC Repeat these [SL:MUSIC_TYPE tracks ] ]", "normalized_utterance": "REPEAT THESE TRACKS", "normalized_seqlogical": "[IN:REPLAY_MUSIC REPEAT THESE [SL:MUSIC_TYPE TRACKS ] ]", "decoupled_normalized_seqlogical": "[IN:REPLAY_MUSIC [SL:MUSIC_TYPE TRACKS ] ]"}, "prediction": "", "function_calls": [{"name": "replay_music", "arguments": {"music_type": "track"}}]}
{"filename": "stop_data/stop/test_0/music_test/00003677.wav", "split": "test", "intent": "[IN:DISLIKE_MUSIC That [SL:MUSIC_TYPE version ] of this [SL:MUSIC_TYPE song ] is not the one I want . ]", "parameters": {}, "sentence": "That version of this song is not the one I want.", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "THAT VERSION OF THIS SONG IS NOT THE ONE I WANT", "normalized_seqlogical": "[IN:DISLIKE_MUSIC THAT [SL:MUSIC_TYPE VERSION ] OF THIS [SL:MUSIC_TYPE SONG ] IS NOT THE ONE I WANT ]", "raw_data": {"file_id": "test_0/music_test_0/00003677.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "That version of this song is not the one I want.", "seqlogical": "[IN:DISLIKE_MUSIC That [SL:MUSIC_TYPE version ] of this [SL:MUSIC_TYPE song ] is not the one I want . ]", "normalized_utterance": "THAT VERSION OF THIS SONG IS NOT THE ONE I WANT", "normalized_seqlogical": "[IN:DISLIKE_MUSIC THAT [SL:MUSIC_TYPE VERSION ] OF THIS [SL:MUSIC_TYPE SONG ] IS NOT THE ONE I WANT ]", "decoupled_normalized_seqlogical": "[IN:DISLIKE_MUSIC [SL:MUSIC_TYPE VERSION ] [SL:MUSIC_TYPE SONG ] ]"}, "prediction": "", "function_calls": [{"name": "dislike_music", "arguments": {"music_type": "song"}}]}
{"filename": "stop_data/stop/test_0/music_test/00001995.wav", "split": "test", "intent": "[IN:STOP_MUSIC stop the [SL:MUSIC_TYPE music ] ]", "parameters": {}, "sentence": "stop the music", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "STOP THE MUSIC", "normalized_seqlogical": "[IN:STOP_MUSIC STOP THE [SL:MUSIC_TYPE MUSIC ] ]", "raw_data": {"file_id": "test_0/music_test_0/00001995.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "stop the music", "seqlogical": "[IN:STOP_MUSIC stop the [SL:MUSIC_TYPE music ] ]", "normalized_utterance": "STOP THE MUSIC", "normalized_seqlogical": "[IN:STOP_MUSIC STOP THE [SL:MUSIC_TYPE MUSIC ] ]", "decoupled_normalized_seqlogical": "[IN:STOP_MUSIC [SL:MUSIC_TYPE MUSIC ] ]"}, "prediction": "", "function_calls": [{"name": "stop_music", "arguments": {"music_type": "music"}}]}
{"filename": "stop_data/stop/test_1/music_test/00001375.wav", "split": "test", "intent": "[IN:REMOVE_FROM_PLAYLIST_MUSIC Dont play [SL:MUSIC_GENRE rock ] [SL:MUSIC_TYPE music ] ]", "parameters": {}, "sentence": "Dont play rock music", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "DONT PLAY ROCK MUSIC", "normalized_seqlogical": "[IN:REMOVE_FROM_PLAYLIST_MUSIC DONT PLAY [SL:MUSIC_GENRE ROCK ] [SL:MUSIC_TYPE MUSIC ] ]", "raw_data": {"file_id": "test_1/music_test/00001375.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "Dont play rock music", "seqlogical": "[IN:REMOVE_FROM_PLAYLIST_MUSIC Dont play [SL:MUSIC_GENRE rock ] [SL:MUSIC_TYPE music ] ]", "normalized_utterance": "DONT PLAY ROCK MUSIC", "normalized_seqlogical": "[IN:REMOVE_FROM_PLAYLIST_MUSIC DONT PLAY [SL:MUSIC_GENRE ROCK ] [SL:MUSIC_TYPE MUSIC ] ]", "decoupled_normalized_seqlogical": "[IN:REMOVE_FROM_PLAYLIST_MUSIC [SL:MUSIC_GENRE ROCK ] [SL:MUSIC_TYPE MUSIC ] ]"}, "prediction": "", "function_calls": [{"name": "stop_music", "arguments": {"music_type": "rock"}}]}
{"filename": "stop_data/stop/test_1/music_test/00002930.wav", "split": "test", "intent": "[IN:ADD_TO_PLAYLIST_MUSIC Can you add all of [SL:MUSIC_ARTIST_NAME Avenged Sevenfold ] 's [SL:MUSIC_TYPE tracks ] to a new [SL:MUSIC_TYPE playlist ] ]", "parameters": {}, "sentence": "Can you add all of Avenged Sevenfold's tracks to a new playlist", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "CAN YOU ADD ALL OF AVENGED SEVENFOLD 'S TRACKS TO A NEW PLAYLIST", "normalized_seqlogical": "[IN:ADD_TO_PLAYLIST_MUSIC CAN YOU ADD ALL OF [SL:MUSIC_ARTIST_NAME AVENGED SEVENFOLD ] 'S [SL:MUSIC_TYPE TRACKS ] TO A NEW [SL:MUSIC_TYPE PLAYLIST ] ]", "raw_data": {"file_id": "test_1/music_test/00002930.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "Can you add all of Avenged Sevenfold's tracks to a new playlist", "seqlogical": "[IN:ADD_TO_PLAYLIST_MUSIC Can you add all of [SL:MUSIC_ARTIST_NAME Avenged Sevenfold ] 's [SL:MUSIC_TYPE tracks ] to a new [SL:MUSIC_TYPE playlist ] ]", "normalized_utterance": "CAN YOU ADD ALL OF AVENGED SEVENFOLD 'S TRACKS TO A NEW PLAYLIST", "normalized_seqlogical": "[IN:ADD_TO_PLAYLIST_MUSIC CAN YOU ADD ALL OF [SL:MUSIC_ARTIST_NAME AVENGED SEVENFOLD ] 'S [SL:MUSIC_TYPE TRACKS ] TO A NEW [SL:MUSIC_TYPE PLAYLIST ] ]", "decoupled_normalized_seqlogical": "[IN:ADD_TO_PLAYLIST_MUSIC [SL:MUSIC_ARTIST_NAME AVENGED SEVENFOLD ] [SL:MUSIC_TYPE TRACKS ] [SL:MUSIC_TYPE PLAYLIST ] ]"}, "prediction": "", "function_calls": [{"name": "create_playlist_music", "arguments": {"music_artist_name": "Avenged Sevenfold", "music_playlist_title": "Avenged Sevenfold Collection"}}, {"name": "add_to_playlist_music", "arguments": {"music_artist_name": "Avenged Sevenfold", "music_type": "track", "music_playlist_title": "Avenged Sevenfold Collection"}}]}
{"filename": "stop_data/stop/test_0/music_test/00002103.wav", "split": "test", "intent": "[IN:SKIP_TRACK_MUSIC skip the [SL:ORDINAL next ] [SL:MUSIC_TYPE song ] ]", "parameters": {}, "sentence": "skip the next song", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "SKIP THE NEXT SONG", "normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC SKIP THE [SL:ORDINAL NEXT ] [SL:MUSIC_TYPE SONG ] ]", "raw_data": {"file_id": "test_0/music_test_0/00002103.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "skip the next song", "seqlogical": "[IN:SKIP_TRACK_MUSIC skip the [SL:ORDINAL next ] [SL:MUSIC_TYPE song ] ]", "normalized_utterance": "SKIP THE NEXT SONG", "normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC SKIP THE [SL:ORDINAL NEXT ] [SL:MUSIC_TYPE SONG ] ]", "decoupled_normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC [SL:ORDINAL NEXT ] [SL:MUSIC_TYPE SONG ] ]"}, "prediction": "", "function_calls": [{"name": "skip_track_music", "arguments": {"music_type": "song", "ordinal": "next"}}]}
{"filename": "stop_data/stop/test_0/music_test/00000216.wav", "split": "test", "intent": "[IN:DISLIKE_MUSIC I hate this [SL:MUSIC_TYPE song ] ]", "parameters": {}, "sentence": "I hate this song", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "I HATE THIS SONG", "normalized_seqlogical": "[IN:DISLIKE_MUSIC I HATE THIS [SL:MUSIC_TYPE SONG ] ]", "raw_data": {"file_id": "test_0/music_test_0/00000216.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "I hate this song", "seqlogical": "[IN:DISLIKE_MUSIC I hate this [SL:MUSIC_TYPE song ] ]", "normalized_utterance": "I HATE THIS SONG", "normalized_seqlogical": "[IN:DISLIKE_MUSIC I HATE THIS [SL:MUSIC_TYPE SONG ] ]", "decoupled_normalized_seqlogical": "[IN:DISLIKE_MUSIC [SL:MUSIC_TYPE SONG ] ]"}, "prediction": "", "function_calls": [{"name": "dislike_music", "arguments": {"music_type": "song"}}]}
{"filename": "stop_data/stop/test_0/music_test/00000609.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Play [SL:MUSIC_ARTIST_NAME Jolin Tsai ] Top Tracks on [SL:MUSIC_PROVIDER_NAME Kodi ] . ]", "parameters": {}, "sentence": "Play Jolin Tsai Top Tracks on Kodi.", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "PLAY JOLIN TSAI TOP TRACKS ON KODI", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_ARTIST_NAME JOLIN TSAI ] TOP TRACKS ON [SL:MUSIC_PROVIDER_NAME KODI ] ]", "raw_data": {"file_id": "test_0/music_test_0/00000609.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "Play Jolin Tsai Top Tracks on Kodi.", "seqlogical": "[IN:PLAY_MUSIC Play [SL:MUSIC_ARTIST_NAME Jolin Tsai ] Top Tracks on [SL:MUSIC_PROVIDER_NAME Kodi ] . ]", "normalized_utterance": "PLAY JOLIN TSAI TOP TRACKS ON KODI", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_ARTIST_NAME JOLIN TSAI ] TOP TRACKS ON [SL:MUSIC_PROVIDER_NAME KODI ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_ARTIST_NAME JOLIN TSAI ] [SL:MUSIC_PROVIDER_NAME KODI ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_track_title": "Jolene", "music_type": "top tracks", "music_provider_name": "Kodi"}}]}
{"filename": "stop_data/stop/test_1/music_test/00002223.wav", "split": "test", "intent": "[IN:SKIP_TRACK_MUSIC skip [SL:MUSIC_TYPE track ] ]", "parameters": {}, "sentence": "skip track", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "SKIP TRACK", "normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC SKIP [SL:MUSIC_TYPE TRACK ] ]", "raw_data": {"file_id": "test_1/music_test/00002223.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "skip track", "seqlogical": "[IN:SKIP_TRACK_MUSIC skip [SL:MUSIC_TYPE track ] ]", "normalized_utterance": "SKIP TRACK", "normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC SKIP [SL:MUSIC_TYPE TRACK ] ]", "decoupled_normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC [SL:MUSIC_TYPE TRACK ] ]"}, "prediction": "", "function_calls": [{"name": "skip_track_music", "arguments": {"music_type": "track", "ordinal": "next"}}]}
{"filename": "stop_data/stop/test_0/music_test/00001046.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Please play some [SL:MUSIC_GENRE upbeat ] [SL:MUSIC_TYPE songs ] ]", "parameters": {}, "sentence": "Please play some upbeat songs", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "PLEASE PLAY SOME UPBEAT SONGS", "normalized_seqlogical": "[IN:PLAY_MUSIC PLEASE PLAY SOME [SL:MUSIC_GENRE UPBEAT ] [SL:MUSIC_TYPE SONGS ] ]", "raw_data": {"file_id": "test_0/music_test_0/00001046.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "Please play some upbeat songs", "seqlogical": "[IN:PLAY_MUSIC Please play some [SL:MUSIC_GENRE upbeat ] [SL:MUSIC_TYPE songs ] ]", "normalized_utterance": "PLEASE PLAY SOME UPBEAT SONGS", "normalized_seqlogical": "[IN:PLAY_MUSIC PLEASE PLAY SOME [SL:MUSIC_GENRE UPBEAT ] [SL:MUSIC_TYPE SONGS ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_GENRE UPBEAT ] [SL:MUSIC_TYPE SONGS ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_type": "upbeat"}}]}
{"filename": "stop_data/stop/test_0/music_test/00001250.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Play another [SL:MUSIC_TYPE song ] by this [SL:MUSIC_TYPE artist ] . ]", "parameters": {}, "sentence": "Play another song by this artist.", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "PLAY ANOTHER SONG BY THIS ARTIST", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY ANOTHER [SL:MUSIC_TYPE SONG ] BY THIS [SL:MUSIC_TYPE ARTIST ] ]", "raw_data": {"file_id": "test_0/music_test_0/00001250.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "Play another song by this artist.", "seqlogical": "[IN:PLAY_MUSIC Play another [SL:MUSIC_TYPE song ] by this [SL:MUSIC_TYPE artist ] . ]", "normalized_utterance": "PLAY ANOTHER SONG BY THIS ARTIST", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY ANOTHER [SL:MUSIC_TYPE SONG ] BY THIS [SL:MUSIC_TYPE ARTIST ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_TYPE SONG ] [SL:MUSIC_TYPE ARTIST ] ]"}, "prediction": "", "function_calls": [{"name": "previous_track_music", "arguments": {"music_type": "song", "ordinal": "another"}}]}
{"filename": "stop_data/stop/test_0/music_test/00001448.wav", "split": "test", "intent": "[IN:UNSUPPORTED_MUSIC How do I address [SL:MUSIC_TYPE songs ] to my [SL:MUSIC_PROVIDER_NAME Spotify ] [SL:MUSIC_TYPE library ] ? ]", "parameters": {}, "sentence": "How do I address songs to my Spotify library?", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "HOW DO I ADDRESS SONGS TO MY SPOTIFY LIBRARY", "normalized_seqlogical": "[IN:UNSUPPORTED_MUSIC HOW DO I ADDRESS [SL:MUSIC_TYPE SONGS ] TO MY [SL:MUSIC_PROVIDER_NAME SPOTIFY ] [SL:MUSIC_TYPE LIBRARY ] ]", "raw_data": {"file_id": "test_0/music_test_0/00001448.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "How do I address songs to my Spotify library?", "seqlogical": "[IN:UNSUPPORTED_MUSIC How do I address [SL:MUSIC_TYPE songs ] to my [SL:MUSIC_PROVIDER_NAME Spotify ] [SL:MUSIC_TYPE library ] ? ]", "normalized_utterance": "HOW DO I ADDRESS SONGS TO MY SPOTIFY LIBRARY", "normalized_seqlogical": "[IN:UNSUPPORTED_MUSIC HOW DO I ADDRESS [SL:MUSIC_TYPE SONGS ] TO MY [SL:MUSIC_PROVIDER_NAME SPOTIFY ] [SL:MUSIC_TYPE LIBRARY ] ]", "decoupled_normalized_seqlogical": "[IN:UNSUPPORTED_MUSIC [SL:MUSIC_TYPE SONGS ] [SL:MUSIC_PROVIDER_NAME SPOTIFY ] [SL:MUSIC_TYPE LIBRARY ] ]"}, "prediction": "", "function_calls": [{"name": "set_default_provider_music", "arguments": {"music_provider_name": "Spotify"}}]}
{"filename": "stop_data/stop/test_0/music_test/00003333.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Play [SL:MUSIC_ARTIST_NAME Ludacris ] . ]", "parameters": {}, "sentence": "Play Ludacris.", "domain": "music", "gender": "Male", "native": "No", "normalized_utterance": "PLAY LUDACRIS", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_ARTIST_NAME LUDACRIS ] ]", "raw_data": {"file_id": "test_0/music_test_0/00003333.wav", "domain": "music", "gender": "Male", "native": "No", "utterance": "Play Ludacris.", "seqlogical": "[IN:PLAY_MUSIC Play [SL:MUSIC_ARTIST_NAME Ludacris ] . ]", "normalized_utterance": "PLAY LUDACRIS", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_ARTIST_NAME LUDACRIS ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_ARTIST_NAME LUDACRIS ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_artist_name": "Ludicrous"}}]}
{"filename": "stop_data/stop/test_1/music_test/00003352.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Play [SL:MUSIC_ARTIST_NAME Adam Lambert ] ]", "parameters": {}, "sentence": "Play Adam Lambert", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "PLAY ADAM LAMBERT", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_ARTIST_NAME ADAM LAMBERT ] ]", "raw_data": {"file_id": "test_1/music_test/00003352.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "Play Adam Lambert", "seqlogical": "[IN:PLAY_MUSIC Play [SL:MUSIC_ARTIST_NAME Adam Lambert ] ]", "normalized_utterance": "PLAY ADAM LAMBERT", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_ARTIST_NAME ADAM LAMBERT ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_ARTIST_NAME ADAM LAMBERT ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_artist_name": "Adam Lambert"}}]}
{"filename": "stop_data/stop/test_0/music_test/00003897.wav", "split": "test", "intent": "[IN:LOOP_MUSIC Please loop that current [SL:MUSIC_TYPE track ] ]", "parameters": {}, "sentence": "Please loop that current track", "domain": "music", "gender": "Male", "native": "No", "normalized_utterance": "PLEASE LOOP THAT CURRENT TRACK", "normalized_seqlogical": "[IN:LOOP_MUSIC PLEASE LOOP THAT CURRENT [SL:MUSIC_TYPE TRACK ] ]", "raw_data": {"file_id": "test_0/music_test_0/00003897.wav", "domain": "music", "gender": "Male", "native": "No", "utterance": "Please loop that current track", "seqlogical": "[IN:LOOP_MUSIC Please loop that current [SL:MUSIC_TYPE track ] ]", "normalized_utterance": "PLEASE LOOP THAT CURRENT TRACK", "normalized_seqlogical": "[IN:LOOP_MUSIC PLEASE LOOP THAT CURRENT [SL:MUSIC_TYPE TRACK ] ]", "decoupled_normalized_seqlogical": "[IN:LOOP_MUSIC [SL:MUSIC_TYPE TRACK ] ]"}, "prediction": "", "function_calls": [{"name": "loop_music", "arguments": {"music_type": "track"}}]}
{"filename": "stop_data/stop/test_1/music_test/00003465.wav", "split": "test", "intent": "[IN:PLAY_MUSIC play [SL:MUSIC_RADIO_ID 101.9 ] [SL:MUSIC_TYPE radio ] ]", "parameters": {}, "sentence": "play 101.9 radio", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "PLAY A HUNDRED ONE POINT NINE RADIO", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_RADIO_ID A HUNDRED ONE POINT NINE ] [SL:MUSIC_TYPE RADIO ] ]", "raw_data": {"file_id": "test_1/music_test/00003465.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "play 101.9 radio", "seqlogical": "[IN:PLAY_MUSIC play [SL:MUSIC_RADIO_ID 101.9 ] [SL:MUSIC_TYPE radio ] ]", "normalized_utterance": "PLAY A HUNDRED ONE POINT NINE RADIO", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_RADIO_ID A HUNDRED ONE POINT NINE ] [SL:MUSIC_TYPE RADIO ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_RADIO_ID A HUNDRED ONE POINT NINE ] [SL:MUSIC_TYPE RADIO ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_radio_id": "101.9"}}]}
{"filename": "stop_data/stop/test_1/music_test/00001630.wav", "split": "test", "intent": "[IN:PLAY_MUSIC play [SL:MUSIC_GENRE country ] [SL:MUSIC_TYPE music ] on [SL:MUSIC_PROVIDER_NAME spotify ] ]", "parameters": {}, "sentence": "play country music on spotify", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "PLAY COUNTRY MUSIC ON SPOTIFY", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_GENRE COUNTRY ] [SL:MUSIC_TYPE MUSIC ] ON [SL:MUSIC_PROVIDER_NAME SPOTIFY ] ]", "raw_data": {"file_id": "test_1/music_test/00001630.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "play country music on spotify", "seqlogical": "[IN:PLAY_MUSIC play [SL:MUSIC_GENRE country ] [SL:MUSIC_TYPE music ] on [SL:MUSIC_PROVIDER_NAME spotify ] ]", "normalized_utterance": "PLAY COUNTRY MUSIC ON SPOTIFY", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_GENRE COUNTRY ] [SL:MUSIC_TYPE MUSIC ] ON [SL:MUSIC_PROVIDER_NAME SPOTIFY ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_GENRE COUNTRY ] [SL:MUSIC_TYPE MUSIC ] [SL:MUSIC_PROVIDER_NAME SPOTIFY ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_type": "country", "music_provider_name": "Spotify"}}]}
{"filename": "stop_data/stop/test_1/music_test/00002093.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Can you play the [SL:MUSIC_PLAYLIST_TITLE today 's hits ] [SL:MUSIC_TYPE radio ] on [SL:MUSIC_PROVIDER_NAME Pandora ] ? ]", "parameters": {}, "sentence": "Can you play the today's hits radio on Pandora?", "domain": "music", "gender": "Male", "native": "Unanswered", "normalized_utterance": "CAN YOU PLAY THE TODAY 'S HITS RADIO ON PANDORA", "normalized_seqlogical": "[IN:PLAY_MUSIC CAN YOU PLAY THE [SL:MUSIC_PLAYLIST_TITLE TODAY 'S HITS ] [SL:MUSIC_TYPE RADIO ] ON [SL:MUSIC_PROVIDER_NAME PANDORA ] ]", "raw_data": {"file_id": "test_1/music_test/00002093.wav", "domain": "music", "gender": "Male", "native": "Unanswered", "utterance": "Can you play the today's hits radio on Pandora?", "seqlogical": "[IN:PLAY_MUSIC Can you play the [SL:MUSIC_PLAYLIST_TITLE today 's hits ] [SL:MUSIC_TYPE radio ] on [SL:MUSIC_PROVIDER_NAME Pandora ] ? ]", "normalized_utterance": "CAN YOU PLAY THE TODAY 'S HITS RADIO ON PANDORA", "normalized_seqlogical": "[IN:PLAY_MUSIC CAN YOU PLAY THE [SL:MUSIC_PLAYLIST_TITLE TODAY 'S HITS ] [SL:MUSIC_TYPE RADIO ] ON [SL:MUSIC_PROVIDER_NAME PANDORA ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_PLAYLIST_TITLE TODAY 'S HITS ] [SL:MUSIC_TYPE RADIO ] [SL:MUSIC_PROVIDER_NAME PANDORA ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_type": "radio", "music_provider_name": "Pandora", "music_playlist_title": "Today's Hits"}}]}
{"filename": "stop_data/stop/test_1/music_test/00003182.wav", "split": "test", "intent": "[IN:PLAY_MUSIC play [SL:MUSIC_ARTIST_NAME foo fighters ] ]", "parameters": {}, "sentence": "play foo fighters", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "PLAY FOO FIGHTERS", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_ARTIST_NAME FOO FIGHTERS ] ]", "raw_data": {"file_id": "test_1/music_test/00003182.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "play foo fighters", "seqlogical": "[IN:PLAY_MUSIC play [SL:MUSIC_ARTIST_NAME foo fighters ] ]", "normalized_utterance": "PLAY FOO FIGHTERS", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_ARTIST_NAME FOO FIGHTERS ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_ARTIST_NAME FOO FIGHTERS ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_artist_name": "Foo Fighters"}}]}
{"filename": "stop_data/stop/test_1/music_test/00002211.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Play a mixture of [SL:MUSIC_GENRE hip hop ] and [SL:MUSIC_GENRE rock ] [SL:MUSIC_TYPE music ] . ]", "parameters": {}, "sentence": "Play a mixture of hip hop and rock music.", "domain": "music", "gender": "Male", "native": "Unanswered", "normalized_utterance": "PLAY A MIXTURE OF HIP HOP AND ROCK MUSIC", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY A MIXTURE OF [SL:MUSIC_GENRE HIP HOP ] AND [SL:MUSIC_GENRE ROCK ] [SL:MUSIC_TYPE MUSIC ] ]", "raw_data": {"file_id": "test_1/music_test/00002211.wav", "domain": "music", "gender": "Male", "native": "Unanswered", "utterance": "Play a mixture of hip hop and rock music.", "seqlogical": "[IN:PLAY_MUSIC Play a mixture of [SL:MUSIC_GENRE hip hop ] and [SL:MUSIC_GENRE rock ] [SL:MUSIC_TYPE music ] . ]", "normalized_utterance": "PLAY A MIXTURE OF HIP HOP AND ROCK MUSIC", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY A MIXTURE OF [SL:MUSIC_GENRE HIP HOP ] AND [SL:MUSIC_GENRE ROCK ] [SL:MUSIC_TYPE MUSIC ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_GENRE HIP HOP ] [SL:MUSIC_GENRE ROCK ] [SL:MUSIC_TYPE MUSIC ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_genre": "hip hop, rock"}}]}
{"filename": "stop_data/stop/test_0/music_test/00001947.wav", "split": "test", "intent": "[IN:PLAY_MUSIC find [SL:MUSIC_GENRE popular ] [SL:MUSIC_TYPE playlists ] ]", "parameters": {}, "sentence": "find popular playlists", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "FIND POPULAR PLAYLISTS", "normalized_seqlogical": "[IN:PLAY_MUSIC FIND [SL:MUSIC_GENRE POPULAR ] [SL:MUSIC_TYPE PLAYLISTS ] ]", "raw_data": {"file_id": "test_0/music_test_0/00001947.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "find popular playlists", "seqlogical": "[IN:PLAY_MUSIC find [SL:MUSIC_GENRE popular ] [SL:MUSIC_TYPE playlists ] ]", "normalized_utterance": "FIND POPULAR PLAYLISTS", "normalized_seqlogical": "[IN:PLAY_MUSIC FIND [SL:MUSIC_GENRE POPULAR ] [SL:MUSIC_TYPE PLAYLISTS ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_GENRE POPULAR ] [SL:MUSIC_TYPE PLAYLISTS ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_type": "popular playlists"}}]}
{"filename": "stop_data/stop/test_0/music_test/00002775.wav", "split": "test", "intent": "[IN:PLAY_MUSIC can you play [SL:MUSIC_GENRE hip hop ] ]", "parameters": {}, "sentence": "can you play hip hop", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "CAN YOU PLAY HIP HOP", "normalized_seqlogical": "[IN:PLAY_MUSIC CAN YOU PLAY [SL:MUSIC_GENRE HIP HOP ] ]", "raw_data": {"file_id": "test_0/music_test_0/00002775.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "can you play hip hop", "seqlogical": "[IN:PLAY_MUSIC can you play [SL:MUSIC_GENRE hip hop ] ]", "normalized_utterance": "CAN YOU PLAY HIP HOP", "normalized_seqlogical": "[IN:PLAY_MUSIC CAN YOU PLAY [SL:MUSIC_GENRE HIP HOP ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_GENRE HIP HOP ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_genre": "hip hop"}}]}
{"filename": "stop_data/stop/test_1/music_test/00002325.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Can you play the new [SL:MUSIC_ARTIST_NAME alt - J ] [SL:MUSIC_TYPE album ] ]", "parameters": {}, "sentence": "Can you play the new alt-J album", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "CAN YOU PLAY THE NEW ALT J ALBUM", "normalized_seqlogical": "[IN:PLAY_MUSIC CAN YOU PLAY THE NEW [SL:MUSIC_ARTIST_NAME ALT J ] [SL:MUSIC_TYPE ALBUM ] ]", "raw_data": {"file_id": "test_1/music_test/00002325.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "Can you play the new alt-J album", "seqlogical": "[IN:PLAY_MUSIC Can you play the new [SL:MUSIC_ARTIST_NAME alt - J ] [SL:MUSIC_TYPE album ] ]", "normalized_utterance": "CAN YOU PLAY THE NEW ALT J ALBUM", "normalized_seqlogical": "[IN:PLAY_MUSIC CAN YOU PLAY THE NEW [SL:MUSIC_ARTIST_NAME ALT J ] [SL:MUSIC_TYPE ALBUM ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_ARTIST_NAME ALT J ] [SL:MUSIC_TYPE ALBUM ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_artist_name": "Alt-J", "music_type": "album"}}]}
{"filename": "stop_data/stop/test_1/music_test/00001381.wav", "split": "test", "intent": "[IN:SKIP_TRACK_MUSIC change the [SL:MUSIC_TYPE song ] that 's playing ]", "parameters": {}, "sentence": "change the song that's playing", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "CHANGE THE SONG THAT 'S PLAYING", "normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC CHANGE THE [SL:MUSIC_TYPE SONG ] THAT 'S PLAYING ]", "raw_data": {"file_id": "test_1/music_test/00001381.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "change the song that's playing", "seqlogical": "[IN:SKIP_TRACK_MUSIC change the [SL:MUSIC_TYPE song ] that 's playing ]", "normalized_utterance": "CHANGE THE SONG THAT 'S PLAYING", "normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC CHANGE THE [SL:MUSIC_TYPE SONG ] THAT 'S PLAYING ]", "decoupled_normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC [SL:MUSIC_TYPE SONG ] ]"}, "prediction": "", "function_calls": [{"name": "skip_track_music", "arguments": {"music_type": "song", "ordinal": "next"}}]}
{"filename": "stop_data/stop/test_0/music_test/00001936.wav", "split": "test", "intent": "[IN:REMOVE_FROM_PLAYLIST_MUSIC Delete this [SL:MUSIC_TYPE song ] from [SL:MUSIC_PLAYLIST_TITLE LOVE ] [SL:MUSIC_TYPE playlist ] . ]", "parameters": {}, "sentence": "Delete this song from LOVE playlist.", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "DELETE THIS SONG FROM LOVE PLAYLIST", "normalized_seqlogical": "[IN:REMOVE_FROM_PLAYLIST_MUSIC DELETE THIS [SL:MUSIC_TYPE SONG ] FROM [SL:MUSIC_PLAYLIST_TITLE LOVE ] [SL:MUSIC_TYPE PLAYLIST ] ]", "raw_data": {"file_id": "test_0/music_test_0/00001936.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "Delete this song from LOVE playlist.", "seqlogical": "[IN:REMOVE_FROM_PLAYLIST_MUSIC Delete this [SL:MUSIC_TYPE song ] from [SL:MUSIC_PLAYLIST_TITLE LOVE ] [SL:MUSIC_TYPE playlist ] . ]", "normalized_utterance": "DELETE THIS SONG FROM LOVE PLAYLIST", "normalized_seqlogical": "[IN:REMOVE_FROM_PLAYLIST_MUSIC DELETE THIS [SL:MUSIC_TYPE SONG ] FROM [SL:MUSIC_PLAYLIST_TITLE LOVE ] [SL:MUSIC_TYPE PLAYLIST ] ]", "decoupled_normalized_seqlogical": "[IN:REMOVE_FROM_PLAYLIST_MUSIC [SL:MUSIC_TYPE SONG ] [SL:MUSIC_PLAYLIST_TITLE LOVE ] [SL:MUSIC_TYPE PLAYLIST ] ]"}, "prediction": "", "function_calls": [{"name": "remove_from_playlist_music", "arguments": {"music_playlist_title": "love", "music_type": "song"}}]}
{"filename": "stop_data/stop/test_1/music_test/00000961.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Play [SL:MUSIC_ARTIST_NAME Eminem ] [SL:MUSIC_TYPE soundtrack ] ]", "parameters": {}, "sentence": "Play Eminem soundtrack", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "PLAY EMINEM SOUNDTRACK", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_ARTIST_NAME EMINEM ] [SL:MUSIC_TYPE SOUNDTRACK ] ]", "raw_data": {"file_id": "test_1/music_test/00000961.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "Play Eminem soundtrack", "seqlogical": "[IN:PLAY_MUSIC Play [SL:MUSIC_ARTIST_NAME Eminem ] [SL:MUSIC_TYPE soundtrack ] ]", "normalized_utterance": "PLAY EMINEM SOUNDTRACK", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_ARTIST_NAME EMINEM ] [SL:MUSIC_TYPE SOUNDTRACK ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_ARTIST_NAME EMINEM ] [SL:MUSIC_TYPE SOUNDTRACK ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_artist_name": "Eminem"}}]}
{"filename": "stop_data/stop/test_0/music_test/00000102.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Play [SL:MUSIC_ARTIST_NAME Rihanna ] 's newest [SL:MUSIC_TYPE songs ] ]", "parameters": {}, "sentence": "Play Rihanna's newest songs", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "PLAY RIHANNA 'S NEWEST SONGS", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_ARTIST_NAME RIHANNA ] 'S NEWEST [SL:MUSIC_TYPE SONGS ] ]", "raw_data": {"file_id": "test_0/music_test_0/00000102.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "Play Rihanna's newest songs", "seqlogical": "[IN:PLAY_MUSIC Play [SL:MUSIC_ARTIST_NAME Rihanna ] 's newest [SL:MUSIC_TYPE songs ] ]", "normalized_utterance": "PLAY RIHANNA 'S NEWEST SONGS", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_ARTIST_NAME RIHANNA ] 'S NEWEST [SL:MUSIC_TYPE SONGS ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_ARTIST_NAME RIHANNA ] [SL:MUSIC_TYPE SONGS ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_artist_name": "Rihanna", "music_type": "newest"}}]}
{"filename": "stop_data/stop/test_0/music_test/00000910.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Please play [SL:MUSIC_TRACK_TITLE Stay With Me ] by [SL:MUSIC_ARTIST_NAME Sam Smith ] . ]", "parameters": {}, "sentence": "Please play Stay With Me by Sam Smith.", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "PLEASE PLAY STAY WITH ME BY SAM SMITH", "normalized_seqlogical": "[IN:PLAY_MUSIC PLEASE PLAY [SL:MUSIC_TRACK_TITLE STAY WITH ME ] BY [SL:MUSIC_ARTIST_NAME SAM SMITH ] ]", "raw_data": {"file_id": "test_0/music_test_0/00000910.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "Please play Stay With Me by Sam Smith.", "seqlogical": "[IN:PLAY_MUSIC Please play [SL:MUSIC_TRACK_TITLE Stay With Me ] by [SL:MUSIC_ARTIST_NAME Sam Smith ] . ]", "normalized_utterance": "PLEASE PLAY STAY WITH ME BY SAM SMITH", "normalized_seqlogical": "[IN:PLAY_MUSIC PLEASE PLAY [SL:MUSIC_TRACK_TITLE STAY WITH ME ] BY [SL:MUSIC_ARTIST_NAME SAM SMITH ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_TRACK_TITLE STAY WITH ME ] [SL:MUSIC_ARTIST_NAME SAM SMITH ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_track_title": "Stay With Me", "music_artist_name": "Sam Smith"}}]}
{"filename": "stop_data/stop/test_1/music_test/00002637.wav", "split": "test", "intent": "[IN:ADD_TO_PLAYLIST_MUSIC Add this [SL:MUSIC_TYPE song ] to my [SL:MUSIC_PROVIDER_NAME Spotify ] [SL:MUSIC_TYPE playlist ] ]", "parameters": {}, "sentence": "Add this song to my Spotify playlist", "domain": "music", "gender": "Male", "native": "No", "normalized_utterance": "ADD THIS SONG TO MY SPOTIFY PLAYLIST", "normalized_seqlogical": "[IN:ADD_TO_PLAYLIST_MUSIC ADD THIS [SL:MUSIC_TYPE SONG ] TO MY [SL:MUSIC_PROVIDER_NAME SPOTIFY ] [SL:MUSIC_TYPE PLAYLIST ] ]", "raw_data": {"file_id": "test_1/music_test/00002637.wav", "domain": "music", "gender": "Male", "native": "No", "utterance": "Add this song to my Spotify playlist", "seqlogical": "[IN:ADD_TO_PLAYLIST_MUSIC Add this [SL:MUSIC_TYPE song ] to my [SL:MUSIC_PROVIDER_NAME Spotify ] [SL:MUSIC_TYPE playlist ] ]", "normalized_utterance": "ADD THIS SONG TO MY SPOTIFY PLAYLIST", "normalized_seqlogical": "[IN:ADD_TO_PLAYLIST_MUSIC ADD THIS [SL:MUSIC_TYPE SONG ] TO MY [SL:MUSIC_PROVIDER_NAME SPOTIFY ] [SL:MUSIC_TYPE PLAYLIST ] ]", "decoupled_normalized_seqlogical": "[IN:ADD_TO_PLAYLIST_MUSIC [SL:MUSIC_TYPE SONG ] [SL:MUSIC_PROVIDER_NAME SPOTIFY ] [SL:MUSIC_TYPE PLAYLIST ] ]"}, "prediction": "", "function_calls": [{"name": "add_to_playlist_music", "arguments": {"music_provider_name": "Spotify", "music_type": "song"}}]}
{"filename": "stop_data/stop/test_1/music_test/00001182.wav", "split": "test", "intent": "[IN:SKIP_TRACK_MUSIC skip this [SL:MUSIC_TYPE track ] ]", "parameters": {}, "sentence": "skip this track", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "SKIP THIS TRACK", "normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC SKIP THIS [SL:MUSIC_TYPE TRACK ] ]", "raw_data": {"file_id": "test_1/music_test/00001182.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "skip this track", "seqlogical": "[IN:SKIP_TRACK_MUSIC skip this [SL:MUSIC_TYPE track ] ]", "normalized_utterance": "SKIP THIS TRACK", "normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC SKIP THIS [SL:MUSIC_TYPE TRACK ] ]", "decoupled_normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC [SL:MUSIC_TYPE TRACK ] ]"}, "prediction": "", "function_calls": [{"name": "skip_track_music", "arguments": {"music_type": "track", "ordinal": "next"}}]}
{"filename": "stop_data/stop/test_0/music_test/00003728.wav", "split": "test", "intent": "[IN:DISLIKE_MUSIC I hate listening to this [SL:MUSIC_TYPE song ] ]", "parameters": {}, "sentence": "I hate listening to this song", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "I HATE LISTENING TO THIS SONG", "normalized_seqlogical": "[IN:DISLIKE_MUSIC I HATE LISTENING TO THIS [SL:MUSIC_TYPE SONG ] ]", "raw_data": {"file_id": "test_0/music_test_0/00003728.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "I hate listening to this song", "seqlogical": "[IN:DISLIKE_MUSIC I hate listening to this [SL:MUSIC_TYPE song ] ]", "normalized_utterance": "I HATE LISTENING TO THIS SONG", "normalized_seqlogical": "[IN:DISLIKE_MUSIC I HATE LISTENING TO THIS [SL:MUSIC_TYPE SONG ] ]", "decoupled_normalized_seqlogical": "[IN:DISLIKE_MUSIC [SL:MUSIC_TYPE SONG ] ]"}, "prediction": "", "function_calls": [{"name": "dislike_music", "arguments": {"music_type": "song"}}]}
{"filename": "stop_data/stop/test_0/music_test/00003267.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Play some [SL:MUSIC_ARTIST_NAME Odd Future ] ]", "parameters": {}, "sentence": "Play some Odd Future", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "PLAY SOME ODD FUTURE", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY SOME [SL:MUSIC_ARTIST_NAME ODD FUTURE ] ]", "raw_data": {"file_id": "test_0/music_test_0/00003267.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "Play some Odd Future", "seqlogical": "[IN:PLAY_MUSIC Play some [SL:MUSIC_ARTIST_NAME Odd Future ] ]", "normalized_utterance": "PLAY SOME ODD FUTURE", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY SOME [SL:MUSIC_ARTIST_NAME ODD FUTURE ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_ARTIST_NAME ODD FUTURE ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_artist_name": "Odd Future"}}]}
{"filename": "stop_data/stop/test_0/music_test/00003247.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Can you play [SL:MUSIC_ARTIST_NAME Guns n Roses ] ? ]", "parameters": {}, "sentence": "Can you play Guns n Roses?", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "CAN YOU PLAY GUNS N ROSES", "normalized_seqlogical": "[IN:PLAY_MUSIC CAN YOU PLAY [SL:MUSIC_ARTIST_NAME GUNS N ROSES ] ]", "raw_data": {"file_id": "test_0/music_test_0/00003247.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "Can you play Guns n Roses?", "seqlogical": "[IN:PLAY_MUSIC Can you play [SL:MUSIC_ARTIST_NAME Guns n Roses ] ? ]", "normalized_utterance": "CAN YOU PLAY GUNS N ROSES", "normalized_seqlogical": "[IN:PLAY_MUSIC CAN YOU PLAY [SL:MUSIC_ARTIST_NAME GUNS N ROSES ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_ARTIST_NAME GUNS N ROSES ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_artist_name": "Guns N' Roses"}}]}
{"filename": "stop_data/stop/test_1/music_test/00003686.wav", "split": "test", "intent": "[IN:DISLIKE_MUSIC This [SL:MUSIC_TYPE song ] , I don't like . ]", "parameters": {}, "sentence": "This song, I don't like.", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "THIS SONG I DON'T LIKE", "normalized_seqlogical": "[IN:DISLIKE_MUSIC THIS [SL:MUSIC_TYPE SONG ] I DON'T LIKE ]", "raw_data": {"file_id": "test_1/music_test/00003686.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "This song, I don't like.", "seqlogical": "[IN:DISLIKE_MUSIC This [SL:MUSIC_TYPE song ] , I don't like . ]", "normalized_utterance": "THIS SONG I DON'T LIKE", "normalized_seqlogical": "[IN:DISLIKE_MUSIC THIS [SL:MUSIC_TYPE SONG ] I DON'T LIKE ]", "decoupled_normalized_seqlogical": "[IN:DISLIKE_MUSIC [SL:MUSIC_TYPE SONG ] ]"}, "prediction": "", "function_calls": [{"name": "dislike_music", "arguments": {"music_type": "song"}}]}
{"filename": "stop_data/stop/test_1/music_test/00003270.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Play [SL:MUSIC_ARTIST_NAME Jay Z ] ]", "parameters": {}, "sentence": "Play Jay Z", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "PLAY JAY Z", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_ARTIST_NAME JAY Z ] ]", "raw_data": {"file_id": "test_1/music_test/00003270.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "Play Jay Z", "seqlogical": "[IN:PLAY_MUSIC Play [SL:MUSIC_ARTIST_NAME Jay Z ] ]", "normalized_utterance": "PLAY JAY Z", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_ARTIST_NAME JAY Z ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_ARTIST_NAME JAY Z ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_artist_name": "Jay-Z"}}]}
{"filename": "stop_data/stop/test_1/music_test/00004103.wav", "split": "test", "intent": "[IN:START_SHUFFLE_MUSIC You can play [SL:MUSIC_PROVIDER_NAME pandora ] on shuffle , yeah ? ]", "parameters": {}, "sentence": "You can play pandora on shuffle, yeah?", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "YOU CAN PLAY PANDORA ON SHUFFLE YEAH", "normalized_seqlogical": "[IN:START_SHUFFLE_MUSIC YOU CAN PLAY [SL:MUSIC_PROVIDER_NAME PANDORA ] ON SHUFFLE YEAH ]", "raw_data": {"file_id": "test_1/music_test/00004103.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "You can play pandora on shuffle, yeah?", "seqlogical": "[IN:START_SHUFFLE_MUSIC You can play [SL:MUSIC_PROVIDER_NAME pandora ] on shuffle , yeah ? ]", "normalized_utterance": "YOU CAN PLAY PANDORA ON SHUFFLE YEAH", "normalized_seqlogical": "[IN:START_SHUFFLE_MUSIC YOU CAN PLAY [SL:MUSIC_PROVIDER_NAME PANDORA ] ON SHUFFLE YEAH ]", "decoupled_normalized_seqlogical": "[IN:START_SHUFFLE_MUSIC [SL:MUSIC_PROVIDER_NAME PANDORA ] ]"}, "prediction": "", "function_calls": [{"name": "start_shuffle_music", "arguments": {"music_provider_name": "Pandora"}}]}
{"filename": "stop_data/stop/test_0/music_test/00000460.wav", "split": "test", "intent": "[IN:PLAY_MUSIC play some [SL:MUSIC_GENRE folk ] [SL:MUSIC_TYPE music ] ]", "parameters": {}, "sentence": "play some folk music", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "PLAY SOME FOLK MUSIC", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY SOME [SL:MUSIC_GENRE FOLK ] [SL:MUSIC_TYPE MUSIC ] ]", "raw_data": {"file_id": "test_0/music_test_0/00000460.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "play some folk music", "seqlogical": "[IN:PLAY_MUSIC play some [SL:MUSIC_GENRE folk ] [SL:MUSIC_TYPE music ] ]", "normalized_utterance": "PLAY SOME FOLK MUSIC", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY SOME [SL:MUSIC_GENRE FOLK ] [SL:MUSIC_TYPE MUSIC ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_GENRE FOLK ] [SL:MUSIC_TYPE MUSIC ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_genre": "folk"}}]}
{"filename": "stop_data/stop/test_0/music_test/00002196.wav", "split": "test", "intent": "[IN:PLAY_MUSIC play a [SL:MUSIC_GENRE rock ] [SL:MUSIC_TYPE station ] on [SL:MUSIC_PROVIDER_NAME pandora ] ]", "parameters": {}, "sentence": "play a rock station on pandora", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "PLAY A ROCK STATION ON PANDORA", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY A [SL:MUSIC_GENRE ROCK ] [SL:MUSIC_TYPE STATION ] ON [SL:MUSIC_PROVIDER_NAME PANDORA ] ]", "raw_data": {"file_id": "test_0/music_test_0/00002196.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "play a rock station on pandora", "seqlogical": "[IN:PLAY_MUSIC play a [SL:MUSIC_GENRE rock ] [SL:MUSIC_TYPE station ] on [SL:MUSIC_PROVIDER_NAME pandora ] ]", "normalized_utterance": "PLAY A ROCK STATION ON PANDORA", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY A [SL:MUSIC_GENRE ROCK ] [SL:MUSIC_TYPE STATION ] ON [SL:MUSIC_PROVIDER_NAME PANDORA ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_GENRE ROCK ] [SL:MUSIC_TYPE STATION ] [SL:MUSIC_PROVIDER_NAME PANDORA ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_type": "station", "music_genre": "rock", "music_provider_name": "Pandora"}}]}
{"filename": "stop_data/stop/test_1/music_test/00000274.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Please play [SL:MUSIC_TRACK_TITLE sorry ] by [SL:MUSIC_ARTIST_NAME beyonce ] ]", "parameters": {}, "sentence": "Please play sorry by beyonce", "domain": "music", "gender": "Male", "native": "No", "normalized_utterance": "PLEASE PLAY SORRY BY BEYONCE", "normalized_seqlogical": "[IN:PLAY_MUSIC PLEASE PLAY [SL:MUSIC_TRACK_TITLE SORRY ] BY [SL:MUSIC_ARTIST_NAME BEYONCE ] ]", "raw_data": {"file_id": "test_1/music_test/00000274.wav", "domain": "music", "gender": "Male", "native": "No", "utterance": "Please play sorry by beyonce", "seqlogical": "[IN:PLAY_MUSIC Please play [SL:MUSIC_TRACK_TITLE sorry ] by [SL:MUSIC_ARTIST_NAME beyonce ] ]", "normalized_utterance": "PLEASE PLAY SORRY BY BEYONCE", "normalized_seqlogical": "[IN:PLAY_MUSIC PLEASE PLAY [SL:MUSIC_TRACK_TITLE SORRY ] BY [SL:MUSIC_ARTIST_NAME BEYONCE ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_TRACK_TITLE SORRY ] [SL:MUSIC_ARTIST_NAME BEYONCE ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_track_title": "Sorry", "music_artist_name": "Beyonce"}}]}
{"filename": "stop_data/stop/test_1/music_test/00001158.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Play [SL:MUSIC_GENRE Country ] [SL:MUSIC_TYPE music ] ]", "parameters": {}, "sentence": "Play Country music", "domain": "music", "gender": "Male", "native": "No", "normalized_utterance": "PLAY COUNTRY MUSIC", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_GENRE COUNTRY ] [SL:MUSIC_TYPE MUSIC ] ]", "raw_data": {"file_id": "test_1/music_test/00001158.wav", "domain": "music", "gender": "Male", "native": "No", "utterance": "Play Country music", "seqlogical": "[IN:PLAY_MUSIC Play [SL:MUSIC_GENRE Country ] [SL:MUSIC_TYPE music ] ]", "normalized_utterance": "PLAY COUNTRY MUSIC", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_GENRE COUNTRY ] [SL:MUSIC_TYPE MUSIC ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_GENRE COUNTRY ] [SL:MUSIC_TYPE MUSIC ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_genre": "country"}}]}
{"filename": "stop_data/stop/test_1/music_test/00002696.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Turn on [SL:MUSIC_PROVIDER_NAME NPR ] ]", "parameters": {}, "sentence": "Turn on NPR", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "TURN ON NPR", "normalized_seqlogical": "[IN:PLAY_MUSIC TURN ON [SL:MUSIC_PROVIDER_NAME NPR ] ]", "raw_data": {"file_id": "test_1/music_test/00002696.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "Turn on NPR", "seqlogical": "[IN:PLAY_MUSIC Turn on [SL:MUSIC_PROVIDER_NAME NPR ] ]", "normalized_utterance": "TURN ON NPR", "normalized_seqlogical": "[IN:PLAY_MUSIC TURN ON [SL:MUSIC_PROVIDER_NAME NPR ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_PROVIDER_NAME NPR ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_provider_name": "NPR"}}]}
{"filename": "stop_data/stop/test_1/music_test/00001584.wav", "split": "test", "intent": "[IN:PLAY_MUSIC play some [SL:MUSIC_TYPE music ] ]", "parameters": {}, "sentence": "play some music", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "PLAY SOME MUSIC", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY SOME [SL:MUSIC_TYPE MUSIC ] ]", "raw_data": {"file_id": "test_1/music_test/00001584.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "play some music", "seqlogical": "[IN:PLAY_MUSIC play some [SL:MUSIC_TYPE music ] ]", "normalized_utterance": "PLAY SOME MUSIC", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY SOME [SL:MUSIC_TYPE MUSIC ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_TYPE MUSIC ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_type": "music"}}]}
{"filename": "stop_data/stop/test_1/music_test/00000465.wav", "split": "test", "intent": "[IN:SKIP_TRACK_MUSIC skip [SL:MUSIC_TYPE track ] . ]", "parameters": {}, "sentence": "skip track.", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "SKIP TRACK", "normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC SKIP [SL:MUSIC_TYPE TRACK ] ]", "raw_data": {"file_id": "test_1/music_test/00000465.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "skip track.", "seqlogical": "[IN:SKIP_TRACK_MUSIC skip [SL:MUSIC_TYPE track ] . ]", "normalized_utterance": "SKIP TRACK", "normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC SKIP [SL:MUSIC_TYPE TRACK ] ]", "decoupled_normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC [SL:MUSIC_TYPE TRACK ] ]"}, "prediction": "", "function_calls": [{"name": "skip_track_music", "arguments": {"music_type": "track", "ordinal": "next"}}]}
{"filename": "stop_data/stop/test_1/music_test/00001931.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Change the [SL:MUSIC_TYPE song ] . ]", "parameters": {}, "sentence": "Change the song.", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "CHANGE THE SONG", "normalized_seqlogical": "[IN:PLAY_MUSIC CHANGE THE [SL:MUSIC_TYPE SONG ] ]", "raw_data": {"file_id": "test_1/music_test/00001931.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "Change the song.", "seqlogical": "[IN:PLAY_MUSIC Change the [SL:MUSIC_TYPE song ] . ]", "normalized_utterance": "CHANGE THE SONG", "normalized_seqlogical": "[IN:PLAY_MUSIC CHANGE THE [SL:MUSIC_TYPE SONG ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_TYPE SONG ] ]"}, "prediction": "", "function_calls": [{"name": "skip_track_music", "arguments": {"music_type": "song", "ordinal": "next"}}]}
{"filename": "stop_data/stop/test_0/music_test/00003927.wav", "split": "test", "intent": "[IN:LOOP_MUSIC Could you play the [SL:MUSIC_TYPE album ] on loop ? ]", "parameters": {}, "sentence": "Could you play the album on loop?", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "COULD YOU PLAY THE ALBUM ON LOOP", "normalized_seqlogical": "[IN:LOOP_MUSIC COULD YOU PLAY THE [SL:MUSIC_TYPE ALBUM ] ON LOOP ]", "raw_data": {"file_id": "test_0/music_test_0/00003927.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "Could you play the album on loop?", "seqlogical": "[IN:LOOP_MUSIC Could you play the [SL:MUSIC_TYPE album ] on loop ? ]", "normalized_utterance": "COULD YOU PLAY THE ALBUM ON LOOP", "normalized_seqlogical": "[IN:LOOP_MUSIC COULD YOU PLAY THE [SL:MUSIC_TYPE ALBUM ] ON LOOP ]", "decoupled_normalized_seqlogical": "[IN:LOOP_MUSIC [SL:MUSIC_TYPE ALBUM ] ]"}, "prediction": "", "function_calls": [{"name": "loop_music", "arguments": {"music_type": "album"}}]}
{"filename": "stop_data/stop/test_0/music_test/00004086.wav", "split": "test", "intent": "[IN:START_SHUFFLE_MUSIC Can I have [SL:MUSIC_ARTIST_NAME Shakira ] on shuffle ? ]", "parameters": {}, "sentence": "Can I have Shakira on shuffle?", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "CAN I HAVE SHAKIRA ON SHUFFLE", "normalized_seqlogical": "[IN:START_SHUFFLE_MUSIC CAN I HAVE [SL:MUSIC_ARTIST_NAME SHAKIRA ] ON SHUFFLE ]", "raw_data": {"file_id": "test_0/music_test_0/00004086.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "Can I have Shakira on shuffle?", "seqlogical": "[IN:START_SHUFFLE_MUSIC Can I have [SL:MUSIC_ARTIST_NAME Shakira ] on shuffle ? ]", "normalized_utterance": "CAN I HAVE SHAKIRA ON SHUFFLE", "normalized_seqlogical": "[IN:START_SHUFFLE_MUSIC CAN I HAVE [SL:MUSIC_ARTIST_NAME SHAKIRA ] ON SHUFFLE ]", "decoupled_normalized_seqlogical": "[IN:START_SHUFFLE_MUSIC [SL:MUSIC_ARTIST_NAME SHAKIRA ] ]"}, "prediction": "", "function_calls": [{"name": "start_shuffle_music", "arguments": {"music_artist_name": "Shakira"}}]}
{"filename": "stop_data/stop/test_0/music_test/00002569.wav", "split": "test", "intent": "[IN:UNSUPPORTED_MUSIC Skip this entire [SL:MUSIC_TYPE album ] ]", "parameters": {}, "sentence": "Skip this entire album", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "SKIP THIS ENTIRE ALBUM", "normalized_seqlogical": "[IN:UNSUPPORTED_MUSIC SKIP THIS ENTIRE [SL:MUSIC_TYPE ALBUM ] ]", "raw_data": {"file_id": "test_0/music_test_0/00002569.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "Skip this entire album", "seqlogical": "[IN:UNSUPPORTED_MUSIC Skip this entire [SL:MUSIC_TYPE album ] ]", "normalized_utterance": "SKIP THIS ENTIRE ALBUM", "normalized_seqlogical": "[IN:UNSUPPORTED_MUSIC SKIP THIS ENTIRE [SL:MUSIC_TYPE ALBUM ] ]", "decoupled_normalized_seqlogical": "[IN:UNSUPPORTED_MUSIC [SL:MUSIC_TYPE ALBUM ] ]"}, "prediction": "", "function_calls": [{"name": "remove_from_playlist_music", "arguments": {"music_type": "album"}}]}
{"filename": "stop_data/stop/test_1/music_test/00004112.wav", "split": "test", "intent": "[IN:STOP_MUSIC Turn off this [SL:MUSIC_TYPE music ] , will you ? ]", "parameters": {}, "sentence": "Turn off this music, will you?", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "TURN OFF THIS MUSIC WILL YOU", "normalized_seqlogical": "[IN:STOP_MUSIC TURN OFF THIS [SL:MUSIC_TYPE MUSIC ] WILL YOU ]", "raw_data": {"file_id": "test_1/music_test/00004112.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "Turn off this music, will you?", "seqlogical": "[IN:STOP_MUSIC Turn off this [SL:MUSIC_TYPE music ] , will you ? ]", "normalized_utterance": "TURN OFF THIS MUSIC WILL YOU", "normalized_seqlogical": "[IN:STOP_MUSIC TURN OFF THIS [SL:MUSIC_TYPE MUSIC ] WILL YOU ]", "decoupled_normalized_seqlogical": "[IN:STOP_MUSIC [SL:MUSIC_TYPE MUSIC ] ]"}, "prediction": "", "function_calls": [{"name": "stop_music", "arguments": {"music_type": "music"}}]}
{"filename": "stop_data/stop/test_0/music_test/00003186.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Find the [SL:MUSIC_GENRE remix ] of [SL:MUSIC_TRACK_TITLE the sound of silence ] ]", "parameters": {}, "sentence": "Find the remix of the sound of silence", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "FIND THE REMIX OF THE SOUND OF SILENCE", "normalized_seqlogical": "[IN:PLAY_MUSIC FIND THE [SL:MUSIC_GENRE REMIX ] OF [SL:MUSIC_TRACK_TITLE THE SOUND OF SILENCE ] ]", "raw_data": {"file_id": "test_0/music_test_0/00003186.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "Find the remix of the sound of silence", "seqlogical": "[IN:PLAY_MUSIC Find the [SL:MUSIC_GENRE remix ] of [SL:MUSIC_TRACK_TITLE the sound of silence ] ]", "normalized_utterance": "FIND THE REMIX OF THE SOUND OF SILENCE", "normalized_seqlogical": "[IN:PLAY_MUSIC FIND THE [SL:MUSIC_GENRE REMIX ] OF [SL:MUSIC_TRACK_TITLE THE SOUND OF SILENCE ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_GENRE REMIX ] [SL:MUSIC_TRACK_TITLE THE SOUND OF SILENCE ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_track_title": "The Sound of Silence", "music_type": "remix"}}]}
{"filename": "stop_data/stop/test_1/music_test/00002051.wav", "split": "test", "intent": "[IN:PLAY_MUSIC play me some [SL:MUSIC_GENRE gospel ] [SL:MUSIC_TYPE music ] ]", "parameters": {}, "sentence": "play me some gospel music", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "PLAY ME SOME GOSPEL MUSIC", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY ME SOME [SL:MUSIC_GENRE GOSPEL ] [SL:MUSIC_TYPE MUSIC ] ]", "raw_data": {"file_id": "test_1/music_test/00002051.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "play me some gospel music", "seqlogical": "[IN:PLAY_MUSIC play me some [SL:MUSIC_GENRE gospel ] [SL:MUSIC_TYPE music ] ]", "normalized_utterance": "PLAY ME SOME GOSPEL MUSIC", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY ME SOME [SL:MUSIC_GENRE GOSPEL ] [SL:MUSIC_TYPE MUSIC ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_GENRE GOSPEL ] [SL:MUSIC_TYPE MUSIC ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_genre": "gospel"}}]}
{"filename": "stop_data/stop/test_0/music_test/00000451.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Play some [SL:MUSIC_GENRE blues ] [SL:MUSIC_TYPE music ] . ]", "parameters": {}, "sentence": "Play some blues music.", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "PLAY SOME BLUES MUSIC", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY SOME [SL:MUSIC_GENRE BLUES ] [SL:MUSIC_TYPE MUSIC ] ]", "raw_data": {"file_id": "test_0/music_test_0/00000451.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "Play some blues music.", "seqlogical": "[IN:PLAY_MUSIC Play some [SL:MUSIC_GENRE blues ] [SL:MUSIC_TYPE music ] . ]", "normalized_utterance": "PLAY SOME BLUES MUSIC", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY SOME [SL:MUSIC_GENRE BLUES ] [SL:MUSIC_TYPE MUSIC ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_GENRE BLUES ] [SL:MUSIC_TYPE MUSIC ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_genre": "blues"}}]}
{"filename": "stop_data/stop/test_1/music_test/00003129.wav", "split": "test", "intent": "[IN:SET_DEFAULT_PROVIDER_MUSIC Set up my music app as [SL:MUSIC_PROVIDER_NAME iHeartRadio ] ]", "parameters": {}, "sentence": "Set up my music app as iHeartRadio", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "SET UP MY MUSIC APP AS IHEARTRADIO", "normalized_seqlogical": "[IN:SET_DEFAULT_PROVIDER_MUSIC SET UP MY MUSIC APP AS [SL:MUSIC_PROVIDER_NAME IHEARTRADIO ] ]", "raw_data": {"file_id": "test_1/music_test/00003129.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "Set up my music app as iHeartRadio", "seqlogical": "[IN:SET_DEFAULT_PROVIDER_MUSIC Set up my music app as [SL:MUSIC_PROVIDER_NAME iHeartRadio ] ]", "normalized_utterance": "SET UP MY MUSIC APP AS IHEARTRADIO", "normalized_seqlogical": "[IN:SET_DEFAULT_PROVIDER_MUSIC SET UP MY MUSIC APP AS [SL:MUSIC_PROVIDER_NAME IHEARTRADIO ] ]", "decoupled_normalized_seqlogical": "[IN:SET_DEFAULT_PROVIDER_MUSIC [SL:MUSIC_PROVIDER_NAME IHEARTRADIO ] ]"}, "prediction": "", "function_calls": [{"name": "set_default_provider_music", "arguments": {"music_provider_name": "iHeartRadio"}}]}
{"filename": "stop_data/stop/test_0/music_test/00000965.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Can you play [SL:MUSIC_ARTIST_NAME Kendrick Lamar ] 's latest [SL:MUSIC_TYPE album ] . ]", "parameters": {}, "sentence": "Can you play Kendrick Lamar's latest album.", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "CAN YOU PLAY KENDRICK LAMAR 'S LATEST ALBUM", "normalized_seqlogical": "[IN:PLAY_MUSIC CAN YOU PLAY [SL:MUSIC_ARTIST_NAME KENDRICK LAMAR ] 'S LATEST [SL:MUSIC_TYPE ALBUM ] ]", "raw_data": {"file_id": "test_0/music_test_0/00000965.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "Can you play Kendrick Lamar's latest album.", "seqlogical": "[IN:PLAY_MUSIC Can you play [SL:MUSIC_ARTIST_NAME Kendrick Lamar ] 's latest [SL:MUSIC_TYPE album ] . ]", "normalized_utterance": "CAN YOU PLAY KENDRICK LAMAR 'S LATEST ALBUM", "normalized_seqlogical": "[IN:PLAY_MUSIC CAN YOU PLAY [SL:MUSIC_ARTIST_NAME KENDRICK LAMAR ] 'S LATEST [SL:MUSIC_TYPE ALBUM ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_ARTIST_NAME KENDRICK LAMAR ] [SL:MUSIC_TYPE ALBUM ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_artist_name": "Kendrick Lamar", "music_type": "album"}}]}
{"filename": "stop_data/stop/test_1/music_test/00000592.wav", "split": "test", "intent": "[IN:REMOVE_FROM_PLAYLIST_MUSIC I don't want to hear this [SL:MUSIC_TYPE song ] again . ]", "parameters": {}, "sentence": "I don't want to hear this song again.", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "I DON'T WANT TO HEAR THIS SONG AGAIN", "normalized_seqlogical": "[IN:REMOVE_FROM_PLAYLIST_MUSIC I DON'T WANT TO HEAR THIS [SL:MUSIC_TYPE SONG ] AGAIN ]", "raw_data": {"file_id": "test_1/music_test/00000592.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "I don't want to hear this song again.", "seqlogical": "[IN:REMOVE_FROM_PLAYLIST_MUSIC I don't want to hear this [SL:MUSIC_TYPE song ] again . ]", "normalized_utterance": "I DON'T WANT TO HEAR THIS SONG AGAIN", "normalized_seqlogical": "[IN:REMOVE_FROM_PLAYLIST_MUSIC I DON'T WANT TO HEAR THIS [SL:MUSIC_TYPE SONG ] AGAIN ]", "decoupled_normalized_seqlogical": "[IN:REMOVE_FROM_PLAYLIST_MUSIC [SL:MUSIC_TYPE SONG ] ]"}, "prediction": "", "function_calls": [{"name": "remove_from_playlist_music", "arguments": {"music_type": "song", "music_track_title": "this song"}}]}
{"filename": "stop_data/stop/test_0/music_test/00001228.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Play [SL:MUSIC_ARTIST_NAME evanescence ] [SL:MUSIC_TYPE songs ] ]", "parameters": {}, "sentence": "Play evanescence songs", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "PLAY EVANESCENCE SONGS", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_ARTIST_NAME EVANESCENCE ] [SL:MUSIC_TYPE SONGS ] ]", "raw_data": {"file_id": "test_0/music_test_0/00001228.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "Play evanescence songs", "seqlogical": "[IN:PLAY_MUSIC Play [SL:MUSIC_ARTIST_NAME evanescence ] [SL:MUSIC_TYPE songs ] ]", "normalized_utterance": "PLAY EVANESCENCE SONGS", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_ARTIST_NAME EVANESCENCE ] [SL:MUSIC_TYPE SONGS ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_ARTIST_NAME EVANESCENCE ] [SL:MUSIC_TYPE SONGS ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_artist_name": "Evanescence"}}]}
{"filename": "stop_data/stop/test_1/music_test/00000351.wav", "split": "test", "intent": "[IN:PLAY_MUSIC play me [SL:MUSIC_TYPE music ] by [SL:MUSIC_ARTIST_NAME beyonce ] ]", "parameters": {}, "sentence": "play me music by beyonce", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "PLAY ME MUSIC BY BEYONCE", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY ME [SL:MUSIC_TYPE MUSIC ] BY [SL:MUSIC_ARTIST_NAME BEYONCE ] ]", "raw_data": {"file_id": "test_1/music_test/00000351.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "play me music by beyonce", "seqlogical": "[IN:PLAY_MUSIC play me [SL:MUSIC_TYPE music ] by [SL:MUSIC_ARTIST_NAME beyonce ] ]", "normalized_utterance": "PLAY ME MUSIC BY BEYONCE", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY ME [SL:MUSIC_TYPE MUSIC ] BY [SL:MUSIC_ARTIST_NAME BEYONCE ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_TYPE MUSIC ] [SL:MUSIC_ARTIST_NAME BEYONCE ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_artist_name": "Beyonce"}}]}
{"filename": "stop_data/stop/test_0/music_test/00003595.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Can you play one of my [SL:MUSIC_TYPE playlists ] on [SL:MUSIC_PROVIDER_NAME Spotify ] ? ]", "parameters": {}, "sentence": "Can you play one of my playlists on Spotify ?", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "CAN YOU PLAY ONE OF MY PLAYLISTS ON SPOTIFY", "normalized_seqlogical": "[IN:PLAY_MUSIC CAN YOU PLAY ONE OF MY [SL:MUSIC_TYPE PLAYLISTS ] ON [SL:MUSIC_PROVIDER_NAME SPOTIFY ] ]", "raw_data": {"file_id": "test_0/music_test_0/00003595.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "Can you play one of my playlists on Spotify ?", "seqlogical": "[IN:PLAY_MUSIC Can you play one of my [SL:MUSIC_TYPE playlists ] on [SL:MUSIC_PROVIDER_NAME Spotify ] ? ]", "normalized_utterance": "CAN YOU PLAY ONE OF MY PLAYLISTS ON SPOTIFY", "normalized_seqlogical": "[IN:PLAY_MUSIC CAN YOU PLAY ONE OF MY [SL:MUSIC_TYPE PLAYLISTS ] ON [SL:MUSIC_PROVIDER_NAME SPOTIFY ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_TYPE PLAYLISTS ] [SL:MUSIC_PROVIDER_NAME SPOTIFY ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_provider_name": "Spotify"}}]}
{"filename": "stop_data/stop/test_0/music_test/00000950.wav", "split": "test", "intent": "[IN:SKIP_TRACK_MUSIC Skip this whole [SL:MUSIC_TYPE playlist ] ]", "parameters": {}, "sentence": "Skip this whole playlist", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "SKIP THIS WHOLE PLAYLIST", "normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC SKIP THIS WHOLE [SL:MUSIC_TYPE PLAYLIST ] ]", "raw_data": {"file_id": "test_0/music_test_0/00000950.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "Skip this whole playlist", "seqlogical": "[IN:SKIP_TRACK_MUSIC Skip this whole [SL:MUSIC_TYPE playlist ] ]", "normalized_utterance": "SKIP THIS WHOLE PLAYLIST", "normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC SKIP THIS WHOLE [SL:MUSIC_TYPE PLAYLIST ] ]", "decoupled_normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC [SL:MUSIC_TYPE PLAYLIST ] ]"}, "prediction": "", "function_calls": [{"name": "skip_track_music", "arguments": {"music_type": "playlist", "ordinal": "whole"}}]}
{"filename": "stop_data/stop/test_1/music_test/00003220.wav", "split": "test", "intent": "[IN:PLAY_MUSIC play [SL:MUSIC_ARTIST_NAME justin bieber ] ]", "parameters": {}, "sentence": "play justin bieber", "domain": "music", "gender": "Male", "native": "Yes", "normalized_utterance": "PLAY JUSTIN BIEBER", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_ARTIST_NAME JUSTIN BIEBER ] ]", "raw_data": {"file_id": "test_1/music_test/00003220.wav", "domain": "music", "gender": "Male", "native": "Yes", "utterance": "play justin bieber", "seqlogical": "[IN:PLAY_MUSIC play [SL:MUSIC_ARTIST_NAME justin bieber ] ]", "normalized_utterance": "PLAY JUSTIN BIEBER", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_ARTIST_NAME JUSTIN BIEBER ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_ARTIST_NAME JUSTIN BIEBER ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_artist_name": "Justin Bieber"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00003184.wav", "split": "test", "intent": "[IN:GET_TIMER Can I see the [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 7 minute ] ] ] ] ] [SL:METHOD_TIMER timer ] now ]", "parameters": {}, "sentence": "Can I see the 7 minute timer now", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "CAN I SEE THE SEVEN MINUTE TIMER NOW", "normalized_seqlogical": "[IN:GET_TIMER CAN I SEE THE [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME SEVEN MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] NOW ]", "raw_data": {"file_id": "test_0/timer_test_0/00003184.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Can I see the 7 minute timer now", "seqlogical": "[IN:GET_TIMER Can I see the [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 7 minute ] ] ] ] ] [SL:METHOD_TIMER timer ] now ]", "normalized_utterance": "CAN I SEE THE SEVEN MINUTE TIMER NOW", "normalized_seqlogical": "[IN:GET_TIMER CAN I SEE THE [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME SEVEN MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] NOW ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME SEVEN MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "see"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00003180.wav", "split": "test", "intent": "[IN:GET_TIMER Would you put up the [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 20 minute ] ] ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "Would you put up the 20 minute timer", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "WOULD YOU PUT UP THE TWENTY MINUTE TIMER", "normalized_seqlogical": "[IN:GET_TIMER WOULD YOU PUT UP THE [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWENTY MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_1/timer_test/00003180.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Would you put up the 20 minute timer", "seqlogical": "[IN:GET_TIMER Would you put up the [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 20 minute ] ] ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "WOULD YOU PUT UP THE TWENTY MINUTE TIMER", "normalized_seqlogical": "[IN:GET_TIMER WOULD YOU PUT UP THE [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWENTY MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWENTY MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "create_timer", "arguments": {"amount": 20, "method_timer": "minute"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00003185.wav", "split": "test", "intent": "[IN:GET_TIMER Look at [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 7 minute ] ] ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "Look at 7 minute timer", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "LOOK AT SEVEN MINUTE TIMER", "normalized_seqlogical": "[IN:GET_TIMER LOOK AT [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME SEVEN MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_1/timer_test/00003185.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Look at 7 minute timer", "seqlogical": "[IN:GET_TIMER Look at [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 7 minute ] ] ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "LOOK AT SEVEN MINUTE TIMER", "normalized_seqlogical": "[IN:GET_TIMER LOOK AT [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME SEVEN MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME SEVEN MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "create_timer", "arguments": {"method_timer": "timer", "amount": 7}}]}
{"filename": "stop_data/stop/test_0/timer_test/00003181.wav", "split": "test", "intent": "[IN:GET_TIMER Can you show me the [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 20 minute ] ] ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "Can you show me the 20 minute timer", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "CAN YOU SHOW ME THE TWENTY MINUTE TIMER", "normalized_seqlogical": "[IN:GET_TIMER CAN YOU SHOW ME THE [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWENTY MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00003181.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Can you show me the 20 minute timer", "seqlogical": "[IN:GET_TIMER Can you show me the [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 20 minute ] ] ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "CAN YOU SHOW ME THE TWENTY MINUTE TIMER", "normalized_seqlogical": "[IN:GET_TIMER CAN YOU SHOW ME THE [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWENTY MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWENTY MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "show"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00003182.wav", "split": "test", "intent": "[IN:GET_TIMER Show [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 13 minute ] ] ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "Show 13 minute timer", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "SHOW THIRTEEN MINUTE TIMER", "normalized_seqlogical": "[IN:GET_TIMER SHOW [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THIRTEEN MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00003182.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Show 13 minute timer", "seqlogical": "[IN:GET_TIMER Show [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 13 minute ] ] ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "SHOW THIRTEEN MINUTE TIMER", "normalized_seqlogical": "[IN:GET_TIMER SHOW [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THIRTEEN MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THIRTEEN MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "create_timer", "arguments": {"amount": 13, "method_timer": "minute"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00003184.wav", "split": "test", "intent": "[IN:GET_TIMER Can I see the [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 7 minute ] ] ] ] ] [SL:METHOD_TIMER timer ] now ]", "parameters": {}, "sentence": "Can I see the 7 minute timer now", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "CAN I SEE THE SEVEN MINUTE TIMER NOW", "normalized_seqlogical": "[IN:GET_TIMER CAN I SEE THE [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME SEVEN MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] NOW ]", "raw_data": {"file_id": "test_1/timer_test/00003184.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Can I see the 7 minute timer now", "seqlogical": "[IN:GET_TIMER Can I see the [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 7 minute ] ] ] ] ] [SL:METHOD_TIMER timer ] now ]", "normalized_utterance": "CAN I SEE THE SEVEN MINUTE TIMER NOW", "normalized_seqlogical": "[IN:GET_TIMER CAN I SEE THE [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME SEVEN MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] NOW ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME SEVEN MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "see"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00003181.wav", "split": "test", "intent": "[IN:GET_TIMER Can you show me the [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 20 minute ] ] ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "Can you show me the 20 minute timer", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "CAN YOU SHOW ME THE TWENTY MINUTE TIMER", "normalized_seqlogical": "[IN:GET_TIMER CAN YOU SHOW ME THE [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWENTY MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_1/timer_test/00003181.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Can you show me the 20 minute timer", "seqlogical": "[IN:GET_TIMER Can you show me the [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 20 minute ] ] ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "CAN YOU SHOW ME THE TWENTY MINUTE TIMER", "normalized_seqlogical": "[IN:GET_TIMER CAN YOU SHOW ME THE [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWENTY MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWENTY MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "twenty minute"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00003182.wav", "split": "test", "intent": "[IN:GET_TIMER Show [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 13 minute ] ] ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "Show 13 minute timer", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "SHOW THIRTEEN MINUTE TIMER", "normalized_seqlogical": "[IN:GET_TIMER SHOW [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THIRTEEN MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_1/timer_test/00003182.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Show 13 minute timer", "seqlogical": "[IN:GET_TIMER Show [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 13 minute ] ] ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "SHOW THIRTEEN MINUTE TIMER", "normalized_seqlogical": "[IN:GET_TIMER SHOW [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THIRTEEN MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THIRTEEN MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "create_timer", "arguments": {"method_timer": "thirteen minute"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00003183.wav", "split": "test", "intent": "[IN:GET_TIMER Get [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 3 minute ] ] ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "Get 3 minute timer", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "GET THREE MINUTE TIMER", "normalized_seqlogical": "[IN:GET_TIMER GET [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THREE MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_1/timer_test/00003183.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Get 3 minute timer", "seqlogical": "[IN:GET_TIMER Get [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 3 minute ] ] ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "GET THREE MINUTE TIMER", "normalized_seqlogical": "[IN:GET_TIMER GET [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THREE MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THREE MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "create_timer", "arguments": {"amount": 3, "method_timer": "minute"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00003180.wav", "split": "test", "intent": "[IN:GET_TIMER Would you put up the [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 20 minute ] ] ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "Would you put up the 20 minute timer", "domain": "timer", "gender": "Male", "native": "No", "normalized_utterance": "WOULD YOU PUT UP THE TWENTY MINUTE TIMER", "normalized_seqlogical": "[IN:GET_TIMER WOULD YOU PUT UP THE [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWENTY MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00003180.wav", "domain": "timer", "gender": "Male", "native": "No", "utterance": "Would you put up the 20 minute timer", "seqlogical": "[IN:GET_TIMER Would you put up the [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 20 minute ] ] ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "WOULD YOU PUT UP THE TWENTY MINUTE TIMER", "normalized_seqlogical": "[IN:GET_TIMER WOULD YOU PUT UP THE [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWENTY MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWENTY MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "create_timer", "arguments": {"amount": 20, "method_timer": "minute"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00003183.wav", "split": "test", "intent": "[IN:GET_TIMER Get [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 3 minute ] ] ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "Get 3 minute timer", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "GET THREE MINUTE TIMER", "normalized_seqlogical": "[IN:GET_TIMER GET [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THREE MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00003183.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Get 3 minute timer", "seqlogical": "[IN:GET_TIMER Get [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 3 minute ] ] ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "GET THREE MINUTE TIMER", "normalized_seqlogical": "[IN:GET_TIMER GET [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THREE MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THREE MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "create_timer", "arguments": {"amount": 3, "method_timer": "minute"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00003185.wav", "split": "test", "intent": "[IN:GET_TIMER Look at [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 7 minute ] ] ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "Look at 7 minute timer", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "LOOK AT SEVEN MINUTE TIMER", "normalized_seqlogical": "[IN:GET_TIMER LOOK AT [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME SEVEN MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00003185.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Look at 7 minute timer", "seqlogical": "[IN:GET_TIMER Look at [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 7 minute ] ] ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "LOOK AT SEVEN MINUTE TIMER", "normalized_seqlogical": "[IN:GET_TIMER LOOK AT [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME SEVEN MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME SEVEN MINUTE ] ] ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "create_timer", "arguments": {"method_timer": "timer", "amount": 7}}]}
{"filename": "stop_data/stop/test_0/timer_test/00003901.wav", "split": "test", "intent": "[IN:PAUSE_TIMER Pause the [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 30 second ] ] ] [SL:METHOD_TIMER timer ] for me , will you ? ]", "parameters": {}, "sentence": "Pause the 30 second timer for me, will you?", "domain": "timer", "gender": "Male", "native": "No", "normalized_utterance": "PAUSE THE THIRTY SECOND TIMER FOR ME WILL YOU", "normalized_seqlogical": "[IN:PAUSE_TIMER PAUSE THE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THIRTY SECOND ] ] ] [SL:METHOD_TIMER TIMER ] FOR ME WILL YOU ]", "raw_data": {"file_id": "test_0/timer_test_0/00003901.wav", "domain": "timer", "gender": "Male", "native": "No", "utterance": "Pause the 30 second timer for me, will you?", "seqlogical": "[IN:PAUSE_TIMER Pause the [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 30 second ] ] ] [SL:METHOD_TIMER timer ] for me , will you ? ]", "normalized_utterance": "PAUSE THE THIRTY SECOND TIMER FOR ME WILL YOU", "normalized_seqlogical": "[IN:PAUSE_TIMER PAUSE THE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THIRTY SECOND ] ] ] [SL:METHOD_TIMER TIMER ] FOR ME WILL YOU ]", "decoupled_normalized_seqlogical": "[IN:PAUSE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THIRTY SECOND ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "pause_timer", "arguments": {"method_timer": "thirty second timer"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00004159.wav", "split": "test", "intent": "[IN:UPDATE_TIMER Change the [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 15 minutes and 30 seconds ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "Change the 15 minutes and 30 seconds timer", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "CHANGE THE FIFTEEN MINUTES AND THIRTY SECONDS TIMER", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE THE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FIFTEEN MINUTES AND THIRTY SECONDS ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00004159.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Change the 15 minutes and 30 seconds timer", "seqlogical": "[IN:UPDATE_TIMER Change the [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 15 minutes and 30 seconds ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "CHANGE THE FIFTEEN MINUTES AND THIRTY SECONDS TIMER", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE THE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FIFTEEN MINUTES AND THIRTY SECONDS ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FIFTEEN MINUTES AND THIRTY SECONDS ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"method_timer": "timer", "amount": 15, "timer_name": "fifteen minutes and thirty seconds"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00000426.wav", "split": "test", "intent": "[IN:DELETE_TIMER delete [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 4 hour ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "delete 4 hour timer", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "DELETE FOUR HOUR TIMER", "normalized_seqlogical": "[IN:DELETE_TIMER DELETE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOUR HOUR ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00000426.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "delete 4 hour timer", "seqlogical": "[IN:DELETE_TIMER delete [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 4 hour ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "DELETE FOUR HOUR TIMER", "normalized_seqlogical": "[IN:DELETE_TIMER DELETE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOUR HOUR ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOUR HOUR ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "create_timer", "arguments": {"method_timer": "4-hour"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00002068.wav", "split": "test", "intent": "[IN:GET_TIMER do I have more than [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 10 minutes ] ] ] left on my [SL:METHOD_TIMER timer ] ? ]", "parameters": {}, "sentence": "do I have more than 10 minutes left on my timer?", "domain": "timer", "gender": "Male", "native": "No", "normalized_utterance": "DO I HAVE MORE THAN TEN MINUTES LEFT ON MY TIMER", "normalized_seqlogical": "[IN:GET_TIMER DO I HAVE MORE THAN [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TEN MINUTES ] ] ] LEFT ON MY [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00002068.wav", "domain": "timer", "gender": "Male", "native": "No", "utterance": "do I have more than 10 minutes left on my timer?", "seqlogical": "[IN:GET_TIMER do I have more than [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 10 minutes ] ] ] left on my [SL:METHOD_TIMER timer ] ? ]", "normalized_utterance": "DO I HAVE MORE THAN TEN MINUTES LEFT ON MY TIMER", "normalized_seqlogical": "[IN:GET_TIMER DO I HAVE MORE THAN [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TEN MINUTES ] ] ] LEFT ON MY [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TEN MINUTES ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "timer"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00001782.wav", "split": "test", "intent": "[IN:GET_TIMER find the status of my [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME after 6 pm ] ] ] ]", "parameters": {}, "sentence": "find the status of my timer after 6 pm", "domain": "timer", "gender": "Male", "native": "No", "normalized_utterance": "FIND THE STATUS OF MY TIMER AFTER SIX PM", "normalized_seqlogical": "[IN:GET_TIMER FIND THE STATUS OF MY [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME AFTER SIX PM ] ] ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00001782.wav", "domain": "timer", "gender": "Male", "native": "No", "utterance": "find the status of my timer after 6 pm", "seqlogical": "[IN:GET_TIMER find the status of my [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME after 6 pm ] ] ] ]", "normalized_utterance": "FIND THE STATUS OF MY TIMER AFTER SIX PM", "normalized_seqlogical": "[IN:GET_TIMER FIND THE STATUS OF MY [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME AFTER SIX PM ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME AFTER SIX PM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "status", "date_time": "after 6 PM"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00003255.wav", "split": "test", "intent": "[IN:UPDATE_TIMER change my [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from 10 seconds ] ] ] [SL:DATE_TIME to 15 seconds ] ]", "parameters": {}, "sentence": "change my timer from 10 seconds to 15 seconds", "domain": "timer", "gender": "Male", "native": "No", "normalized_utterance": "CHANGE MY TIMER FROM TEN SECONDS TO FIFTEEN SECONDS", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE MY [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM TEN SECONDS ] ] ] [SL:DATE_TIME TO FIFTEEN SECONDS ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00003255.wav", "domain": "timer", "gender": "Male", "native": "No", "utterance": "change my timer from 10 seconds to 15 seconds", "seqlogical": "[IN:UPDATE_TIMER change my [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from 10 seconds ] ] ] [SL:DATE_TIME to 15 seconds ] ]", "normalized_utterance": "CHANGE MY TIMER FROM TEN SECONDS TO FIFTEEN SECONDS", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE MY [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM TEN SECONDS ] ] ] [SL:DATE_TIME TO FIFTEEN SECONDS ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM TEN SECONDS ] ] ] [SL:DATE_TIME TO FIFTEEN SECONDS ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"timer_name": "default", "amount": 15, "method_timer": "seconds"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00000853.wav", "split": "test", "intent": "[IN:RESTART_TIMER Reset the [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for 20 minutes ] ] ] ]", "parameters": {}, "sentence": "Reset the timer for 20 minutes", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "RESET THE TIMER FOR TWENTY MINUTES", "normalized_seqlogical": "[IN:RESTART_TIMER RESET THE [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR TWENTY MINUTES ] ] ] ]", "raw_data": {"file_id": "test_1/timer_test/00000853.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Reset the timer for 20 minutes", "seqlogical": "[IN:RESTART_TIMER Reset the [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for 20 minutes ] ] ] ]", "normalized_utterance": "RESET THE TIMER FOR TWENTY MINUTES", "normalized_seqlogical": "[IN:RESTART_TIMER RESET THE [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR TWENTY MINUTES ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:RESTART_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR TWENTY MINUTES ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "restart_timer", "arguments": {"method_timer": "timer", "amount": 20}}]}
{"filename": "stop_data/stop/test_1/timer_test/00004167.wav", "split": "test", "intent": "[IN:UPDATE_TIMER I need my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 14 minute ] ] ] [SL:METHOD_TIMER timer ] adjusted ]", "parameters": {}, "sentence": "I need my 14 minute timer adjusted", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "I NEED MY FOURTEEN MINUTE TIMER ADJUSTED", "normalized_seqlogical": "[IN:UPDATE_TIMER I NEED MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOURTEEN MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ADJUSTED ]", "raw_data": {"file_id": "test_1/timer_test/00004167.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "I need my 14 minute timer adjusted", "seqlogical": "[IN:UPDATE_TIMER I need my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 14 minute ] ] ] [SL:METHOD_TIMER timer ] adjusted ]", "normalized_utterance": "I NEED MY FOURTEEN MINUTE TIMER ADJUSTED", "normalized_seqlogical": "[IN:UPDATE_TIMER I NEED MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOURTEEN MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ADJUSTED ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOURTEEN MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"amount": 14, "method_timer": "timer"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00003248.wav", "split": "test", "intent": "[IN:UPDATE_TIMER adjust my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 14 minute ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "adjust my 14 minute timer", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "ADJUST MY FOURTEEN MINUTE TIMER", "normalized_seqlogical": "[IN:UPDATE_TIMER ADJUST MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOURTEEN MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_1/timer_test/00003248.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "adjust my 14 minute timer", "seqlogical": "[IN:UPDATE_TIMER adjust my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 14 minute ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "ADJUST MY FOURTEEN MINUTE TIMER", "normalized_seqlogical": "[IN:UPDATE_TIMER ADJUST MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOURTEEN MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOURTEEN MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"amount": 14, "method_timer": "timer"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00002124.wav", "split": "test", "intent": "[IN:RESTART_TIMER Restart the [SL:METHOD_TIMER timer ] and have it run [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 8 minutes ] ] ] ]", "parameters": {}, "sentence": "Restart the timer and have it run 8 minutes", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "RESTART THE TIMER AND HAVE IT RUN EIGHT MINUTES", "normalized_seqlogical": "[IN:RESTART_TIMER RESTART THE [SL:METHOD_TIMER TIMER ] AND HAVE IT RUN [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME EIGHT MINUTES ] ] ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00002124.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Restart the timer and have it run 8 minutes", "seqlogical": "[IN:RESTART_TIMER Restart the [SL:METHOD_TIMER timer ] and have it run [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 8 minutes ] ] ] ]", "normalized_utterance": "RESTART THE TIMER AND HAVE IT RUN EIGHT MINUTES", "normalized_seqlogical": "[IN:RESTART_TIMER RESTART THE [SL:METHOD_TIMER TIMER ] AND HAVE IT RUN [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME EIGHT MINUTES ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:RESTART_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME EIGHT MINUTES ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "restart_timer", "arguments": {"method_timer": "timer", "amount": 8}}]}
{"filename": "stop_data/stop/test_1/timer_test/00000476.wav", "split": "test", "intent": "[IN:DELETE_TIMER cancel the [SL:METHOD_TIMER timer ] that is [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 15 minutes ] ] ] ]", "parameters": {}, "sentence": "cancel the timer that is 15 minutes", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "CANCEL THE TIMER THAT IS FIFTEEN MINUTES", "normalized_seqlogical": "[IN:DELETE_TIMER CANCEL THE [SL:METHOD_TIMER TIMER ] THAT IS [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FIFTEEN MINUTES ] ] ] ]", "raw_data": {"file_id": "test_1/timer_test/00000476.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "cancel the timer that is 15 minutes", "seqlogical": "[IN:DELETE_TIMER cancel the [SL:METHOD_TIMER timer ] that is [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 15 minutes ] ] ] ]", "normalized_utterance": "CANCEL THE TIMER THAT IS FIFTEEN MINUTES", "normalized_seqlogical": "[IN:DELETE_TIMER CANCEL THE [SL:METHOD_TIMER TIMER ] THAT IS [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FIFTEEN MINUTES ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FIFTEEN MINUTES ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_timer", "arguments": {"method_timer": "fifteen minutes"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00003616.wav", "split": "test", "intent": "[IN:UPDATE_TIMER I have a [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME one hour ] ] ] [SL:METHOD_TIMER timer ] , change it [SL:DATE_TIME to one minute and thirty seconds ] ]", "parameters": {}, "sentence": "I have a one hour timer, change it to one minute and thirty seconds", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "I HAVE A ONE HOUR TIMER CHANGE IT TO ONE MINUTE AND THIRTY SECONDS", "normalized_seqlogical": "[IN:UPDATE_TIMER I HAVE A [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME ONE HOUR ] ] ] [SL:METHOD_TIMER TIMER ] CHANGE IT [SL:DATE_TIME TO ONE MINUTE AND THIRTY SECONDS ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00003616.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "I have a one hour timer, change it to one minute and thirty seconds", "seqlogical": "[IN:UPDATE_TIMER I have a [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME one hour ] ] ] [SL:METHOD_TIMER timer ] , change it [SL:DATE_TIME to one minute and thirty seconds ] ]", "normalized_utterance": "I HAVE A ONE HOUR TIMER CHANGE IT TO ONE MINUTE AND THIRTY SECONDS", "normalized_seqlogical": "[IN:UPDATE_TIMER I HAVE A [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME ONE HOUR ] ] ] [SL:METHOD_TIMER TIMER ] CHANGE IT [SL:DATE_TIME TO ONE MINUTE AND THIRTY SECONDS ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME ONE HOUR ] ] ] [SL:METHOD_TIMER TIMER ] [SL:DATE_TIME TO ONE MINUTE AND THIRTY SECONDS ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"timer_name": "one-hour timer", "amount": 90, "method_timer": "change"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00001962.wav", "split": "test", "intent": "[IN:GET_TIMER is there [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 4 minutes ] ] ] left on [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "is there 4 minutes left on timer", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "IS THERE FOUR MINUTES LEFT ON TIMER", "normalized_seqlogical": "[IN:GET_TIMER IS THERE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOUR MINUTES ] ] ] LEFT ON [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00001962.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "is there 4 minutes left on timer", "seqlogical": "[IN:GET_TIMER is there [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 4 minutes ] ] ] left on [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "IS THERE FOUR MINUTES LEFT ON TIMER", "normalized_seqlogical": "[IN:GET_TIMER IS THERE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOUR MINUTES ] ] ] LEFT ON [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOUR MINUTES ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "timer"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00002723.wav", "split": "test", "intent": "[IN:ADD_TIME_TIMER add [SL:DATE_TIME 20 mins ] to the [SL:METHOD_TIMER timer ] set [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for 2 hours ] ] ] ]", "parameters": {}, "sentence": "add 20 mins to the timer set for 2 hours", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "ADD TWENTY MINUTES TO THE TIMER SET FOR TWO HOURS", "normalized_seqlogical": "[IN:ADD_TIME_TIMER ADD [SL:DATE_TIME TWENTY MINUTES ] TO THE [SL:METHOD_TIMER TIMER ] SET [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR TWO HOURS ] ] ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00002723.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "add 20 mins to the timer set for 2 hours", "seqlogical": "[IN:ADD_TIME_TIMER add [SL:DATE_TIME 20 mins ] to the [SL:METHOD_TIMER timer ] set [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for 2 hours ] ] ] ]", "normalized_utterance": "ADD TWENTY MINUTES TO THE TIMER SET FOR TWO HOURS", "normalized_seqlogical": "[IN:ADD_TIME_TIMER ADD [SL:DATE_TIME TWENTY MINUTES ] TO THE [SL:METHOD_TIMER TIMER ] SET [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR TWO HOURS ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:ADD_TIME_TIMER [SL:DATE_TIME TWENTY MINUTES ] [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR TWO HOURS ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "add_time_timer", "arguments": {"amount": 20, "method_timer": "timer", "date_time": "now"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00001987.wav", "split": "test", "intent": "[IN:RESTART_TIMER Reset [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for 80 seconds ] ] ] . ]", "parameters": {}, "sentence": "Reset timer for 80 seconds.", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "RESET TIMER FOR EIGHTY SECONDS", "normalized_seqlogical": "[IN:RESTART_TIMER RESET [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR EIGHTY SECONDS ] ] ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00001987.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Reset timer for 80 seconds.", "seqlogical": "[IN:RESTART_TIMER Reset [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for 80 seconds ] ] ] . ]", "normalized_utterance": "RESET TIMER FOR EIGHTY SECONDS", "normalized_seqlogical": "[IN:RESTART_TIMER RESET [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR EIGHTY SECONDS ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:RESTART_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR EIGHTY SECONDS ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "restart_timer", "arguments": {"method_timer": "reset", "amount": 80}}]}
{"filename": "stop_data/stop/test_0/timer_test/00003875.wav", "split": "test", "intent": "[IN:PAUSE_TIMER I want to pause the [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 16 minute ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "I want to pause the 16 minute timer", "domain": "timer", "gender": "Male", "native": "No", "normalized_utterance": "I WANT TO PAUSE THE SIXTEEN MINUTE TIMER", "normalized_seqlogical": "[IN:PAUSE_TIMER I WANT TO PAUSE THE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME SIXTEEN MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00003875.wav", "domain": "timer", "gender": "Male", "native": "No", "utterance": "I want to pause the 16 minute timer", "seqlogical": "[IN:PAUSE_TIMER I want to pause the [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 16 minute ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "I WANT TO PAUSE THE SIXTEEN MINUTE TIMER", "normalized_seqlogical": "[IN:PAUSE_TIMER I WANT TO PAUSE THE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME SIXTEEN MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:PAUSE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME SIXTEEN MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "pause_timer", "arguments": {"method_timer": "sixteen minute timer"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00003731.wav", "split": "test", "intent": "[IN:GET_TIMER On my [SL:TIMER_NAME workout ] [SL:METHOD_TIMER timer ] set for [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 30 minute ] ] ] how much time is left ]", "parameters": {}, "sentence": "On my workout timer set for 30 minute how much time is left", "domain": "timer", "gender": "Male", "native": "No", "normalized_utterance": "ON MY WORKOUT TIMER SET FOR THIRTY MINUTE HOW MUCH TIME IS LEFT", "normalized_seqlogical": "[IN:GET_TIMER ON MY [SL:TIMER_NAME WORKOUT ] [SL:METHOD_TIMER TIMER ] SET FOR [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THIRTY MINUTE ] ] ] HOW MUCH TIME IS LEFT ]", "raw_data": {"file_id": "test_0/timer_test_0/00003731.wav", "domain": "timer", "gender": "Male", "native": "No", "utterance": "On my workout timer set for 30 minute how much time is left", "seqlogical": "[IN:GET_TIMER On my [SL:TIMER_NAME workout ] [SL:METHOD_TIMER timer ] set for [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 30 minute ] ] ] how much time is left ]", "normalized_utterance": "ON MY WORKOUT TIMER SET FOR THIRTY MINUTE HOW MUCH TIME IS LEFT", "normalized_seqlogical": "[IN:GET_TIMER ON MY [SL:TIMER_NAME WORKOUT ] [SL:METHOD_TIMER TIMER ] SET FOR [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THIRTY MINUTE ] ] ] HOW MUCH TIME IS LEFT ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME WORKOUT ] [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THIRTY MINUTE ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "workout"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00003278.wav", "split": "test", "intent": "[IN:PAUSE_TIMER Pause my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 16 minute ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "Pause my 16 minute timer", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "PAUSE MY SIXTEEN MINUTE TIMER", "normalized_seqlogical": "[IN:PAUSE_TIMER PAUSE MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME SIXTEEN MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_1/timer_test/00003278.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Pause my 16 minute timer", "seqlogical": "[IN:PAUSE_TIMER Pause my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 16 minute ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "PAUSE MY SIXTEEN MINUTE TIMER", "normalized_seqlogical": "[IN:PAUSE_TIMER PAUSE MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME SIXTEEN MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:PAUSE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME SIXTEEN MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "pause_timer", "arguments": {"method_timer": "16 minute timer"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00002793.wav", "split": "test", "intent": "[IN:DELETE_TIMER Delete my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 10 minute ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "Delete my 10 minute timer", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "DELETE MY TEN MINUTE TIMER", "normalized_seqlogical": "[IN:DELETE_TIMER DELETE MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TEN MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00002793.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Delete my 10 minute timer", "seqlogical": "[IN:DELETE_TIMER Delete my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 10 minute ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "DELETE MY TEN MINUTE TIMER", "normalized_seqlogical": "[IN:DELETE_TIMER DELETE MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TEN MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TEN MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "delete_timer", "arguments": {"method_timer": "ten minute timer"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00001281.wav", "split": "test", "intent": "[IN:PAUSE_TIMER pause my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 55 minute ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "pause my 55 minute timer", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "PAUSE MY FIFTY FIVE MINUTE TIMER", "normalized_seqlogical": "[IN:PAUSE_TIMER PAUSE MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FIFTY FIVE MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_1/timer_test/00001281.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "pause my 55 minute timer", "seqlogical": "[IN:PAUSE_TIMER pause my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 55 minute ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "PAUSE MY FIFTY FIVE MINUTE TIMER", "normalized_seqlogical": "[IN:PAUSE_TIMER PAUSE MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FIFTY FIVE MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:PAUSE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FIFTY FIVE MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "timer"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00003965.wav", "split": "test", "intent": "[IN:PAUSE_TIMER Please pause [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME hour and a half ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "Please pause hour and a half timer", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "PLEASE PAUSE HOUR AND A HALF TIMER", "normalized_seqlogical": "[IN:PAUSE_TIMER PLEASE PAUSE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME HOUR AND A HALF ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00003965.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Please pause hour and a half timer", "seqlogical": "[IN:PAUSE_TIMER Please pause [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME hour and a half ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "PLEASE PAUSE HOUR AND A HALF TIMER", "normalized_seqlogical": "[IN:PAUSE_TIMER PLEASE PAUSE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME HOUR AND A HALF ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:PAUSE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME HOUR AND A HALF ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "pause_timer", "arguments": {"method_timer": "hour and a half"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00003709.wav", "split": "test", "intent": "[IN:GET_TIMER On my [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for one hour ] ] ] how much time is left ]", "parameters": {}, "sentence": "On my timer for one hour how much time is left", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "ON MY TIMER FOR ONE HOUR HOW MUCH TIME IS LEFT", "normalized_seqlogical": "[IN:GET_TIMER ON MY [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR ONE HOUR ] ] ] HOW MUCH TIME IS LEFT ]", "raw_data": {"file_id": "test_0/timer_test_0/00003709.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "On my timer for one hour how much time is left", "seqlogical": "[IN:GET_TIMER On my [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for one hour ] ] ] how much time is left ]", "normalized_utterance": "ON MY TIMER FOR ONE HOUR HOW MUCH TIME IS LEFT", "normalized_seqlogical": "[IN:GET_TIMER ON MY [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR ONE HOUR ] ] ] HOW MUCH TIME IS LEFT ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR ONE HOUR ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "timer"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00003604.wav", "split": "test", "intent": "[IN:UPDATE_TIMER change my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 10 seconds ] ] ] [SL:METHOD_TIMER timer ] [SL:DATE_TIME to 15 seconds ] ]", "parameters": {}, "sentence": "change my 10 seconds timer to 15 seconds", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "CHANGE MY TEN SECONDS TIMER TO FIFTEEN SECONDS", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TEN SECONDS ] ] ] [SL:METHOD_TIMER TIMER ] [SL:DATE_TIME TO FIFTEEN SECONDS ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00003604.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "change my 10 seconds timer to 15 seconds", "seqlogical": "[IN:UPDATE_TIMER change my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 10 seconds ] ] ] [SL:METHOD_TIMER timer ] [SL:DATE_TIME to 15 seconds ] ]", "normalized_utterance": "CHANGE MY TEN SECONDS TIMER TO FIFTEEN SECONDS", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TEN SECONDS ] ] ] [SL:METHOD_TIMER TIMER ] [SL:DATE_TIME TO FIFTEEN SECONDS ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TEN SECONDS ] ] ] [SL:METHOD_TIMER TIMER ] [SL:DATE_TIME TO FIFTEEN SECONDS ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"amount": 15, "method_timer": "seconds"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00003458.wav", "split": "test", "intent": "[IN:DELETE_TIMER Get rid of that [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 3 minute ] ] ] [SL:TIMER_NAME coffee ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "Get rid of that 3 minute coffee timer", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "GET RID OF THAT THREE MINUTE COFFEE TIMER", "normalized_seqlogical": "[IN:DELETE_TIMER GET RID OF THAT [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THREE MINUTE ] ] ] [SL:TIMER_NAME COFFEE ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_1/timer_test/00003458.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Get rid of that 3 minute coffee timer", "seqlogical": "[IN:DELETE_TIMER Get rid of that [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 3 minute ] ] ] [SL:TIMER_NAME coffee ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "GET RID OF THAT THREE MINUTE COFFEE TIMER", "normalized_seqlogical": "[IN:DELETE_TIMER GET RID OF THAT [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THREE MINUTE ] ] ] [SL:TIMER_NAME COFFEE ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THREE MINUTE ] ] ] [SL:TIMER_NAME COFFEE ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "delete_timer", "arguments": {"method_timer": "coffee"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00002891.wav", "split": "test", "intent": "[IN:GET_TIMER Inform me when I have [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME ten minutes ] ] ] left ]", "parameters": {}, "sentence": "Inform me when I have ten minutes left", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "INFORM ME WHEN I HAVE TEN MINUTES LEFT", "normalized_seqlogical": "[IN:GET_TIMER INFORM ME WHEN I HAVE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TEN MINUTES ] ] ] LEFT ]", "raw_data": {"file_id": "test_1/timer_test/00002891.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Inform me when I have ten minutes left", "seqlogical": "[IN:GET_TIMER Inform me when I have [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME ten minutes ] ] ] left ]", "normalized_utterance": "INFORM ME WHEN I HAVE TEN MINUTES LEFT", "normalized_seqlogical": "[IN:GET_TIMER INFORM ME WHEN I HAVE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TEN MINUTES ] ] ] LEFT ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TEN MINUTES ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_timer", "arguments": {"method_timer": "ten minutes"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00003296.wav", "split": "test", "intent": "[IN:DELETE_TIMER Cancel the [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME sixty minute ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "Cancel the sixty minute timer", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "CANCEL THE SIXTY MINUTE TIMER", "normalized_seqlogical": "[IN:DELETE_TIMER CANCEL THE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME SIXTY MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_1/timer_test/00003296.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Cancel the sixty minute timer", "seqlogical": "[IN:DELETE_TIMER Cancel the [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME sixty minute ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "CANCEL THE SIXTY MINUTE TIMER", "normalized_seqlogical": "[IN:DELETE_TIMER CANCEL THE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME SIXTY MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME SIXTY MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "delete_timer", "arguments": {"method_timer": "sixty minute timer"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00003602.wav", "split": "test", "intent": "[IN:UPDATE_TIMER change my [SL:METHOD_TIMER timer ] [SL:DATE_TIME to 15 seconds ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from 10 seconds ] ] ] ]", "parameters": {}, "sentence": "change my timer to 15 seconds from 10 seconds", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "CHANGE MY TIMER TO FIFTEEN SECONDS FROM TEN SECONDS", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE MY [SL:METHOD_TIMER TIMER ] [SL:DATE_TIME TO FIFTEEN SECONDS ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM TEN SECONDS ] ] ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00003602.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "change my timer to 15 seconds from 10 seconds", "seqlogical": "[IN:UPDATE_TIMER change my [SL:METHOD_TIMER timer ] [SL:DATE_TIME to 15 seconds ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from 10 seconds ] ] ] ]", "normalized_utterance": "CHANGE MY TIMER TO FIFTEEN SECONDS FROM TEN SECONDS", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE MY [SL:METHOD_TIMER TIMER ] [SL:DATE_TIME TO FIFTEEN SECONDS ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM TEN SECONDS ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:METHOD_TIMER TIMER ] [SL:DATE_TIME TO FIFTEEN SECONDS ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM TEN SECONDS ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"amount": 15, "method_timer": "seconds"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00003733.wav", "split": "test", "intent": "[IN:GET_TIMER Time left on my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 30 minute ] ] ] [SL:TIMER_NAME workout ] [SL:METHOD_TIMER timer ] please ]", "parameters": {}, "sentence": "Time left on my 30 minute workout timer please", "domain": "timer", "gender": "Male", "native": "No", "normalized_utterance": "TIME LEFT ON MY THIRTY MINUTE WORKOUT TIMER PLEASE", "normalized_seqlogical": "[IN:GET_TIMER TIME LEFT ON MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THIRTY MINUTE ] ] ] [SL:TIMER_NAME WORKOUT ] [SL:METHOD_TIMER TIMER ] PLEASE ]", "raw_data": {"file_id": "test_0/timer_test_0/00003733.wav", "domain": "timer", "gender": "Male", "native": "No", "utterance": "Time left on my 30 minute workout timer please", "seqlogical": "[IN:GET_TIMER Time left on my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 30 minute ] ] ] [SL:TIMER_NAME workout ] [SL:METHOD_TIMER timer ] please ]", "normalized_utterance": "TIME LEFT ON MY THIRTY MINUTE WORKOUT TIMER PLEASE", "normalized_seqlogical": "[IN:GET_TIMER TIME LEFT ON MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THIRTY MINUTE ] ] ] [SL:TIMER_NAME WORKOUT ] [SL:METHOD_TIMER TIMER ] PLEASE ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THIRTY MINUTE ] ] ] [SL:TIMER_NAME WORKOUT ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "workout"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00000034.wav", "split": "test", "intent": "[IN:UPDATE_TIMER Change [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from 45 minutes ] ] ] [SL:DATE_TIME to 35 minutes ] ]", "parameters": {}, "sentence": "Change timer from 45 minutes to 35 minutes", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "CHANGE TIMER FROM FORTY FIVE MINUTES TO THIRTY FIVE MINUTES", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM FORTY FIVE MINUTES ] ] ] [SL:DATE_TIME TO THIRTY FIVE MINUTES ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00000034.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Change timer from 45 minutes to 35 minutes", "seqlogical": "[IN:UPDATE_TIMER Change [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from 45 minutes ] ] ] [SL:DATE_TIME to 35 minutes ] ]", "normalized_utterance": "CHANGE TIMER FROM FORTY FIVE MINUTES TO THIRTY FIVE MINUTES", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM FORTY FIVE MINUTES ] ] ] [SL:DATE_TIME TO THIRTY FIVE MINUTES ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM FORTY FIVE MINUTES ] ] ] [SL:DATE_TIME TO THIRTY FIVE MINUTES ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"method_timer": "timer", "amount": 35}}]}
{"filename": "stop_data/stop/test_0/timer_test/00002153.wav", "split": "test", "intent": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME minutes ] ] ] on [SL:METHOD_TIMER timer ] please ]", "parameters": {}, "sentence": "minutes on timer please", "domain": "timer", "gender": "Male", "native": "No", "normalized_utterance": "MINUTES ON TIMER PLEASE", "normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME MINUTES ] ] ] ON [SL:METHOD_TIMER TIMER ] PLEASE ]", "raw_data": {"file_id": "test_0/timer_test_0/00002153.wav", "domain": "timer", "gender": "Male", "native": "No", "utterance": "minutes on timer please", "seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME minutes ] ] ] on [SL:METHOD_TIMER timer ] please ]", "normalized_utterance": "MINUTES ON TIMER PLEASE", "normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME MINUTES ] ] ] ON [SL:METHOD_TIMER TIMER ] PLEASE ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME MINUTES ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "timer"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00002855.wav", "split": "test", "intent": "[IN:GET_TIMER When will [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME the 1 hour ] ] ] [SL:METHOD_TIMER timer ] end ]", "parameters": {}, "sentence": "When will the 1 hour timer end", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "WHEN WILL THE ONE HOUR TIMER END", "normalized_seqlogical": "[IN:GET_TIMER WHEN WILL [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THE ONE HOUR ] ] ] [SL:METHOD_TIMER TIMER ] END ]", "raw_data": {"file_id": "test_0/timer_test_0/00002855.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "When will the 1 hour timer end", "seqlogical": "[IN:GET_TIMER When will [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME the 1 hour ] ] ] [SL:METHOD_TIMER timer ] end ]", "normalized_utterance": "WHEN WILL THE ONE HOUR TIMER END", "normalized_seqlogical": "[IN:GET_TIMER WHEN WILL [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THE ONE HOUR ] ] ] [SL:METHOD_TIMER TIMER ] END ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THE ONE HOUR ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "timer"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00003745.wav", "split": "test", "intent": "[IN:DELETE_TIMER Can you cancel my [SL:TIMER_NAME generator ] [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for eight hours ] ] ] ? ]", "parameters": {}, "sentence": "Can you cancel my generator timer for eight hours?", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "CAN YOU CANCEL MY GENERATOR TIMER FOR EIGHT HOURS", "normalized_seqlogical": "[IN:DELETE_TIMER CAN YOU CANCEL MY [SL:TIMER_NAME GENERATOR ] [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR EIGHT HOURS ] ] ] ]", "raw_data": {"file_id": "test_1/timer_test/00003745.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Can you cancel my generator timer for eight hours?", "seqlogical": "[IN:DELETE_TIMER Can you cancel my [SL:TIMER_NAME generator ] [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for eight hours ] ] ] ? ]", "normalized_utterance": "CAN YOU CANCEL MY GENERATOR TIMER FOR EIGHT HOURS", "normalized_seqlogical": "[IN:DELETE_TIMER CAN YOU CANCEL MY [SL:TIMER_NAME GENERATOR ] [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR EIGHT HOURS ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_TIMER [SL:TIMER_NAME GENERATOR ] [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR EIGHT HOURS ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_timer", "arguments": {"timer_name": "generator", "method_timer": "cancel"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00002691.wav", "split": "test", "intent": "[IN:GET_TIMER Do I have [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME ten minutes ] ] ] left on my [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "Do I have ten minutes left on my timer", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "DO I HAVE TEN MINUTES LEFT ON MY TIMER", "normalized_seqlogical": "[IN:GET_TIMER DO I HAVE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TEN MINUTES ] ] ] LEFT ON MY [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_1/timer_test/00002691.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Do I have ten minutes left on my timer", "seqlogical": "[IN:GET_TIMER Do I have [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME ten minutes ] ] ] left on my [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "DO I HAVE TEN MINUTES LEFT ON MY TIMER", "normalized_seqlogical": "[IN:GET_TIMER DO I HAVE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TEN MINUTES ] ] ] LEFT ON MY [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TEN MINUTES ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "timer"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00004152.wav", "split": "test", "intent": "[IN:UPDATE_TIMER Can you change my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 30 second ] ] ] [SL:METHOD_TIMER timer ] , please ]", "parameters": {}, "sentence": "Can you change my 30 second timer, please", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "CAN YOU CHANGE MY THIRTY SECOND TIMER PLEASE", "normalized_seqlogical": "[IN:UPDATE_TIMER CAN YOU CHANGE MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THIRTY SECOND ] ] ] [SL:METHOD_TIMER TIMER ] PLEASE ]", "raw_data": {"file_id": "test_0/timer_test_0/00004152.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Can you change my 30 second timer, please", "seqlogical": "[IN:UPDATE_TIMER Can you change my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 30 second ] ] ] [SL:METHOD_TIMER timer ] , please ]", "normalized_utterance": "CAN YOU CHANGE MY THIRTY SECOND TIMER PLEASE", "normalized_seqlogical": "[IN:UPDATE_TIMER CAN YOU CHANGE MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THIRTY SECOND ] ] ] [SL:METHOD_TIMER TIMER ] PLEASE ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THIRTY SECOND ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"method_timer": "timer", "amount": 30}}]}
{"filename": "stop_data/stop/test_0/timer_test/00003634.wav", "split": "test", "intent": "[IN:UPDATE_TIMER Please change my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 20 minute ] ] ] [SL:METHOD_TIMER timer ] [SL:DATE_TIME to 40 minute ] ]", "parameters": {}, "sentence": "Please change my 20 minute timer to 40 minute", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "PLEASE CHANGE MY TWENTY MINUTE TIMER TO FORTY MINUTE", "normalized_seqlogical": "[IN:UPDATE_TIMER PLEASE CHANGE MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWENTY MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] [SL:DATE_TIME TO FORTY MINUTE ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00003634.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Please change my 20 minute timer to 40 minute", "seqlogical": "[IN:UPDATE_TIMER Please change my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 20 minute ] ] ] [SL:METHOD_TIMER timer ] [SL:DATE_TIME to 40 minute ] ]", "normalized_utterance": "PLEASE CHANGE MY TWENTY MINUTE TIMER TO FORTY MINUTE", "normalized_seqlogical": "[IN:UPDATE_TIMER PLEASE CHANGE MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWENTY MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] [SL:DATE_TIME TO FORTY MINUTE ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWENTY MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] [SL:DATE_TIME TO FORTY MINUTE ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"amount": 40, "method_timer": "timer"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00000563.wav", "split": "test", "intent": "[IN:RESTART_TIMER Restart the [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 5 minute ] ] ] [SL:METHOD_TIMER timer ] . ]", "parameters": {}, "sentence": "Restart the 5 minute timer.", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "RESTART THE FIVE MINUTE TIMER", "normalized_seqlogical": "[IN:RESTART_TIMER RESTART THE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FIVE MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00000563.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Restart the 5 minute timer.", "seqlogical": "[IN:RESTART_TIMER Restart the [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 5 minute ] ] ] [SL:METHOD_TIMER timer ] . ]", "normalized_utterance": "RESTART THE FIVE MINUTE TIMER", "normalized_seqlogical": "[IN:RESTART_TIMER RESTART THE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FIVE MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:RESTART_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FIVE MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "restart_timer", "arguments": {"timer_name": "five minute timer", "method_timer": "restart"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00002491.wav", "split": "test", "intent": "[IN:RESTART_TIMER restart and add [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 3 minutes ] ] ] ]", "parameters": {}, "sentence": "restart and add 3 minutes", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "RESTART AND ADD THREE MINUTES", "normalized_seqlogical": "[IN:RESTART_TIMER RESTART AND ADD [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THREE MINUTES ] ] ] ]", "raw_data": {"file_id": "test_1/timer_test/00002491.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "restart and add 3 minutes", "seqlogical": "[IN:RESTART_TIMER restart and add [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 3 minutes ] ] ] ]", "normalized_utterance": "RESTART AND ADD THREE MINUTES", "normalized_seqlogical": "[IN:RESTART_TIMER RESTART AND ADD [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THREE MINUTES ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:RESTART_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THREE MINUTES ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "timer"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00003271.wav", "split": "test", "intent": "[IN:GET_TIMER How much time is left on my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME hour and a half ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "How much time is left on my hour and a half timer", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "HOW MUCH TIME IS LEFT ON MY HOUR AND A HALF TIMER", "normalized_seqlogical": "[IN:GET_TIMER HOW MUCH TIME IS LEFT ON MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME HOUR AND A HALF ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00003271.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "How much time is left on my hour and a half timer", "seqlogical": "[IN:GET_TIMER How much time is left on my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME hour and a half ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "HOW MUCH TIME IS LEFT ON MY HOUR AND A HALF TIMER", "normalized_seqlogical": "[IN:GET_TIMER HOW MUCH TIME IS LEFT ON MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME HOUR AND A HALF ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME HOUR AND A HALF ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "hour and a half"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00003055.wav", "split": "test", "intent": "[IN:GET_TIMER Do I have a [SL:METHOD_TIMER timer ] set to go off [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME in two hours ] ] ] ]", "parameters": {}, "sentence": "Do I have a timer set to go off in two hours", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "DO I HAVE A TIMER SET TO GO OFF IN TWO HOURS", "normalized_seqlogical": "[IN:GET_TIMER DO I HAVE A [SL:METHOD_TIMER TIMER ] SET TO GO OFF [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME IN TWO HOURS ] ] ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00003055.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Do I have a timer set to go off in two hours", "seqlogical": "[IN:GET_TIMER Do I have a [SL:METHOD_TIMER timer ] set to go off [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME in two hours ] ] ] ]", "normalized_utterance": "DO I HAVE A TIMER SET TO GO OFF IN TWO HOURS", "normalized_seqlogical": "[IN:GET_TIMER DO I HAVE A [SL:METHOD_TIMER TIMER ] SET TO GO OFF [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME IN TWO HOURS ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME IN TWO HOURS ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "check"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00000045.wav", "split": "test", "intent": "[IN:DELETE_TIMER Delete [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 1 hour ] ] ] [SL:METHOD_TIMER timer ] . ]", "parameters": {}, "sentence": "Delete 1 hour timer.", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "DELETE ONE HOUR TIMER", "normalized_seqlogical": "[IN:DELETE_TIMER DELETE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME ONE HOUR ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00000045.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Delete 1 hour timer.", "seqlogical": "[IN:DELETE_TIMER Delete [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 1 hour ] ] ] [SL:METHOD_TIMER timer ] . ]", "normalized_utterance": "DELETE ONE HOUR TIMER", "normalized_seqlogical": "[IN:DELETE_TIMER DELETE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME ONE HOUR ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME ONE HOUR ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "delete_timer", "arguments": {"method_timer": "one hour timer"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00004158.wav", "split": "test", "intent": "[IN:UPDATE_TIMER Change the [SL:METHOD_TIMER timer ] I have [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for 15 minutes and 30 seconds ] ] ] ]", "parameters": {}, "sentence": "Change the timer I have for 15 minutes and 30 seconds", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "CHANGE THE TIMER I HAVE FOR FIFTEEN MINUTES AND THIRTY SECONDS", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE THE [SL:METHOD_TIMER TIMER ] I HAVE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR FIFTEEN MINUTES AND THIRTY SECONDS ] ] ] ]", "raw_data": {"file_id": "test_1/timer_test/00004158.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Change the timer I have for 15 minutes and 30 seconds", "seqlogical": "[IN:UPDATE_TIMER Change the [SL:METHOD_TIMER timer ] I have [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for 15 minutes and 30 seconds ] ] ] ]", "normalized_utterance": "CHANGE THE TIMER I HAVE FOR FIFTEEN MINUTES AND THIRTY SECONDS", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE THE [SL:METHOD_TIMER TIMER ] I HAVE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR FIFTEEN MINUTES AND THIRTY SECONDS ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR FIFTEEN MINUTES AND THIRTY SECONDS ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"method_timer": "timer", "amount": 15, "timer_name": "timer"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00003608.wav", "split": "test", "intent": "[IN:UPDATE_TIMER change the [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 10 seconds ] ] ] [SL:METHOD_TIMER timer ] [SL:DATE_TIME to 15 seconds ] ]", "parameters": {}, "sentence": "change the 10 seconds timer to 15 seconds", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "CHANGE THE TEN SECONDS TIMER TO FIFTEEN SECONDS", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE THE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TEN SECONDS ] ] ] [SL:METHOD_TIMER TIMER ] [SL:DATE_TIME TO FIFTEEN SECONDS ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00003608.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "change the 10 seconds timer to 15 seconds", "seqlogical": "[IN:UPDATE_TIMER change the [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 10 seconds ] ] ] [SL:METHOD_TIMER timer ] [SL:DATE_TIME to 15 seconds ] ]", "normalized_utterance": "CHANGE THE TEN SECONDS TIMER TO FIFTEEN SECONDS", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE THE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TEN SECONDS ] ] ] [SL:METHOD_TIMER TIMER ] [SL:DATE_TIME TO FIFTEEN SECONDS ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TEN SECONDS ] ] ] [SL:METHOD_TIMER TIMER ] [SL:DATE_TIME TO FIFTEEN SECONDS ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"timer_name": "10 seconds timer", "amount": 15, "method_timer": "seconds"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00003787.wav", "split": "test", "intent": "[IN:DELETE_TIMER cancel the [SL:METHOD_TIMER timer ] that is [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 15 minutes ] ] ] for me please ]", "parameters": {}, "sentence": "cancel the timer that is 15 minutes for me please", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "CANCEL THE TIMER THAT IS FIFTEEN MINUTES FOR ME PLEASE", "normalized_seqlogical": "[IN:DELETE_TIMER CANCEL THE [SL:METHOD_TIMER TIMER ] THAT IS [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FIFTEEN MINUTES ] ] ] FOR ME PLEASE ]", "raw_data": {"file_id": "test_1/timer_test/00003787.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "cancel the timer that is 15 minutes for me please", "seqlogical": "[IN:DELETE_TIMER cancel the [SL:METHOD_TIMER timer ] that is [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 15 minutes ] ] ] for me please ]", "normalized_utterance": "CANCEL THE TIMER THAT IS FIFTEEN MINUTES FOR ME PLEASE", "normalized_seqlogical": "[IN:DELETE_TIMER CANCEL THE [SL:METHOD_TIMER TIMER ] THAT IS [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FIFTEEN MINUTES ] ] ] FOR ME PLEASE ]", "decoupled_normalized_seqlogical": "[IN:DELETE_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FIFTEEN MINUTES ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_timer", "arguments": {"method_timer": "timer", "amount": 15}}]}
{"filename": "stop_data/stop/test_1/timer_test/00000245.wav", "split": "test", "intent": "[IN:GET_TIMER What [SL:METHOD_TIMER timer ] do I have set for [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME this afternoon ] ] ] ? ]", "parameters": {}, "sentence": "What timer do I have set for this afternoon?", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT TIMER DO I HAVE SET FOR THIS AFTERNOON", "normalized_seqlogical": "[IN:GET_TIMER WHAT [SL:METHOD_TIMER TIMER ] DO I HAVE SET FOR [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THIS AFTERNOON ] ] ] ]", "raw_data": {"file_id": "test_1/timer_test/00000245.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "What timer do I have set for this afternoon?", "seqlogical": "[IN:GET_TIMER What [SL:METHOD_TIMER timer ] do I have set for [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME this afternoon ] ] ] ? ]", "normalized_utterance": "WHAT TIMER DO I HAVE SET FOR THIS AFTERNOON", "normalized_seqlogical": "[IN:GET_TIMER WHAT [SL:METHOD_TIMER TIMER ] DO I HAVE SET FOR [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THIS AFTERNOON ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THIS AFTERNOON ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "set"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00000233.wav", "split": "test", "intent": "[IN:UPDATE_TIMER Change the [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 20 minute ] ] ] [SL:METHOD_TIMER timer ] to a [SL:DATE_TIME 40 minute ] [SL:METHOD_TIMER timer ] . ]", "parameters": {}, "sentence": "Change the 20 minute timer to a 40 minute timer.", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "CHANGE THE TWENTY MINUTE TIMER TO A FORTY MINUTE TIMER", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE THE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWENTY MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] TO A [SL:DATE_TIME FORTY MINUTE ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00000233.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Change the 20 minute timer to a 40 minute timer.", "seqlogical": "[IN:UPDATE_TIMER Change the [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 20 minute ] ] ] [SL:METHOD_TIMER timer ] to a [SL:DATE_TIME 40 minute ] [SL:METHOD_TIMER timer ] . ]", "normalized_utterance": "CHANGE THE TWENTY MINUTE TIMER TO A FORTY MINUTE TIMER", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE THE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWENTY MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] TO A [SL:DATE_TIME FORTY MINUTE ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWENTY MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] [SL:DATE_TIME FORTY MINUTE ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"amount": 40, "method_timer": "timer"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00002128.wav", "split": "test", "intent": "[IN:RESTART_TIMER restart [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 40 minute ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "restart 40 minute timer", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "RESTART FORTY MINUTE TIMER", "normalized_seqlogical": "[IN:RESTART_TIMER RESTART [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FORTY MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_1/timer_test/00002128.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "restart 40 minute timer", "seqlogical": "[IN:RESTART_TIMER restart [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 40 minute ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "RESTART FORTY MINUTE TIMER", "normalized_seqlogical": "[IN:RESTART_TIMER RESTART [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FORTY MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:RESTART_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FORTY MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "restart_timer", "arguments": {"method_timer": "forty minute"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00004143.wav", "split": "test", "intent": "[IN:UPDATE_TIMER Update the [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME one hour ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "Update the one hour timer", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "UPDATE THE ONE HOUR TIMER", "normalized_seqlogical": "[IN:UPDATE_TIMER UPDATE THE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME ONE HOUR ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_1/timer_test/00004143.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Update the one hour timer", "seqlogical": "[IN:UPDATE_TIMER Update the [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME one hour ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "UPDATE THE ONE HOUR TIMER", "normalized_seqlogical": "[IN:UPDATE_TIMER UPDATE THE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME ONE HOUR ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME ONE HOUR ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"method_timer": "one-hour timer"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00000339.wav", "split": "test", "intent": "[IN:DELETE_TIMER delete [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 16 minute ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "delete 16 minute timer", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "DELETE SIXTEEN MINUTE TIMER", "normalized_seqlogical": "[IN:DELETE_TIMER DELETE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME SIXTEEN MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00000339.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "delete 16 minute timer", "seqlogical": "[IN:DELETE_TIMER delete [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 16 minute ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "DELETE SIXTEEN MINUTE TIMER", "normalized_seqlogical": "[IN:DELETE_TIMER DELETE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME SIXTEEN MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME SIXTEEN MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "delete_timer", "arguments": {"method_timer": "timer", "amount": 16}}]}
{"filename": "stop_data/stop/test_0/timer_test/00000815.wav", "split": "test", "intent": "[IN:RESUME_TIMER Resume [SL:METHOD_TIMER timer ] set [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for 5 minutes ] ] ] ]", "parameters": {}, "sentence": "Resume timer set for 5 minutes", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "RESUME TIMER SET FOR FIVE MINUTES", "normalized_seqlogical": "[IN:RESUME_TIMER RESUME [SL:METHOD_TIMER TIMER ] SET [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR FIVE MINUTES ] ] ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00000815.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Resume timer set for 5 minutes", "seqlogical": "[IN:RESUME_TIMER Resume [SL:METHOD_TIMER timer ] set [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for 5 minutes ] ] ] ]", "normalized_utterance": "RESUME TIMER SET FOR FIVE MINUTES", "normalized_seqlogical": "[IN:RESUME_TIMER RESUME [SL:METHOD_TIMER TIMER ] SET [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR FIVE MINUTES ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:RESUME_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR FIVE MINUTES ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "resume_timer", "arguments": {"method_timer": "timer"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00003298.wav", "split": "test", "intent": "[IN:DELETE_TIMER Cancel the [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME sixty minute long ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "Cancel the sixty minute long timer", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "CANCEL THE SIXTY MINUTE LONG TIMER", "normalized_seqlogical": "[IN:DELETE_TIMER CANCEL THE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME SIXTY MINUTE LONG ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00003298.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Cancel the sixty minute long timer", "seqlogical": "[IN:DELETE_TIMER Cancel the [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME sixty minute long ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "CANCEL THE SIXTY MINUTE LONG TIMER", "normalized_seqlogical": "[IN:DELETE_TIMER CANCEL THE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME SIXTY MINUTE LONG ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME SIXTY MINUTE LONG ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "delete_timer", "arguments": {"method_timer": "sixty minute long timer"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00003736.wav", "split": "test", "intent": "[IN:GET_TIMER Tell me how much longer on the [SL:TIMER_NAME workout ] [SL:METHOD_TIMER timer ] set [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 30 minute ] ] ] ]", "parameters": {}, "sentence": "Tell me how much longer on the workout timer set 30 minute", "domain": "timer", "gender": "Male", "native": "Yes", "normalized_utterance": "TELL ME HOW MUCH LONGER ON THE WORKOUT TIMER SET THIRTY MINUTE", "normalized_seqlogical": "[IN:GET_TIMER TELL ME HOW MUCH LONGER ON THE [SL:TIMER_NAME WORKOUT ] [SL:METHOD_TIMER TIMER ] SET [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THIRTY MINUTE ] ] ] ]", "raw_data": {"file_id": "test_1/timer_test/00003736.wav", "domain": "timer", "gender": "Male", "native": "Yes", "utterance": "Tell me how much longer on the workout timer set 30 minute", "seqlogical": "[IN:GET_TIMER Tell me how much longer on the [SL:TIMER_NAME workout ] [SL:METHOD_TIMER timer ] set [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 30 minute ] ] ] ]", "normalized_utterance": "TELL ME HOW MUCH LONGER ON THE WORKOUT TIMER SET THIRTY MINUTE", "normalized_seqlogical": "[IN:GET_TIMER TELL ME HOW MUCH LONGER ON THE [SL:TIMER_NAME WORKOUT ] [SL:METHOD_TIMER TIMER ] SET [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THIRTY MINUTE ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME WORKOUT ] [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THIRTY MINUTE ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "workout"}}]}
{"filename": "stop_data/stop/test_1/event_test/00001282.wav", "split": "test", "intent": "[IN:GET_EVENT What [SL:CATEGORY_EVENT musicals ] are coming to [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION a theater ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ] ] [SL:DATE_TIME within the next two months ] ]", "parameters": {}, "sentence": "What musicals are coming to a theater near me within the next two months", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT MUSICALS ARE COMING TO A THEATER NEAR ME WITHIN THE NEXT TWO MONTHS", "normalized_seqlogical": "[IN:GET_EVENT WHAT [SL:CATEGORY_EVENT MUSICALS ] ARE COMING TO [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION A THEATER ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ] ] [SL:DATE_TIME WITHIN THE NEXT TWO MONTHS ] ]", "raw_data": {"file_id": "test_1/event_test/00001282.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "What musicals are coming to a theater near me within the next two months", "seqlogical": "[IN:GET_EVENT What [SL:CATEGORY_EVENT musicals ] are coming to [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION a theater ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ] ] [SL:DATE_TIME within the next two months ] ]", "normalized_utterance": "WHAT MUSICALS ARE COMING TO A THEATER NEAR ME WITHIN THE NEXT TWO MONTHS", "normalized_seqlogical": "[IN:GET_EVENT WHAT [SL:CATEGORY_EVENT MUSICALS ] ARE COMING TO [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION A THEATER ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ] ] [SL:DATE_TIME WITHIN THE NEXT TWO MONTHS ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT MUSICALS ] [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION A THEATER ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ] ] [SL:DATE_TIME WITHIN THE NEXT TWO MONTHS ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"category_event": "musicals", "location": "MOCK_RESPONSE(get_location)", "date_time": "within the next two months"}}]}
{"filename": "stop_data/stop/test_0/event_test/00001395.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT Free ] [SL:CATEGORY_EVENT holiday movies ] in [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION theater ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ] ] ]", "parameters": {}, "sentence": "Free holiday movies in theater near me", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "FREE HOLIDAY MOVIES IN THEATER NEAR ME", "normalized_seqlogical": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT FREE ] [SL:CATEGORY_EVENT HOLIDAY MOVIES ] IN [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THEATER ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/event_test_0/00001395.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Free holiday movies in theater near me", "seqlogical": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT Free ] [SL:CATEGORY_EVENT holiday movies ] in [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION theater ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ] ] ]", "normalized_utterance": "FREE HOLIDAY MOVIES IN THEATER NEAR ME", "normalized_seqlogical": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT FREE ] [SL:CATEGORY_EVENT HOLIDAY MOVIES ] IN [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THEATER ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT FREE ] [SL:CATEGORY_EVENT HOLIDAY MOVIES ] [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THEATER ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "theater", "location_user": "me"}}, {"name": "get_event", "arguments": {"category_event": "holiday movies", "location": "theater", "date_time": "today"}}]}
{"filename": "stop_data/stop/test_0/event_test/00001282.wav", "split": "test", "intent": "[IN:GET_EVENT What [SL:CATEGORY_EVENT musicals ] are coming to [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION a theater ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ] ] [SL:DATE_TIME within the next two months ] ]", "parameters": {}, "sentence": "What musicals are coming to a theater near me within the next two months", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT MUSICALS ARE COMING TO A THEATER NEAR ME WITHIN THE NEXT TWO MONTHS", "normalized_seqlogical": "[IN:GET_EVENT WHAT [SL:CATEGORY_EVENT MUSICALS ] ARE COMING TO [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION A THEATER ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ] ] [SL:DATE_TIME WITHIN THE NEXT TWO MONTHS ] ]", "raw_data": {"file_id": "test_0/event_test_0/00001282.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "What musicals are coming to a theater near me within the next two months", "seqlogical": "[IN:GET_EVENT What [SL:CATEGORY_EVENT musicals ] are coming to [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION a theater ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ] ] [SL:DATE_TIME within the next two months ] ]", "normalized_utterance": "WHAT MUSICALS ARE COMING TO A THEATER NEAR ME WITHIN THE NEXT TWO MONTHS", "normalized_seqlogical": "[IN:GET_EVENT WHAT [SL:CATEGORY_EVENT MUSICALS ] ARE COMING TO [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION A THEATER ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ] ] [SL:DATE_TIME WITHIN THE NEXT TWO MONTHS ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT MUSICALS ] [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION A THEATER ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ] ] [SL:DATE_TIME WITHIN THE NEXT TWO MONTHS ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"category_event": "musicals", "location": "MOCK_RESPONSE(get_location)", "date_time": "within the next two months"}}]}
{"filename": "stop_data/stop/test_0/event_test/00000872.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:CATEGORY_EVENT Concerts ] by [SL:NAME_EVENT Bruno Mars ] [SL:DATE_TIME during the next few months ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS close to ] [SL:LOCATION [IN:GET_LOCATION_HOME where [SL:CONTACT I ] live ] ] ] ] ]", "parameters": {}, "sentence": "Concerts by Bruno Mars during the next few months close to where I live", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "CONCERTS BY BRUNO MARS DURING THE NEXT FEW MONTHS CLOSE TO WHERE I LIVE", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT CONCERTS ] BY [SL:NAME_EVENT BRUNO MARS ] [SL:DATE_TIME DURING THE NEXT FEW MONTHS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS CLOSE TO ] [SL:LOCATION [IN:GET_LOCATION_HOME WHERE [SL:CONTACT I ] LIVE ] ] ] ] ]", "raw_data": {"file_id": "test_0/event_test_0/00000872.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Concerts by Bruno Mars during the next few months close to where I live", "seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT Concerts ] by [SL:NAME_EVENT Bruno Mars ] [SL:DATE_TIME during the next few months ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS close to ] [SL:LOCATION [IN:GET_LOCATION_HOME where [SL:CONTACT I ] live ] ] ] ] ]", "normalized_utterance": "CONCERTS BY BRUNO MARS DURING THE NEXT FEW MONTHS CLOSE TO WHERE I LIVE", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT CONCERTS ] BY [SL:NAME_EVENT BRUNO MARS ] [SL:DATE_TIME DURING THE NEXT FEW MONTHS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS CLOSE TO ] [SL:LOCATION [IN:GET_LOCATION_HOME WHERE [SL:CONTACT I ] LIVE ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT CONCERTS ] [SL:NAME_EVENT BRUNO MARS ] [SL:DATE_TIME DURING THE NEXT FEW MONTHS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS CLOSE TO ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT I ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "where I live"}}, {"name": "get_event", "arguments": {"category_event": "concerts", "location": "MOCK_RESPONSE(get_location)", "date_time": "next few months", "name_event": "Bruno Mars"}}]}
{"filename": "stop_data/stop/test_1/event_test/00000872.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:CATEGORY_EVENT Concerts ] by [SL:NAME_EVENT Bruno Mars ] [SL:DATE_TIME during the next few months ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS close to ] [SL:LOCATION [IN:GET_LOCATION_HOME where [SL:CONTACT I ] live ] ] ] ] ]", "parameters": {}, "sentence": "Concerts by Bruno Mars during the next few months close to where I live", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "CONCERTS BY BRUNO MARS DURING THE NEXT FEW MONTHS CLOSE TO WHERE I LIVE", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT CONCERTS ] BY [SL:NAME_EVENT BRUNO MARS ] [SL:DATE_TIME DURING THE NEXT FEW MONTHS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS CLOSE TO ] [SL:LOCATION [IN:GET_LOCATION_HOME WHERE [SL:CONTACT I ] LIVE ] ] ] ] ]", "raw_data": {"file_id": "test_1/event_test/00000872.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Concerts by Bruno Mars during the next few months close to where I live", "seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT Concerts ] by [SL:NAME_EVENT Bruno Mars ] [SL:DATE_TIME during the next few months ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS close to ] [SL:LOCATION [IN:GET_LOCATION_HOME where [SL:CONTACT I ] live ] ] ] ] ]", "normalized_utterance": "CONCERTS BY BRUNO MARS DURING THE NEXT FEW MONTHS CLOSE TO WHERE I LIVE", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT CONCERTS ] BY [SL:NAME_EVENT BRUNO MARS ] [SL:DATE_TIME DURING THE NEXT FEW MONTHS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS CLOSE TO ] [SL:LOCATION [IN:GET_LOCATION_HOME WHERE [SL:CONTACT I ] LIVE ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT CONCERTS ] [SL:NAME_EVENT BRUNO MARS ] [SL:DATE_TIME DURING THE NEXT FEW MONTHS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS CLOSE TO ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT I ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "where I live"}}, {"name": "get_event", "arguments": {"category_event": "concerts", "location": "MOCK_RESPONSE(get_location)", "date_time": "next few months", "name_event": "Bruno Mars"}}]}
{"filename": "stop_data/stop/test_1/event_test/00001395.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT Free ] [SL:CATEGORY_EVENT holiday movies ] in [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION theater ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ] ] ]", "parameters": {}, "sentence": "Free holiday movies in theater near me", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "FREE HOLIDAY MOVIES IN THEATER NEAR ME", "normalized_seqlogical": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT FREE ] [SL:CATEGORY_EVENT HOLIDAY MOVIES ] IN [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THEATER ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/event_test/00001395.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Free holiday movies in theater near me", "seqlogical": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT Free ] [SL:CATEGORY_EVENT holiday movies ] in [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION theater ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ] ] ]", "normalized_utterance": "FREE HOLIDAY MOVIES IN THEATER NEAR ME", "normalized_seqlogical": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT FREE ] [SL:CATEGORY_EVENT HOLIDAY MOVIES ] IN [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THEATER ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT FREE ] [SL:CATEGORY_EVENT HOLIDAY MOVIES ] [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THEATER ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "theater near me"}}, {"name": "get_event", "arguments": {"category_event": "holiday movies", "location": "theater near me"}}]}
{"filename": "stop_data/stop/test_0/event_test/00001766.wav", "split": "test", "intent": "[IN:GET_EVENT Last date to [SL:CATEGORY_EVENT Take pictures ] with [SL:NAME_EVENT santa ] in [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the mall ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ] ] [SL:DATE_TIME next week ] ]", "parameters": {}, "sentence": "Last date to Take pictures with santa in the mall near me next week", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "LAST DATE TO TAKE PICTURES WITH SANTA IN THE MALL NEAR ME NEXT WEEK", "normalized_seqlogical": "[IN:GET_EVENT LAST DATE TO [SL:CATEGORY_EVENT TAKE PICTURES ] WITH [SL:NAME_EVENT SANTA ] IN [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE MALL ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ] ] [SL:DATE_TIME NEXT WEEK ] ]", "raw_data": {"file_id": "test_0/event_test_0/00001766.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Last date to Take pictures with santa in the mall near me next week", "seqlogical": "[IN:GET_EVENT Last date to [SL:CATEGORY_EVENT Take pictures ] with [SL:NAME_EVENT santa ] in [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the mall ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ] ] [SL:DATE_TIME next week ] ]", "normalized_utterance": "LAST DATE TO TAKE PICTURES WITH SANTA IN THE MALL NEAR ME NEXT WEEK", "normalized_seqlogical": "[IN:GET_EVENT LAST DATE TO [SL:CATEGORY_EVENT TAKE PICTURES ] WITH [SL:NAME_EVENT SANTA ] IN [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE MALL ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ] ] [SL:DATE_TIME NEXT WEEK ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT TAKE PICTURES ] [SL:NAME_EVENT SANTA ] [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE MALL ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ] ] [SL:DATE_TIME NEXT WEEK ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "mall", "location_user": "me"}}, {"name": "get_event", "arguments": {"category_event": "pictures with Santa", "location": "mall", "date_time": "next week"}}]}
{"filename": "stop_data/stop/test_1/event_test/00001392.wav", "split": "test", "intent": "[IN:GET_EVENT looking for [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION a christmas tree farm ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ] ] that has events [SL:DATE_TIME today ] ]", "parameters": {}, "sentence": "looking for a christmas tree farm near me that has events today", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "LOOKING FOR A CHRISTMAS TREE FARM NEAR ME THAT HAS EVENTS TODAY", "normalized_seqlogical": "[IN:GET_EVENT LOOKING FOR [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION A CHRISTMAS TREE FARM ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ] ] THAT HAS EVENTS [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_1/event_test/00001392.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "looking for a christmas tree farm near me that has events today", "seqlogical": "[IN:GET_EVENT looking for [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION a christmas tree farm ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ] ] that has events [SL:DATE_TIME today ] ]", "normalized_utterance": "LOOKING FOR A CHRISTMAS TREE FARM NEAR ME THAT HAS EVENTS TODAY", "normalized_seqlogical": "[IN:GET_EVENT LOOKING FOR [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION A CHRISTMAS TREE FARM ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ] ] THAT HAS EVENTS [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION A CHRISTMAS TREE FARM ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ] ] [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"category_event": "events", "location": "current location", "date_time": "today"}}]}
{"filename": "stop_data/stop/test_0/event_test/00001392.wav", "split": "test", "intent": "[IN:GET_EVENT looking for [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION a christmas tree farm ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ] ] that has events [SL:DATE_TIME today ] ]", "parameters": {}, "sentence": "looking for a christmas tree farm near me that has events today", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "LOOKING FOR A CHRISTMAS TREE FARM NEAR ME THAT HAS EVENTS TODAY", "normalized_seqlogical": "[IN:GET_EVENT LOOKING FOR [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION A CHRISTMAS TREE FARM ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ] ] THAT HAS EVENTS [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_0/event_test_0/00001392.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "looking for a christmas tree farm near me that has events today", "seqlogical": "[IN:GET_EVENT looking for [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION a christmas tree farm ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ] ] that has events [SL:DATE_TIME today ] ]", "normalized_utterance": "LOOKING FOR A CHRISTMAS TREE FARM NEAR ME THAT HAS EVENTS TODAY", "normalized_seqlogical": "[IN:GET_EVENT LOOKING FOR [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION A CHRISTMAS TREE FARM ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ] ] THAT HAS EVENTS [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION A CHRISTMAS TREE FARM ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ] ] [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"location": "MOCK_RESPONSE(get_location)", "date_time": "today", "category_event": "Christmas tree farm"}}]}
{"filename": "stop_data/stop/test_0/event_test/00000571.wav", "split": "test", "intent": "[IN:GET_EVENT What is there to do [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS close to ] [SL:LOCATION [IN:GET_LOCATION_HOME home ] ] ] ] and [SL:ATTRIBUTE_EVENT free ] ]", "parameters": {}, "sentence": "What is there to do close to home and free", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT IS THERE TO DO CLOSE TO HOME AND FREE", "normalized_seqlogical": "[IN:GET_EVENT WHAT IS THERE TO DO [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS CLOSE TO ] [SL:LOCATION [IN:GET_LOCATION_HOME HOME ] ] ] ] AND [SL:ATTRIBUTE_EVENT FREE ] ]", "raw_data": {"file_id": "test_0/event_test_0/00000571.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "What is there to do close to home and free", "seqlogical": "[IN:GET_EVENT What is there to do [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS close to ] [SL:LOCATION [IN:GET_LOCATION_HOME home ] ] ] ] and [SL:ATTRIBUTE_EVENT free ] ]", "normalized_utterance": "WHAT IS THERE TO DO CLOSE TO HOME AND FREE", "normalized_seqlogical": "[IN:GET_EVENT WHAT IS THERE TO DO [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS CLOSE TO ] [SL:LOCATION [IN:GET_LOCATION_HOME HOME ] ] ] ] AND [SL:ATTRIBUTE_EVENT FREE ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS CLOSE TO ] [SL:LOCATION [IN:GET_LOCATION_HOME ] ] ] ] [SL:ATTRIBUTE_EVENT FREE ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "home"}}, {"name": "get_event", "arguments": {"location": "home", "category_event": "free"}}]}
{"filename": "stop_data/stop/test_0/event_test/00001136.wav", "split": "test", "intent": "[IN:GET_EVENT What events are happening [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION [IN:GET_LOCATION_SCHOOL school ] ] ] ] [SL:DATE_TIME today ] ]", "parameters": {}, "sentence": "What events are happening near school today", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT EVENTS ARE HAPPENING NEAR SCHOOL TODAY", "normalized_seqlogical": "[IN:GET_EVENT WHAT EVENTS ARE HAPPENING [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_SCHOOL SCHOOL ] ] ] ] [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_0/event_test_0/00001136.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "What events are happening near school today", "seqlogical": "[IN:GET_EVENT What events are happening [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION [IN:GET_LOCATION_SCHOOL school ] ] ] ] [SL:DATE_TIME today ] ]", "normalized_utterance": "WHAT EVENTS ARE HAPPENING NEAR SCHOOL TODAY", "normalized_seqlogical": "[IN:GET_EVENT WHAT EVENTS ARE HAPPENING [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_SCHOOL SCHOOL ] ] ] ] [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_SCHOOL ] ] ] ] [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "your school"}}, {"name": "get_event", "arguments": {"location": "your school", "date_time": "today"}}]}
{"filename": "stop_data/stop/test_1/event_test/00000571.wav", "split": "test", "intent": "[IN:GET_EVENT What is there to do [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS close to ] [SL:LOCATION [IN:GET_LOCATION_HOME home ] ] ] ] and [SL:ATTRIBUTE_EVENT free ] ]", "parameters": {}, "sentence": "What is there to do close to home and free", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT IS THERE TO DO CLOSE TO HOME AND FREE", "normalized_seqlogical": "[IN:GET_EVENT WHAT IS THERE TO DO [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS CLOSE TO ] [SL:LOCATION [IN:GET_LOCATION_HOME HOME ] ] ] ] AND [SL:ATTRIBUTE_EVENT FREE ] ]", "raw_data": {"file_id": "test_1/event_test/00000571.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "What is there to do close to home and free", "seqlogical": "[IN:GET_EVENT What is there to do [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS close to ] [SL:LOCATION [IN:GET_LOCATION_HOME home ] ] ] ] and [SL:ATTRIBUTE_EVENT free ] ]", "normalized_utterance": "WHAT IS THERE TO DO CLOSE TO HOME AND FREE", "normalized_seqlogical": "[IN:GET_EVENT WHAT IS THERE TO DO [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS CLOSE TO ] [SL:LOCATION [IN:GET_LOCATION_HOME HOME ] ] ] ] AND [SL:ATTRIBUTE_EVENT FREE ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS CLOSE TO ] [SL:LOCATION [IN:GET_LOCATION_HOME ] ] ] ] [SL:ATTRIBUTE_EVENT FREE ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "home"}}, {"name": "get_event", "arguments": {"location": "home", "category_event": "free"}}]}
{"filename": "stop_data/stop/test_0/event_test/00001050.wav", "split": "test", "intent": "[IN:GET_EVENT What is there to do [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION_USER here ] ] ] ]", "parameters": {}, "sentence": "What is there to do around here", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT IS THERE TO DO AROUND HERE", "normalized_seqlogical": "[IN:GET_EVENT WHAT IS THERE TO DO [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION_USER HERE ] ] ] ]", "raw_data": {"file_id": "test_0/event_test_0/00001050.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "What is there to do around here", "seqlogical": "[IN:GET_EVENT What is there to do [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION_USER here ] ] ] ]", "normalized_utterance": "WHAT IS THERE TO DO AROUND HERE", "normalized_seqlogical": "[IN:GET_EVENT WHAT IS THERE TO DO [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION_USER HERE ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION_USER HERE ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "here"}}, {"name": "get_event", "arguments": {"location": "here"}}]}
{"filename": "stop_data/stop/test_1/event_test/00001849.wav", "split": "test", "intent": "[IN:GET_EVENT do we have any [SL:CATEGORY_EVENT board game nights ] planned at [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT jacks ] house ] ] [SL:DATE_TIME next week ] ]", "parameters": {}, "sentence": "do we have any board game nights planned at jacks house next week", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "DO WE HAVE ANY BOARD GAME NIGHTS PLANNED AT JACKS HOUSE NEXT WEEK", "normalized_seqlogical": "[IN:GET_EVENT DO WE HAVE ANY [SL:CATEGORY_EVENT BOARD GAME NIGHTS ] PLANNED AT [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT JACKS ] HOUSE ] ] [SL:DATE_TIME NEXT WEEK ] ]", "raw_data": {"file_id": "test_1/event_test/00001849.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "do we have any board game nights planned at jacks house next week", "seqlogical": "[IN:GET_EVENT do we have any [SL:CATEGORY_EVENT board game nights ] planned at [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT jacks ] house ] ] [SL:DATE_TIME next week ] ]", "normalized_utterance": "DO WE HAVE ANY BOARD GAME NIGHTS PLANNED AT JACKS HOUSE NEXT WEEK", "normalized_seqlogical": "[IN:GET_EVENT DO WE HAVE ANY [SL:CATEGORY_EVENT BOARD GAME NIGHTS ] PLANNED AT [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT JACKS ] HOUSE ] ] [SL:DATE_TIME NEXT WEEK ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT BOARD GAME NIGHTS ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT JACKS ] ] ] [SL:DATE_TIME NEXT WEEK ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"location": "Jack's house", "category_event": "board game night", "date_time": "next week"}}]}
{"filename": "stop_data/stop/test_1/event_test/00002147.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:DATE_TIME Christmas ] [SL:CATEGORY_EVENT carols ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION Portland , Oregon ] ] ] ]", "parameters": {}, "sentence": "Christmas carols near Portland, Oregon", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "CHRISTMAS CAROLS NEAR PORTLAND OREGON", "normalized_seqlogical": "[IN:GET_EVENT [SL:DATE_TIME CHRISTMAS ] [SL:CATEGORY_EVENT CAROLS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION PORTLAND OREGON ] ] ] ]", "raw_data": {"file_id": "test_1/event_test/00002147.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Christmas carols near Portland, Oregon", "seqlogical": "[IN:GET_EVENT [SL:DATE_TIME Christmas ] [SL:CATEGORY_EVENT carols ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION Portland , Oregon ] ] ] ]", "normalized_utterance": "CHRISTMAS CAROLS NEAR PORTLAND OREGON", "normalized_seqlogical": "[IN:GET_EVENT [SL:DATE_TIME CHRISTMAS ] [SL:CATEGORY_EVENT CAROLS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION PORTLAND OREGON ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:DATE_TIME CHRISTMAS ] [SL:CATEGORY_EVENT CAROLS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION PORTLAND OREGON ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"location": "Portland, Oregon", "category_event": "Christmas carols"}}]}
{"filename": "stop_data/stop/test_1/event_test/00001427.wav", "split": "test", "intent": "[IN:GET_EVENT What time is [SL:CATEGORY_EVENT the President 's rally ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the bay center ] ] ] [SL:DATE_TIME Friday night ] ]", "parameters": {}, "sentence": "What time is the President's rally at the bay center Friday night", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT TIME IS THE PRESIDENT 'S RALLY AT THE BAY CENTER FRIDAY NIGHT", "normalized_seqlogical": "[IN:GET_EVENT WHAT TIME IS [SL:CATEGORY_EVENT THE PRESIDENT 'S RALLY ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE BAY CENTER ] ] ] [SL:DATE_TIME FRIDAY NIGHT ] ]", "raw_data": {"file_id": "test_1/event_test/00001427.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "What time is the President's rally at the bay center Friday night", "seqlogical": "[IN:GET_EVENT What time is [SL:CATEGORY_EVENT the President 's rally ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the bay center ] ] ] [SL:DATE_TIME Friday night ] ]", "normalized_utterance": "WHAT TIME IS THE PRESIDENT 'S RALLY AT THE BAY CENTER FRIDAY NIGHT", "normalized_seqlogical": "[IN:GET_EVENT WHAT TIME IS [SL:CATEGORY_EVENT THE PRESIDENT 'S RALLY ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE BAY CENTER ] ] ] [SL:DATE_TIME FRIDAY NIGHT ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT THE PRESIDENT 'S RALLY ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE BAY CENTER ] ] ] [SL:DATE_TIME FRIDAY NIGHT ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"location": "Bay Center", "date_time": "Friday night", "category_event": "rally"}}]}
{"filename": "stop_data/stop/test_1/event_test/00000398.wav", "split": "test", "intent": "[IN:GET_EVENT When is the [SL:ORDINAL next ] [SL:CATEGORY_EVENT concert ] in [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the park ] ] ] ]", "parameters": {}, "sentence": "When is the next concert in the park", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "WHEN IS THE NEXT CONCERT IN THE PARK", "normalized_seqlogical": "[IN:GET_EVENT WHEN IS THE [SL:ORDINAL NEXT ] [SL:CATEGORY_EVENT CONCERT ] IN [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE PARK ] ] ] ]", "raw_data": {"file_id": "test_1/event_test/00000398.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "When is the next concert in the park", "seqlogical": "[IN:GET_EVENT When is the [SL:ORDINAL next ] [SL:CATEGORY_EVENT concert ] in [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the park ] ] ] ]", "normalized_utterance": "WHEN IS THE NEXT CONCERT IN THE PARK", "normalized_seqlogical": "[IN:GET_EVENT WHEN IS THE [SL:ORDINAL NEXT ] [SL:CATEGORY_EVENT CONCERT ] IN [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE PARK ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:ORDINAL NEXT ] [SL:CATEGORY_EVENT CONCERT ] [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE PARK ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"category_event": "concert", "location": "Park"}}]}
{"filename": "stop_data/stop/test_0/event_test/00001207.wav", "split": "test", "intent": "[IN:GET_EVENT what is [SL:CATEGORY_EVENT the anime event ] happening [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME next month ] ]", "parameters": {}, "sentence": "what is the anime event happening near me next month", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT IS THE ANIME EVENT HAPPENING NEAR ME NEXT MONTH", "normalized_seqlogical": "[IN:GET_EVENT WHAT IS [SL:CATEGORY_EVENT THE ANIME EVENT ] HAPPENING [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME NEXT MONTH ] ]", "raw_data": {"file_id": "test_0/event_test_0/00001207.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "what is the anime event happening near me next month", "seqlogical": "[IN:GET_EVENT what is [SL:CATEGORY_EVENT the anime event ] happening [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME next month ] ]", "normalized_utterance": "WHAT IS THE ANIME EVENT HAPPENING NEAR ME NEXT MONTH", "normalized_seqlogical": "[IN:GET_EVENT WHAT IS [SL:CATEGORY_EVENT THE ANIME EVENT ] HAPPENING [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME NEXT MONTH ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT THE ANIME EVENT ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME NEXT MONTH ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"category_event": "anime", "location": "MOCK_RESPONSE(get_location)", "date_time": "next month"}}]}
{"filename": "stop_data/stop/test_1/event_test/00000829.wav", "split": "test", "intent": "[IN:GET_EVENT Any [SL:CATEGORY_EVENT concert events ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION Chicago ] ] ] [SL:DATE_TIME this weekend ] ]", "parameters": {}, "sentence": "Any concert events around Chicago  this weekend", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "ANY CONCERT EVENTS AROUND CHICAGO THIS WEEKEND", "normalized_seqlogical": "[IN:GET_EVENT ANY [SL:CATEGORY_EVENT CONCERT EVENTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION CHICAGO ] ] ] [SL:DATE_TIME THIS WEEKEND ] ]", "raw_data": {"file_id": "test_1/event_test/00000829.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Any concert events around Chicago  this weekend", "seqlogical": "[IN:GET_EVENT Any [SL:CATEGORY_EVENT concert events ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION Chicago ] ] ] [SL:DATE_TIME this weekend ] ]", "normalized_utterance": "ANY CONCERT EVENTS AROUND CHICAGO THIS WEEKEND", "normalized_seqlogical": "[IN:GET_EVENT ANY [SL:CATEGORY_EVENT CONCERT EVENTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION CHICAGO ] ] ] [SL:DATE_TIME THIS WEEKEND ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT CONCERT EVENTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION CHICAGO ] ] ] [SL:DATE_TIME THIS WEEKEND ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"category_event": "concert", "location": "Chicago", "date_time": "this weekend"}}]}
{"filename": "stop_data/stop/test_1/event_test/00002111.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:CATEGORY_EVENT Wine tasting events ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME for this weekend ] ]", "parameters": {}, "sentence": "Wine tasting events near me for this weekend", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "WINE TASTING EVENTS NEAR ME FOR THIS WEEKEND", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT WINE TASTING EVENTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME FOR THIS WEEKEND ] ]", "raw_data": {"file_id": "test_1/event_test/00002111.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Wine tasting events near me for this weekend", "seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT Wine tasting events ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME for this weekend ] ]", "normalized_utterance": "WINE TASTING EVENTS NEAR ME FOR THIS WEEKEND", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT WINE TASTING EVENTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME FOR THIS WEEKEND ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT WINE TASTING EVENTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME FOR THIS WEEKEND ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"category_event": "wine tasting", "location": "MOCK_RESPONSE(get_location)", "date_time": "this weekend"}}]}
{"filename": "stop_data/stop/test_1/event_test/00002456.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:CATEGORY_EVENT food and wine events ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME this month ] ]", "parameters": {}, "sentence": "food and wine events near me this month", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "FOOD AND WINE EVENTS NEAR ME THIS MONTH", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT FOOD AND WINE EVENTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME THIS MONTH ] ]", "raw_data": {"file_id": "test_1/event_test/00002456.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "food and wine events near me this month", "seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT food and wine events ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME this month ] ]", "normalized_utterance": "FOOD AND WINE EVENTS NEAR ME THIS MONTH", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT FOOD AND WINE EVENTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME THIS MONTH ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT FOOD AND WINE EVENTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME THIS MONTH ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"category_event": "wine", "location": "MOCK_RESPONSE(get_location)", "date_time": "this month"}}]}
{"filename": "stop_data/stop/test_1/event_test/00000765.wav", "split": "test", "intent": "[IN:GET_EVENT Are there any [SL:CATEGORY_EVENT Pokemon Go Gaming Tours ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ]", "parameters": {}, "sentence": "Are there any Pokemon Go Gaming Tours near me", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "ARE THERE ANY POKEMON GO GAMING TOURS NEAR ME", "normalized_seqlogical": "[IN:GET_EVENT ARE THERE ANY [SL:CATEGORY_EVENT POKEMON GO GAMING TOURS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]", "raw_data": {"file_id": "test_1/event_test/00000765.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Are there any Pokemon Go Gaming Tours near me", "seqlogical": "[IN:GET_EVENT Are there any [SL:CATEGORY_EVENT Pokemon Go Gaming Tours ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ]", "normalized_utterance": "ARE THERE ANY POKEMON GO GAMING TOURS NEAR ME", "normalized_seqlogical": "[IN:GET_EVENT ARE THERE ANY [SL:CATEGORY_EVENT POKEMON GO GAMING TOURS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT POKEMON GO GAMING TOURS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"category_event": "gaming tours", "location": "MOCK_RESPONSE(get_location)"}}]}
{"filename": "stop_data/stop/test_0/event_test/00001375.wav", "split": "test", "intent": "[IN:GET_EVENT Any [SL:CATEGORY_EVENT Country Music concerts ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION San Francisco ] ] ] ]", "parameters": {}, "sentence": "Any Country Music concerts near San Francisco", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "ANY COUNTRY MUSIC CONCERTS NEAR SAN FRANCISCO", "normalized_seqlogical": "[IN:GET_EVENT ANY [SL:CATEGORY_EVENT COUNTRY MUSIC CONCERTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION SAN FRANCISCO ] ] ] ]", "raw_data": {"file_id": "test_0/event_test_0/00001375.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Any Country Music concerts near San Francisco", "seqlogical": "[IN:GET_EVENT Any [SL:CATEGORY_EVENT Country Music concerts ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION San Francisco ] ] ] ]", "normalized_utterance": "ANY COUNTRY MUSIC CONCERTS NEAR SAN FRANCISCO", "normalized_seqlogical": "[IN:GET_EVENT ANY [SL:CATEGORY_EVENT COUNTRY MUSIC CONCERTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION SAN FRANCISCO ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT COUNTRY MUSIC CONCERTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION SAN FRANCISCO ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"category_event": "country music concerts", "location": "San Francisco"}}]}
{"filename": "stop_data/stop/test_1/event_test/00002318.wav", "split": "test", "intent": "[IN:GET_EVENT Things to do at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the Hickam Beach ] ] ] [SL:DATE_TIME this December ] ]", "parameters": {}, "sentence": "Things to do at the Hickam Beach this December", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "THINGS TO DO AT THE HICKAM BEACH THIS DECEMBER", "normalized_seqlogical": "[IN:GET_EVENT THINGS TO DO AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE HICKAM BEACH ] ] ] [SL:DATE_TIME THIS DECEMBER ] ]", "raw_data": {"file_id": "test_1/event_test/00002318.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Things to do at the Hickam Beach this December", "seqlogical": "[IN:GET_EVENT Things to do at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the Hickam Beach ] ] ] [SL:DATE_TIME this December ] ]", "normalized_utterance": "THINGS TO DO AT THE HICKAM BEACH THIS DECEMBER", "normalized_seqlogical": "[IN:GET_EVENT THINGS TO DO AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE HICKAM BEACH ] ] ] [SL:DATE_TIME THIS DECEMBER ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE HICKAM BEACH ] ] ] [SL:DATE_TIME THIS DECEMBER ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"location": "Hickam Beach", "date_time": "December"}}]}
{"filename": "stop_data/stop/test_1/event_test/00002538.wav", "split": "test", "intent": "[IN:GET_EVENT Any [SL:CATEGORY_EVENT music events ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION Phoenix ] ] ] [SL:DATE_TIME this weekend ] ]", "parameters": {}, "sentence": "Any music events near Phoenix this weekend", "domain": "event", "gender": "Male", "native": "No", "normalized_utterance": "ANY MUSIC EVENTS NEAR PHOENIX THIS WEEKEND", "normalized_seqlogical": "[IN:GET_EVENT ANY [SL:CATEGORY_EVENT MUSIC EVENTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION PHOENIX ] ] ] [SL:DATE_TIME THIS WEEKEND ] ]", "raw_data": {"file_id": "test_1/event_test/00002538.wav", "domain": "event", "gender": "Male", "native": "No", "utterance": "Any music events near Phoenix this weekend", "seqlogical": "[IN:GET_EVENT Any [SL:CATEGORY_EVENT music events ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION Phoenix ] ] ] [SL:DATE_TIME this weekend ] ]", "normalized_utterance": "ANY MUSIC EVENTS NEAR PHOENIX THIS WEEKEND", "normalized_seqlogical": "[IN:GET_EVENT ANY [SL:CATEGORY_EVENT MUSIC EVENTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION PHOENIX ] ] ] [SL:DATE_TIME THIS WEEKEND ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT MUSIC EVENTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION PHOENIX ] ] ] [SL:DATE_TIME THIS WEEKEND ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"category_event": "music", "location": "Phoenix", "date_time": "this weekend"}}]}
{"filename": "stop_data/stop/test_1/event_test/00000668.wav", "split": "test", "intent": "[IN:GET_EVENT What are the dates for the [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Boone Hall ] ] ] [SL:CATEGORY_EVENT Wine and Bluegrass nights ] [SL:DATE_TIME next month ] ]", "parameters": {}, "sentence": "What are the dates for the Boone Hall Wine and Bluegrass nights next month", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT ARE THE DATES FOR THE BOONE HALL WINE AND BLUEGRASS NIGHTS NEXT MONTH", "normalized_seqlogical": "[IN:GET_EVENT WHAT ARE THE DATES FOR THE [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP BOONE HALL ] ] ] [SL:CATEGORY_EVENT WINE AND BLUEGRASS NIGHTS ] [SL:DATE_TIME NEXT MONTH ] ]", "raw_data": {"file_id": "test_1/event_test/00000668.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "What are the dates for the Boone Hall Wine and Bluegrass nights next month", "seqlogical": "[IN:GET_EVENT What are the dates for the [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Boone Hall ] ] ] [SL:CATEGORY_EVENT Wine and Bluegrass nights ] [SL:DATE_TIME next month ] ]", "normalized_utterance": "WHAT ARE THE DATES FOR THE BOONE HALL WINE AND BLUEGRASS NIGHTS NEXT MONTH", "normalized_seqlogical": "[IN:GET_EVENT WHAT ARE THE DATES FOR THE [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP BOONE HALL ] ] ] [SL:CATEGORY_EVENT WINE AND BLUEGRASS NIGHTS ] [SL:DATE_TIME NEXT MONTH ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP BOONE HALL ] ] ] [SL:CATEGORY_EVENT WINE AND BLUEGRASS NIGHTS ] [SL:DATE_TIME NEXT MONTH ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"name_event": "Boone Hall Wine and Bluegrass Nights", "date_time": "next month"}}]}
{"filename": "stop_data/stop/test_0/event_test/00001583.wav", "split": "test", "intent": "[IN:GET_EVENT Are there any [SL:ATTRIBUTE_EVENT family friendly ] events [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION Philadelphia ] ] ] [SL:DATE_TIME this weekend ] ]", "parameters": {}, "sentence": "Are there any family friendly events near Philadelphia this weekend", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "ARE THERE ANY FAMILY FRIENDLY EVENTS NEAR PHILADELPHIA THIS WEEKEND", "normalized_seqlogical": "[IN:GET_EVENT ARE THERE ANY [SL:ATTRIBUTE_EVENT FAMILY FRIENDLY ] EVENTS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION PHILADELPHIA ] ] ] [SL:DATE_TIME THIS WEEKEND ] ]", "raw_data": {"file_id": "test_0/event_test_0/00001583.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Are there any family friendly events near Philadelphia this weekend", "seqlogical": "[IN:GET_EVENT Are there any [SL:ATTRIBUTE_EVENT family friendly ] events [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION Philadelphia ] ] ] [SL:DATE_TIME this weekend ] ]", "normalized_utterance": "ARE THERE ANY FAMILY FRIENDLY EVENTS NEAR PHILADELPHIA THIS WEEKEND", "normalized_seqlogical": "[IN:GET_EVENT ARE THERE ANY [SL:ATTRIBUTE_EVENT FAMILY FRIENDLY ] EVENTS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION PHILADELPHIA ] ] ] [SL:DATE_TIME THIS WEEKEND ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT FAMILY FRIENDLY ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION PHILADELPHIA ] ] ] [SL:DATE_TIME THIS WEEKEND ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"location": "Philadelphia", "date_time": "this weekend", "category_event": "family-friendly"}}]}
{"filename": "stop_data/stop/test_0/event_test/00002611.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:CATEGORY_EVENT Music events ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Universal Studios ] ] ] [SL:DATE_TIME Staurday night ] ]", "parameters": {}, "sentence": "Music events at Universal Studios Staurday night", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "MUSIC EVENTS AT UNIVERSAL STUDIOS STAURDAY NIGHT", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT MUSIC EVENTS ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP UNIVERSAL STUDIOS ] ] ] [SL:DATE_TIME STAURDAY NIGHT ] ]", "raw_data": {"file_id": "test_0/event_test_0/00002611.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Music events at Universal Studios Staurday night", "seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT Music events ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Universal Studios ] ] ] [SL:DATE_TIME Staurday night ] ]", "normalized_utterance": "MUSIC EVENTS AT UNIVERSAL STUDIOS STAURDAY NIGHT", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT MUSIC EVENTS ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP UNIVERSAL STUDIOS ] ] ] [SL:DATE_TIME STAURDAY NIGHT ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT MUSIC EVENTS ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP UNIVERSAL STUDIOS ] ] ] [SL:DATE_TIME STAURDAY NIGHT ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"category_event": "music", "location": "Universal Studios", "date_time": "Saturday night"}}]}
{"filename": "stop_data/stop/test_1/event_test/00001330.wav", "split": "test", "intent": "[IN:GET_EVENT Events happening [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME in the next week ] ]", "parameters": {}, "sentence": "Events happening near me in the next week", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "EVENTS HAPPENING NEAR ME IN THE NEXT WEEK", "normalized_seqlogical": "[IN:GET_EVENT EVENTS HAPPENING [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME IN THE NEXT WEEK ] ]", "raw_data": {"file_id": "test_1/event_test/00001330.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Events happening near me in the next week", "seqlogical": "[IN:GET_EVENT Events happening [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME in the next week ] ]", "normalized_utterance": "EVENTS HAPPENING NEAR ME IN THE NEXT WEEK", "normalized_seqlogical": "[IN:GET_EVENT EVENTS HAPPENING [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME IN THE NEXT WEEK ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME IN THE NEXT WEEK ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"location": "MOCK_RESPONSE(get_location)", "date_time": "next week"}}]}
{"filename": "stop_data/stop/test_0/event_test/00001143.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:CATEGORY_EVENT music festivals ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION Pigeon Forge ] ] ] [SL:DATE_TIME this month ] ]", "parameters": {}, "sentence": "music festivals near Pigeon Forge this month", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "MUSIC FESTIVALS NEAR PIGEON FORGE THIS MONTH", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT MUSIC FESTIVALS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION PIGEON FORGE ] ] ] [SL:DATE_TIME THIS MONTH ] ]", "raw_data": {"file_id": "test_0/event_test_0/00001143.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "music festivals near Pigeon Forge this month", "seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT music festivals ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION Pigeon Forge ] ] ] [SL:DATE_TIME this month ] ]", "normalized_utterance": "MUSIC FESTIVALS NEAR PIGEON FORGE THIS MONTH", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT MUSIC FESTIVALS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION PIGEON FORGE ] ] ] [SL:DATE_TIME THIS MONTH ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT MUSIC FESTIVALS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION PIGEON FORGE ] ] ] [SL:DATE_TIME THIS MONTH ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"category_event": "music festival", "location": "Pigeon Forge", "date_time": "this month"}}]}
{"filename": "stop_data/stop/test_0/event_test/00001547.wav", "split": "test", "intent": "[IN:GET_EVENT Where can I go [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER nearby ] ] ] to have fun ]", "parameters": {}, "sentence": "Where can I go nearby to have fun", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "WHERE CAN I GO NEARBY TO HAVE FUN", "normalized_seqlogical": "[IN:GET_EVENT WHERE CAN I GO [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER NEARBY ] ] ] TO HAVE FUN ]", "raw_data": {"file_id": "test_0/event_test_0/00001547.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Where can I go nearby to have fun", "seqlogical": "[IN:GET_EVENT Where can I go [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER nearby ] ] ] to have fun ]", "normalized_utterance": "WHERE CAN I GO NEARBY TO HAVE FUN", "normalized_seqlogical": "[IN:GET_EVENT WHERE CAN I GO [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER NEARBY ] ] ] TO HAVE FUN ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER NEARBY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "nearby", "location": "coffee shop"}}]}
{"filename": "stop_data/stop/test_1/event_test/00002448.wav", "split": "test", "intent": "[IN:GET_EVENT does [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the french market ] ] ] have [SL:DATE_TIME christmas ] events ]", "parameters": {}, "sentence": "does the french market have christmas events", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "DOES THE FRENCH MARKET HAVE CHRISTMAS EVENTS", "normalized_seqlogical": "[IN:GET_EVENT DOES [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE FRENCH MARKET ] ] ] HAVE [SL:DATE_TIME CHRISTMAS ] EVENTS ]", "raw_data": {"file_id": "test_1/event_test/00002448.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "does the french market have christmas events", "seqlogical": "[IN:GET_EVENT does [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the french market ] ] ] have [SL:DATE_TIME christmas ] events ]", "normalized_utterance": "DOES THE FRENCH MARKET HAVE CHRISTMAS EVENTS", "normalized_seqlogical": "[IN:GET_EVENT DOES [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE FRENCH MARKET ] ] ] HAVE [SL:DATE_TIME CHRISTMAS ] EVENTS ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE FRENCH MARKET ] ] ] [SL:DATE_TIME CHRISTMAS ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"category_event": "Christmas", "location": "French market"}}]}
{"filename": "stop_data/stop/test_1/event_test/00002003.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:CATEGORY_EVENT cookie decorating ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ]", "parameters": {}, "sentence": "cookie decorating near me", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "COOKIE DECORATING NEAR ME", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT COOKIE DECORATING ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]", "raw_data": {"file_id": "test_1/event_test/00002003.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "cookie decorating near me", "seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT cookie decorating ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ]", "normalized_utterance": "COOKIE DECORATING NEAR ME", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT COOKIE DECORATING ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT COOKIE DECORATING ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}]}
{"filename": "stop_data/stop/test_0/event_test/00000400.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:CATEGORY_EVENT Garlic festival ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION Easton ] ] ] ]", "parameters": {}, "sentence": "Garlic festival near Easton", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "GARLIC FESTIVAL NEAR EASTON", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT GARLIC FESTIVAL ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION EASTON ] ] ] ]", "raw_data": {"file_id": "test_0/event_test_0/00000400.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Garlic festival near Easton", "seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT Garlic festival ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION Easton ] ] ] ]", "normalized_utterance": "GARLIC FESTIVAL NEAR EASTON", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT GARLIC FESTIVAL ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION EASTON ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT GARLIC FESTIVAL ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION EASTON ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"category_event": "Garlic Festival", "location": "Easton"}}]}
{"filename": "stop_data/stop/test_1/event_test/00002369.wav", "split": "test", "intent": "[IN:GET_EVENT Are any [SL:CATEGORY_EVENT bands ] in [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION town ] ] ] [SL:DATE_TIME tonight ] ]", "parameters": {}, "sentence": "Are any bands in town tonight", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "ARE ANY BANDS IN TOWN TONIGHT", "normalized_seqlogical": "[IN:GET_EVENT ARE ANY [SL:CATEGORY_EVENT BANDS ] IN [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION TOWN ] ] ] [SL:DATE_TIME TONIGHT ] ]", "raw_data": {"file_id": "test_1/event_test/00002369.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Are any bands in town tonight", "seqlogical": "[IN:GET_EVENT Are any [SL:CATEGORY_EVENT bands ] in [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION town ] ] ] [SL:DATE_TIME tonight ] ]", "normalized_utterance": "ARE ANY BANDS IN TOWN TONIGHT", "normalized_seqlogical": "[IN:GET_EVENT ARE ANY [SL:CATEGORY_EVENT BANDS ] IN [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION TOWN ] ] ] [SL:DATE_TIME TONIGHT ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT BANDS ] [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION TOWN ] ] ] [SL:DATE_TIME TONIGHT ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"category_event": "bands", "date_time": "tonight"}}]}
{"filename": "stop_data/stop/test_1/event_test/00000294.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:CATEGORY_EVENT Holiday Pops concert ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] for [SL:DATE_TIME next week ] ]", "parameters": {}, "sentence": "Holiday Pops concert near me for next week", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "HOLIDAY POPS CONCERT NEAR ME FOR NEXT WEEK", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT HOLIDAY POPS CONCERT ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] FOR [SL:DATE_TIME NEXT WEEK ] ]", "raw_data": {"file_id": "test_1/event_test/00000294.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Holiday Pops concert near me for next week", "seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT Holiday Pops concert ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] for [SL:DATE_TIME next week ] ]", "normalized_utterance": "HOLIDAY POPS CONCERT NEAR ME FOR NEXT WEEK", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT HOLIDAY POPS CONCERT ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] FOR [SL:DATE_TIME NEXT WEEK ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT HOLIDAY POPS CONCERT ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME NEXT WEEK ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"category_event": "Holiday Pops concert", "location": "MOCK_RESPONSE(get_location)", "date_time": "next week"}}]}
{"filename": "stop_data/stop/test_0/event_test/00001835.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:CATEGORY_EVENT Music festivals ] happening [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME this month ] ]", "parameters": {}, "sentence": "Music festivals happening near me this month", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "MUSIC FESTIVALS HAPPENING NEAR ME THIS MONTH", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT MUSIC FESTIVALS ] HAPPENING [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME THIS MONTH ] ]", "raw_data": {"file_id": "test_0/event_test_0/00001835.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Music festivals happening near me this month", "seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT Music festivals ] happening [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME this month ] ]", "normalized_utterance": "MUSIC FESTIVALS HAPPENING NEAR ME THIS MONTH", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT MUSIC FESTIVALS ] HAPPENING [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME THIS MONTH ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT MUSIC FESTIVALS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME THIS MONTH ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"category_event": "music festivals", "location": "MOCK_LOCATION", "date_time": "this month"}}]}
{"filename": "stop_data/stop/test_1/event_test/00002313.wav", "split": "test", "intent": "[IN:GET_EVENT show [SL:DATE_TIME Christmas ] [SL:CATEGORY_EVENT light display ] events [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ]", "parameters": {}, "sentence": "show Christmas light display events near me", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "SHOW CHRISTMAS LIGHT DISPLAY EVENTS NEAR ME", "normalized_seqlogical": "[IN:GET_EVENT SHOW [SL:DATE_TIME CHRISTMAS ] [SL:CATEGORY_EVENT LIGHT DISPLAY ] EVENTS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]", "raw_data": {"file_id": "test_1/event_test/00002313.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "show Christmas light display events near me", "seqlogical": "[IN:GET_EVENT show [SL:DATE_TIME Christmas ] [SL:CATEGORY_EVENT light display ] events [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ]", "normalized_utterance": "SHOW CHRISTMAS LIGHT DISPLAY EVENTS NEAR ME", "normalized_seqlogical": "[IN:GET_EVENT SHOW [SL:DATE_TIME CHRISTMAS ] [SL:CATEGORY_EVENT LIGHT DISPLAY ] EVENTS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:DATE_TIME CHRISTMAS ] [SL:CATEGORY_EVENT LIGHT DISPLAY ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"category_event": "Christmas light display", "location": "MOCK_RESPONSE(get_location)"}}]}
{"filename": "stop_data/stop/test_0/event_test/00001425.wav", "split": "test", "intent": "[IN:GET_EVENT What is going on at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the Vogue ] ] ] [SL:DATE_TIME this Thursday ] ]", "parameters": {}, "sentence": "What is going on at the Vogue this Thursday", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "WHAT IS GOING ON AT THE VOGUE THIS THURSDAY", "normalized_seqlogical": "[IN:GET_EVENT WHAT IS GOING ON AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE VOGUE ] ] ] [SL:DATE_TIME THIS THURSDAY ] ]", "raw_data": {"file_id": "test_0/event_test_0/00001425.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "What is going on at the Vogue this Thursday", "seqlogical": "[IN:GET_EVENT What is going on at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the Vogue ] ] ] [SL:DATE_TIME this Thursday ] ]", "normalized_utterance": "WHAT IS GOING ON AT THE VOGUE THIS THURSDAY", "normalized_seqlogical": "[IN:GET_EVENT WHAT IS GOING ON AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE VOGUE ] ] ] [SL:DATE_TIME THIS THURSDAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE VOGUE ] ] ] [SL:DATE_TIME THIS THURSDAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"location": "Vogue", "date_time": "this Thursday"}}]}
{"filename": "stop_data/stop/test_1/event_test/00002071.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:DATE_TIME Christmas ] [SL:CATEGORY_EVENT plays ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME this month ] ]", "parameters": {}, "sentence": "Christmas plays near me this month", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "CHRISTMAS PLAYS NEAR ME THIS MONTH", "normalized_seqlogical": "[IN:GET_EVENT [SL:DATE_TIME CHRISTMAS ] [SL:CATEGORY_EVENT PLAYS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME THIS MONTH ] ]", "raw_data": {"file_id": "test_1/event_test/00002071.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Christmas plays near me this month", "seqlogical": "[IN:GET_EVENT [SL:DATE_TIME Christmas ] [SL:CATEGORY_EVENT plays ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME this month ] ]", "normalized_utterance": "CHRISTMAS PLAYS NEAR ME THIS MONTH", "normalized_seqlogical": "[IN:GET_EVENT [SL:DATE_TIME CHRISTMAS ] [SL:CATEGORY_EVENT PLAYS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME THIS MONTH ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:DATE_TIME CHRISTMAS ] [SL:CATEGORY_EVENT PLAYS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME THIS MONTH ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"category_event": "Christmas plays", "location": "MOCK_RESPONSE(get_location)", "date_time": "this month"}}]}
{"filename": "stop_data/stop/test_0/event_test/00001154.wav", "split": "test", "intent": "[IN:GET_EVENT Is [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Disney Springs ] ] ] having any [SL:DATE_TIME holiday ] events [SL:DATE_TIME next week ] ]", "parameters": {}, "sentence": "Is Disney Springs having any holiday events next week", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "IS DISNEY SPRINGS HAVING ANY HOLIDAY EVENTS NEXT WEEK", "normalized_seqlogical": "[IN:GET_EVENT IS [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP DISNEY SPRINGS ] ] ] HAVING ANY [SL:DATE_TIME HOLIDAY ] EVENTS [SL:DATE_TIME NEXT WEEK ] ]", "raw_data": {"file_id": "test_0/event_test_0/00001154.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Is Disney Springs having any holiday events next week", "seqlogical": "[IN:GET_EVENT Is [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Disney Springs ] ] ] having any [SL:DATE_TIME holiday ] events [SL:DATE_TIME next week ] ]", "normalized_utterance": "IS DISNEY SPRINGS HAVING ANY HOLIDAY EVENTS NEXT WEEK", "normalized_seqlogical": "[IN:GET_EVENT IS [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP DISNEY SPRINGS ] ] ] HAVING ANY [SL:DATE_TIME HOLIDAY ] EVENTS [SL:DATE_TIME NEXT WEEK ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP DISNEY SPRINGS ] ] ] [SL:DATE_TIME HOLIDAY ] [SL:DATE_TIME NEXT WEEK ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"location": "Disney Springs", "date_time": "next week", "category_event": "holiday"}}]}
{"filename": "stop_data/stop/test_0/event_test/00001837.wav", "split": "test", "intent": "[IN:GET_EVENT events [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME today ] ]", "parameters": {}, "sentence": "events near me today", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "EVENTS NEAR ME TODAY", "normalized_seqlogical": "[IN:GET_EVENT EVENTS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_0/event_test_0/00001837.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "events near me today", "seqlogical": "[IN:GET_EVENT events [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME today ] ]", "normalized_utterance": "EVENTS NEAR ME TODAY", "normalized_seqlogical": "[IN:GET_EVENT EVENTS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"location": "MOCK_RESPONSE(get_location)", "date_time": "today"}}]}
{"filename": "stop_data/stop/test_0/event_test/00000941.wav", "split": "test", "intent": "[IN:GET_EVENT Where are the [SL:DATE_TIME Christmas ] [SL:CATEGORY_EVENT light events ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME this Saturday night ] ]", "parameters": {}, "sentence": "Where are the Christmas light events near me this Saturday night", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "WHERE ARE THE CHRISTMAS LIGHT EVENTS NEAR ME THIS SATURDAY NIGHT", "normalized_seqlogical": "[IN:GET_EVENT WHERE ARE THE [SL:DATE_TIME CHRISTMAS ] [SL:CATEGORY_EVENT LIGHT EVENTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME THIS SATURDAY NIGHT ] ]", "raw_data": {"file_id": "test_0/event_test_0/00000941.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Where are the Christmas light events near me this Saturday night", "seqlogical": "[IN:GET_EVENT Where are the [SL:DATE_TIME Christmas ] [SL:CATEGORY_EVENT light events ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME this Saturday night ] ]", "normalized_utterance": "WHERE ARE THE CHRISTMAS LIGHT EVENTS NEAR ME THIS SATURDAY NIGHT", "normalized_seqlogical": "[IN:GET_EVENT WHERE ARE THE [SL:DATE_TIME CHRISTMAS ] [SL:CATEGORY_EVENT LIGHT EVENTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME THIS SATURDAY NIGHT ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:DATE_TIME CHRISTMAS ] [SL:CATEGORY_EVENT LIGHT EVENTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME THIS SATURDAY NIGHT ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"category_event": "Christmas light events", "location": "MOCK_RESPONSE(get_location)", "date_time": "this Saturday night"}}]}
{"filename": "stop_data/stop/test_0/event_test/00000989.wav", "split": "test", "intent": "[IN:GET_EVENT Tell me some of the big [SL:DATE_TIME New Years ] [SL:CATEGORY_EVENT parties ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ]", "parameters": {}, "sentence": "Tell me some of the big New Years parties near me", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "TELL ME SOME OF THE BIG NEW YEARS PARTIES NEAR ME", "normalized_seqlogical": "[IN:GET_EVENT TELL ME SOME OF THE BIG [SL:DATE_TIME NEW YEARS ] [SL:CATEGORY_EVENT PARTIES ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]", "raw_data": {"file_id": "test_0/event_test_0/00000989.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Tell me some of the big New Years parties near me", "seqlogical": "[IN:GET_EVENT Tell me some of the big [SL:DATE_TIME New Years ] [SL:CATEGORY_EVENT parties ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ]", "normalized_utterance": "TELL ME SOME OF THE BIG NEW YEARS PARTIES NEAR ME", "normalized_seqlogical": "[IN:GET_EVENT TELL ME SOME OF THE BIG [SL:DATE_TIME NEW YEARS ] [SL:CATEGORY_EVENT PARTIES ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:DATE_TIME NEW YEARS ] [SL:CATEGORY_EVENT PARTIES ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"category_event": "New Year's parties", "location": "MOCK_LOCATION"}}]}
{"filename": "stop_data/stop/test_1/event_test/00001493.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:NAME_EVENT Disturbed ] [SL:CATEGORY_EVENT concerts ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS within 100 miles ] of [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME this month ] ]", "parameters": {}, "sentence": "Disturbed concerts within 100 miles of me this month", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "DISTURBED CONCERTS WITHIN A HUNDRED MILES OF ME THIS MONTH", "normalized_seqlogical": "[IN:GET_EVENT [SL:NAME_EVENT DISTURBED ] [SL:CATEGORY_EVENT CONCERTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS WITHIN A HUNDRED MILES ] OF [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME THIS MONTH ] ]", "raw_data": {"file_id": "test_1/event_test/00001493.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Disturbed concerts within 100 miles of me this month", "seqlogical": "[IN:GET_EVENT [SL:NAME_EVENT Disturbed ] [SL:CATEGORY_EVENT concerts ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS within 100 miles ] of [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME this month ] ]", "normalized_utterance": "DISTURBED CONCERTS WITHIN A HUNDRED MILES OF ME THIS MONTH", "normalized_seqlogical": "[IN:GET_EVENT [SL:NAME_EVENT DISTURBED ] [SL:CATEGORY_EVENT CONCERTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS WITHIN A HUNDRED MILES ] OF [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME THIS MONTH ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:NAME_EVENT DISTURBED ] [SL:CATEGORY_EVENT CONCERTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS WITHIN A HUNDRED MILES ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME THIS MONTH ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "me"}}]}
{"filename": "stop_data/stop/test_0/event_test/00002449.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT Pet friendly ] events [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER nearby ] ] ] ]", "parameters": {}, "sentence": "Pet friendly events nearby", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "PET FRIENDLY EVENTS NEARBY", "normalized_seqlogical": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT PET FRIENDLY ] EVENTS [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER NEARBY ] ] ] ]", "raw_data": {"file_id": "test_0/event_test_0/00002449.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Pet friendly events nearby", "seqlogical": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT Pet friendly ] events [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER nearby ] ] ] ]", "normalized_utterance": "PET FRIENDLY EVENTS NEARBY", "normalized_seqlogical": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT PET FRIENDLY ] EVENTS [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER NEARBY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT PET FRIENDLY ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER NEARBY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "nearby"}}, {"name": "get_event", "arguments": {"category_event": "pet-friendly", "location": "MOCK_RESPONSE(get_location)"}}]}
{"filename": "stop_data/stop/test_1/event_test/00001303.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:CATEGORY_EVENT Holistic workshops ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME in March ] ]", "parameters": {}, "sentence": "Holistic workshops near me in March", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "HOLISTIC WORKSHOPS NEAR ME IN MARCH", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT HOLISTIC WORKSHOPS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME IN MARCH ] ]", "raw_data": {"file_id": "test_1/event_test/00001303.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Holistic workshops near me in March", "seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT Holistic workshops ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME in March ] ]", "normalized_utterance": "HOLISTIC WORKSHOPS NEAR ME IN MARCH", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT HOLISTIC WORKSHOPS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME IN MARCH ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT HOLISTIC WORKSHOPS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME IN MARCH ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"category_event": "workshops", "location": "MOCK_RESPONSE(get_location)", "date_time": "March"}}]}
{"filename": "stop_data/stop/test_0/event_test/00000298.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Atlantis Waikiki ] ] ] schedule [SL:DATE_TIME this weekend ] ]", "parameters": {}, "sentence": "Atlantis Waikiki schedule this weekend", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "ATLANTIS WAIKIKI SCHEDULE THIS WEEKEND", "normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP ATLANTIS WAIKIKI ] ] ] SCHEDULE [SL:DATE_TIME THIS WEEKEND ] ]", "raw_data": {"file_id": "test_0/event_test_0/00000298.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Atlantis Waikiki schedule this weekend", "seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Atlantis Waikiki ] ] ] schedule [SL:DATE_TIME this weekend ] ]", "normalized_utterance": "ATLANTIS WAIKIKI SCHEDULE THIS WEEKEND", "normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP ATLANTIS WAIKIKI ] ] ] SCHEDULE [SL:DATE_TIME THIS WEEKEND ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP ATLANTIS WAIKIKI ] ] ] [SL:DATE_TIME THIS WEEKEND ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"location": "Atlantis Waikiki", "date_time": "this weekend"}}]}
{"filename": "stop_data/stop/test_1/event_test/00000998.wav", "split": "test", "intent": "[IN:GET_EVENT Tell me when [SL:NAME_EVENT Garth Brooks ] is [SL:CATEGORY_EVENT playing ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the BOK ] ] ] [SL:ORDINAL next ] ]", "parameters": {}, "sentence": "Tell me when Garth Brooks is playing the BOK next", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "TELL ME WHEN GARTH BROOKS IS PLAYING THE BOK NEXT", "normalized_seqlogical": "[IN:GET_EVENT TELL ME WHEN [SL:NAME_EVENT GARTH BROOKS ] IS [SL:CATEGORY_EVENT PLAYING ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE BOK ] ] ] [SL:ORDINAL NEXT ] ]", "raw_data": {"file_id": "test_1/event_test/00000998.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Tell me when Garth Brooks is playing the BOK next", "seqlogical": "[IN:GET_EVENT Tell me when [SL:NAME_EVENT Garth Brooks ] is [SL:CATEGORY_EVENT playing ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the BOK ] ] ] [SL:ORDINAL next ] ]", "normalized_utterance": "TELL ME WHEN GARTH BROOKS IS PLAYING THE BOK NEXT", "normalized_seqlogical": "[IN:GET_EVENT TELL ME WHEN [SL:NAME_EVENT GARTH BROOKS ] IS [SL:CATEGORY_EVENT PLAYING ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE BOK ] ] ] [SL:ORDINAL NEXT ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:NAME_EVENT GARTH BROOKS ] [SL:CATEGORY_EVENT PLAYING ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE BOK ] ] ] [SL:ORDINAL NEXT ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"category_event": "concert", "location": "BOK Center", "date_time": "next"}}]}
{"filename": "stop_data/stop/test_0/event_test/00000957.wav", "split": "test", "intent": "[IN:GET_EVENT List some events [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ]", "parameters": {}, "sentence": "List some events near me", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "LIST SOME EVENTS NEAR ME", "normalized_seqlogical": "[IN:GET_EVENT LIST SOME EVENTS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]", "raw_data": {"file_id": "test_0/event_test_0/00000957.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "List some events near me", "seqlogical": "[IN:GET_EVENT List some events [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ]", "normalized_utterance": "LIST SOME EVENTS NEAR ME", "normalized_seqlogical": "[IN:GET_EVENT LIST SOME EVENTS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"location": "MOCK_RESPONSE(get_location)"}}]}
{"filename": "stop_data/stop/test_0/event_test/00001769.wav", "split": "test", "intent": "[IN:GET_EVENT Events happening in [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT my ] area ] ] ]", "parameters": {}, "sentence": "Events happening in my area", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "EVENTS HAPPENING IN MY AREA", "normalized_seqlogical": "[IN:GET_EVENT EVENTS HAPPENING IN [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT MY ] AREA ] ] ]", "raw_data": {"file_id": "test_0/event_test_0/00001769.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Events happening in my area", "seqlogical": "[IN:GET_EVENT Events happening in [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT my ] area ] ] ]", "normalized_utterance": "EVENTS HAPPENING IN MY AREA", "normalized_seqlogical": "[IN:GET_EVENT EVENTS HAPPENING IN [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT MY ] AREA ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT MY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "my area"}}, {"name": "get_event", "arguments": {"location": "MOCK_RESPONSE(get_location)"}}]}
{"filename": "stop_data/stop/test_0/event_test/00000998.wav", "split": "test", "intent": "[IN:GET_EVENT Tell me when [SL:NAME_EVENT Garth Brooks ] is [SL:CATEGORY_EVENT playing ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the BOK ] ] ] [SL:ORDINAL next ] ]", "parameters": {}, "sentence": "Tell me when Garth Brooks is playing the BOK next", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "TELL ME WHEN GARTH BROOKS IS PLAYING THE BOK NEXT", "normalized_seqlogical": "[IN:GET_EVENT TELL ME WHEN [SL:NAME_EVENT GARTH BROOKS ] IS [SL:CATEGORY_EVENT PLAYING ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE BOK ] ] ] [SL:ORDINAL NEXT ] ]", "raw_data": {"file_id": "test_0/event_test_0/00000998.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Tell me when Garth Brooks is playing the BOK next", "seqlogical": "[IN:GET_EVENT Tell me when [SL:NAME_EVENT Garth Brooks ] is [SL:CATEGORY_EVENT playing ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the BOK ] ] ] [SL:ORDINAL next ] ]", "normalized_utterance": "TELL ME WHEN GARTH BROOKS IS PLAYING THE BOK NEXT", "normalized_seqlogical": "[IN:GET_EVENT TELL ME WHEN [SL:NAME_EVENT GARTH BROOKS ] IS [SL:CATEGORY_EVENT PLAYING ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE BOK ] ] ] [SL:ORDINAL NEXT ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:NAME_EVENT GARTH BROOKS ] [SL:CATEGORY_EVENT PLAYING ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE BOK ] ] ] [SL:ORDINAL NEXT ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"category_event": "concert", "location": "BOK Center", "date_time": "next"}}]}
{"filename": "stop_data/stop/test_1/event_test/00002611.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:CATEGORY_EVENT Music events ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Universal Studios ] ] ] [SL:DATE_TIME Staurday night ] ]", "parameters": {}, "sentence": "Music events at Universal Studios Staurday night", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "MUSIC EVENTS AT UNIVERSAL STUDIOS STAURDAY NIGHT", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT MUSIC EVENTS ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP UNIVERSAL STUDIOS ] ] ] [SL:DATE_TIME STAURDAY NIGHT ] ]", "raw_data": {"file_id": "test_1/event_test/00002611.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Music events at Universal Studios Staurday night", "seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT Music events ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Universal Studios ] ] ] [SL:DATE_TIME Staurday night ] ]", "normalized_utterance": "MUSIC EVENTS AT UNIVERSAL STUDIOS STAURDAY NIGHT", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT MUSIC EVENTS ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP UNIVERSAL STUDIOS ] ] ] [SL:DATE_TIME STAURDAY NIGHT ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT MUSIC EVENTS ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP UNIVERSAL STUDIOS ] ] ] [SL:DATE_TIME STAURDAY NIGHT ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"category_event": "music", "location": "Universal Studios"}}]}
{"filename": "stop_data/stop/test_1/event_test/00002173.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT Family - friendly ] events [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME this weekend ] ]", "parameters": {}, "sentence": "Family-friendly events near me this weekend", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "FAMILY FRIENDLY EVENTS NEAR ME THIS WEEKEND", "normalized_seqlogical": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT FAMILY FRIENDLY ] EVENTS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME THIS WEEKEND ] ]", "raw_data": {"file_id": "test_1/event_test/00002173.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Family-friendly events near me this weekend", "seqlogical": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT Family - friendly ] events [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME this weekend ] ]", "normalized_utterance": "FAMILY FRIENDLY EVENTS NEAR ME THIS WEEKEND", "normalized_seqlogical": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT FAMILY FRIENDLY ] EVENTS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME THIS WEEKEND ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT FAMILY FRIENDLY ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME THIS WEEKEND ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"location": "MOCK_LOCATION", "date_time": "this weekend", "category_event": "family-friendly"}}]}
{"filename": "stop_data/stop/test_0/event_test/00001578.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:DATE_TIME Christmas ] [SL:CATEGORY_EVENT parades ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ]", "parameters": {}, "sentence": "Christmas parades near me", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "CHRISTMAS PARADES NEAR ME", "normalized_seqlogical": "[IN:GET_EVENT [SL:DATE_TIME CHRISTMAS ] [SL:CATEGORY_EVENT PARADES ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]", "raw_data": {"file_id": "test_0/event_test_0/00001578.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Christmas parades near me", "seqlogical": "[IN:GET_EVENT [SL:DATE_TIME Christmas ] [SL:CATEGORY_EVENT parades ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ]", "normalized_utterance": "CHRISTMAS PARADES NEAR ME", "normalized_seqlogical": "[IN:GET_EVENT [SL:DATE_TIME CHRISTMAS ] [SL:CATEGORY_EVENT PARADES ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:DATE_TIME CHRISTMAS ] [SL:CATEGORY_EVENT PARADES ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "nearby"}}, {"name": "get_event", "arguments": {"category_event": "parades", "location": "MOCK_RESPONSE(get_location)", "date_time": "December 25, 2023"}}]}
{"filename": "stop_data/stop/test_1/event_test/00002582.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT Free ] events [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME today ] ]", "parameters": {}, "sentence": "Free events near me today", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "FREE EVENTS NEAR ME TODAY", "normalized_seqlogical": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT FREE ] EVENTS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_1/event_test/00002582.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Free events near me today", "seqlogical": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT Free ] events [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME today ] ]", "normalized_utterance": "FREE EVENTS NEAR ME TODAY", "normalized_seqlogical": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT FREE ] EVENTS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:ATTRIBUTE_EVENT FREE ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"location": "MOCK_RESPONSE(get_location)", "date_time": "today"}}]}
{"filename": "stop_data/stop/test_1/event_test/00000468.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:CATEGORY_EVENT Craft fairs ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ]", "parameters": {}, "sentence": "Craft fairs near me", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "CRAFT FAIRS NEAR ME", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT CRAFT FAIRS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]", "raw_data": {"file_id": "test_1/event_test/00000468.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Craft fairs near me", "seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT Craft fairs ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ]", "normalized_utterance": "CRAFT FAIRS NEAR ME", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT CRAFT FAIRS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT CRAFT FAIRS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"category_event": "craft fairs", "location": "MOCK_RESPONSE(get_location)"}}]}
{"filename": "stop_data/stop/test_1/event_test/00001341.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:CATEGORY_EVENT Winter themed painting parties ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER locally ] ] ] ]", "parameters": {}, "sentence": "Winter themed painting parties locally", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "WINTER THEMED PAINTING PARTIES LOCALLY", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT WINTER THEMED PAINTING PARTIES ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER LOCALLY ] ] ] ]", "raw_data": {"file_id": "test_1/event_test/00001341.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Winter themed painting parties locally", "seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT Winter themed painting parties ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER locally ] ] ] ]", "normalized_utterance": "WINTER THEMED PAINTING PARTIES LOCALLY", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT WINTER THEMED PAINTING PARTIES ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER LOCALLY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT WINTER THEMED PAINTING PARTIES ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER LOCALLY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"category_event": "painting parties", "location": "locally", "date_time": "winter"}}]}
{"filename": "stop_data/stop/test_0/event_test/00001169.wav", "split": "test", "intent": "[IN:GET_EVENT [SL:CATEGORY_EVENT wine tasting events ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION boston ] ] ] [SL:DATE_TIME on saturday ] ]", "parameters": {}, "sentence": "wine tasting events around boston on saturday", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "WINE TASTING EVENTS AROUND BOSTON ON SATURDAY", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT WINE TASTING EVENTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION BOSTON ] ] ] [SL:DATE_TIME ON SATURDAY ] ]", "raw_data": {"file_id": "test_0/event_test_0/00001169.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "wine tasting events around boston on saturday", "seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT wine tasting events ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION boston ] ] ] [SL:DATE_TIME on saturday ] ]", "normalized_utterance": "WINE TASTING EVENTS AROUND BOSTON ON SATURDAY", "normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT WINE TASTING EVENTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION BOSTON ] ] ] [SL:DATE_TIME ON SATURDAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT WINE TASTING EVENTS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION BOSTON ] ] ] [SL:DATE_TIME ON SATURDAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"category_event": "wine tasting", "location": "Boston", "date_time": "Saturday"}}]}
{"filename": "stop_data/stop/test_0/event_test/00001330.wav", "split": "test", "intent": "[IN:GET_EVENT Events happening [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME in the next week ] ]", "parameters": {}, "sentence": "Events happening near me in the next week", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "EVENTS HAPPENING NEAR ME IN THE NEXT WEEK", "normalized_seqlogical": "[IN:GET_EVENT EVENTS HAPPENING [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME IN THE NEXT WEEK ] ]", "raw_data": {"file_id": "test_0/event_test_0/00001330.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Events happening near me in the next week", "seqlogical": "[IN:GET_EVENT Events happening [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] [SL:DATE_TIME in the next week ] ]", "normalized_utterance": "EVENTS HAPPENING NEAR ME IN THE NEXT WEEK", "normalized_seqlogical": "[IN:GET_EVENT EVENTS HAPPENING [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME IN THE NEXT WEEK ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] [SL:DATE_TIME IN THE NEXT WEEK ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_event", "arguments": {"location": "MOCK_RESPONSE(get_location)", "date_time": "next week"}}]}
{"filename": "stop_data/stop/test_0/event_test/00000387.wav", "split": "test", "intent": "[IN:GET_EVENT Are there any [SL:DATE_TIME winter ] [SL:CATEGORY_EVENT festivals ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER here ] ] ] ]", "parameters": {}, "sentence": "Are there any winter festivals near here", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "ARE THERE ANY WINTER FESTIVALS NEAR HERE", "normalized_seqlogical": "[IN:GET_EVENT ARE THERE ANY [SL:DATE_TIME WINTER ] [SL:CATEGORY_EVENT FESTIVALS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER HERE ] ] ] ]", "raw_data": {"file_id": "test_0/event_test_0/00000387.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Are there any winter festivals near here", "seqlogical": "[IN:GET_EVENT Are there any [SL:DATE_TIME winter ] [SL:CATEGORY_EVENT festivals ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER here ] ] ] ]", "normalized_utterance": "ARE THERE ANY WINTER FESTIVALS NEAR HERE", "normalized_seqlogical": "[IN:GET_EVENT ARE THERE ANY [SL:DATE_TIME WINTER ] [SL:CATEGORY_EVENT FESTIVALS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER HERE ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:DATE_TIME WINTER ] [SL:CATEGORY_EVENT FESTIVALS ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER HERE ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near here"}}, {"name": "get_event", "arguments": {"category_event": "winter festivals", "location": "MOCK_RESPONSE(get_location)"}}]}
{"filename": "stop_data/stop/test_0/event_test/00000666.wav", "split": "test", "intent": "[IN:GET_EVENT Is there [SL:CATEGORY_EVENT open skating ] at [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the ice arena ] ] ] coming up ]", "parameters": {}, "sentence": "Is there open skating at the ice arena coming up", "domain": "event", "gender": "Male", "native": "Yes", "normalized_utterance": "IS THERE OPEN SKATING AT THE ICE ARENA COMING UP", "normalized_seqlogical": "[IN:GET_EVENT IS THERE [SL:CATEGORY_EVENT OPEN SKATING ] AT [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE ICE ARENA ] ] ] COMING UP ]", "raw_data": {"file_id": "test_0/event_test_0/00000666.wav", "domain": "event", "gender": "Male", "native": "Yes", "utterance": "Is there open skating at the ice arena coming up", "seqlogical": "[IN:GET_EVENT Is there [SL:CATEGORY_EVENT open skating ] at [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the ice arena ] ] ] coming up ]", "normalized_utterance": "IS THERE OPEN SKATING AT THE ICE ARENA COMING UP", "normalized_seqlogical": "[IN:GET_EVENT IS THERE [SL:CATEGORY_EVENT OPEN SKATING ] AT [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE ICE ARENA ] ] ] COMING UP ]", "decoupled_normalized_seqlogical": "[IN:GET_EVENT [SL:CATEGORY_EVENT OPEN SKATING ] [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE ICE ARENA ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_event", "arguments": {"category_event": "open skating", "location": "ice arena"}}]}
{"filename": "stop_data/stop/test_0/music_test/00001636.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Please play some [SL:MUSIC_GENRE metal rock ] ]", "parameters": {}, "sentence": "Please play some metal rock", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "PLEASE PLAY SOME METAL ROCK", "normalized_seqlogical": "[IN:PLAY_MUSIC PLEASE PLAY SOME [SL:MUSIC_GENRE METAL ROCK ] ]", "raw_data": {"file_id": "test_0/music_test_0/00001636.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Please play some metal rock", "seqlogical": "[IN:PLAY_MUSIC Please play some [SL:MUSIC_GENRE metal rock ] ]", "normalized_utterance": "PLEASE PLAY SOME METAL ROCK", "normalized_seqlogical": "[IN:PLAY_MUSIC PLEASE PLAY SOME [SL:MUSIC_GENRE METAL ROCK ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_GENRE METAL ROCK ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_genre": "metal rock"}}]}
{"filename": "stop_data/stop/test_1/music_test/00003292.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Play [SL:MUSIC_ARTIST_NAME Foo Fighters ] ]", "parameters": {}, "sentence": "Play Foo Fighters", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "PLAY FOO FIGHTERS", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_ARTIST_NAME FOO FIGHTERS ] ]", "raw_data": {"file_id": "test_1/music_test/00003292.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Play Foo Fighters", "seqlogical": "[IN:PLAY_MUSIC Play [SL:MUSIC_ARTIST_NAME Foo Fighters ] ]", "normalized_utterance": "PLAY FOO FIGHTERS", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_ARTIST_NAME FOO FIGHTERS ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_ARTIST_NAME FOO FIGHTERS ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_artist_name": "Foo Fighters"}}]}
{"filename": "stop_data/stop/test_0/music_test/00003782.wav", "split": "test", "intent": "[IN:LOOP_MUSIC repeat this [SL:MUSIC_TYPE song ] ]", "parameters": {}, "sentence": "repeat this song", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "REPEAT THIS SONG", "normalized_seqlogical": "[IN:LOOP_MUSIC REPEAT THIS [SL:MUSIC_TYPE SONG ] ]", "raw_data": {"file_id": "test_0/music_test_0/00003782.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "repeat this song", "seqlogical": "[IN:LOOP_MUSIC repeat this [SL:MUSIC_TYPE song ] ]", "normalized_utterance": "REPEAT THIS SONG", "normalized_seqlogical": "[IN:LOOP_MUSIC REPEAT THIS [SL:MUSIC_TYPE SONG ] ]", "decoupled_normalized_seqlogical": "[IN:LOOP_MUSIC [SL:MUSIC_TYPE SONG ] ]"}, "prediction": "", "function_calls": [{"name": "replay_music", "arguments": {"music_type": "song"}}]}
{"filename": "stop_data/stop/test_0/music_test/00003994.wav", "split": "test", "intent": "[IN:SKIP_TRACK_MUSIC Please go to the [SL:ORDINAL next ] [SL:MUSIC_TYPE song ] ]", "parameters": {}, "sentence": "Please go to the next song", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "PLEASE GO TO THE NEXT SONG", "normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC PLEASE GO TO THE [SL:ORDINAL NEXT ] [SL:MUSIC_TYPE SONG ] ]", "raw_data": {"file_id": "test_0/music_test_0/00003994.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Please go to the next song", "seqlogical": "[IN:SKIP_TRACK_MUSIC Please go to the [SL:ORDINAL next ] [SL:MUSIC_TYPE song ] ]", "normalized_utterance": "PLEASE GO TO THE NEXT SONG", "normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC PLEASE GO TO THE [SL:ORDINAL NEXT ] [SL:MUSIC_TYPE SONG ] ]", "decoupled_normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC [SL:ORDINAL NEXT ] [SL:MUSIC_TYPE SONG ] ]"}, "prediction": "", "function_calls": [{"name": "skip_track_music", "arguments": {"music_type": "track", "ordinal": "next"}}]}
{"filename": "stop_data/stop/test_1/music_test/00000966.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Play [SL:MUSIC_GENRE classical ] [SL:MUSIC_TYPE music ] for 30 minutes . ]", "parameters": {}, "sentence": "Play classical music for 30 minutes.", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "PLAY CLASSICAL MUSIC FOR THIRTY MINUTES", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_GENRE CLASSICAL ] [SL:MUSIC_TYPE MUSIC ] FOR THIRTY MINUTES ]", "raw_data": {"file_id": "test_1/music_test/00000966.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Play classical music for 30 minutes.", "seqlogical": "[IN:PLAY_MUSIC Play [SL:MUSIC_GENRE classical ] [SL:MUSIC_TYPE music ] for 30 minutes . ]", "normalized_utterance": "PLAY CLASSICAL MUSIC FOR THIRTY MINUTES", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_GENRE CLASSICAL ] [SL:MUSIC_TYPE MUSIC ] FOR THIRTY MINUTES ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_GENRE CLASSICAL ] [SL:MUSIC_TYPE MUSIC ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_type": "classical"}}, {"name": "create_timer", "arguments": {"amount": 30, "method_timer": "minutes"}}]}
{"filename": "stop_data/stop/test_1/music_test/00002538.wav", "split": "test", "intent": "[IN:UNSUPPORTED_MUSIC I want to buy trolls [SL:MUSIC_TYPE soundtrack ] ]", "parameters": {}, "sentence": "I want to buy trolls soundtrack", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "I WANT TO BUY TROLLS SOUNDTRACK", "normalized_seqlogical": "[IN:UNSUPPORTED_MUSIC I WANT TO BUY TROLLS [SL:MUSIC_TYPE SOUNDTRACK ] ]", "raw_data": {"file_id": "test_1/music_test/00002538.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "I want to buy trolls soundtrack", "seqlogical": "[IN:UNSUPPORTED_MUSIC I want to buy trolls [SL:MUSIC_TYPE soundtrack ] ]", "normalized_utterance": "I WANT TO BUY TROLLS SOUNDTRACK", "normalized_seqlogical": "[IN:UNSUPPORTED_MUSIC I WANT TO BUY TROLLS [SL:MUSIC_TYPE SOUNDTRACK ] ]", "decoupled_normalized_seqlogical": "[IN:UNSUPPORTED_MUSIC [SL:MUSIC_TYPE SOUNDTRACK ] ]"}, "prediction": "", "function_calls": [{"name": "create_playlist_music", "arguments": {"music_playlist_title": "Trolls Soundtrack", "music_type": "soundtrack"}}]}
{"filename": "stop_data/stop/test_0/music_test/00002459.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Play [SL:MUSIC_PLAYLIST_TITLE Tyrese ] [SL:MUSIC_TYPE station ] ]", "parameters": {}, "sentence": "Play Tyrese station", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "PLAY TYRESE STATION", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_PLAYLIST_TITLE TYRESE ] [SL:MUSIC_TYPE STATION ] ]", "raw_data": {"file_id": "test_0/music_test_0/00002459.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Play Tyrese station", "seqlogical": "[IN:PLAY_MUSIC Play [SL:MUSIC_PLAYLIST_TITLE Tyrese ] [SL:MUSIC_TYPE station ] ]", "normalized_utterance": "PLAY TYRESE STATION", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_PLAYLIST_TITLE TYRESE ] [SL:MUSIC_TYPE STATION ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_PLAYLIST_TITLE TYRESE ] [SL:MUSIC_TYPE STATION ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_artist_name": "Tyrese", "music_type": "station"}}]}
{"filename": "stop_data/stop/test_0/music_test/00001070.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Find a live version of this [SL:MUSIC_TYPE song ] ]", "parameters": {}, "sentence": "Find a live version of this song", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "FIND A LIVE VERSION OF THIS SONG", "normalized_seqlogical": "[IN:PLAY_MUSIC FIND A LIVE VERSION OF THIS [SL:MUSIC_TYPE SONG ] ]", "raw_data": {"file_id": "test_0/music_test_0/00001070.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Find a live version of this song", "seqlogical": "[IN:PLAY_MUSIC Find a live version of this [SL:MUSIC_TYPE song ] ]", "normalized_utterance": "FIND A LIVE VERSION OF THIS SONG", "normalized_seqlogical": "[IN:PLAY_MUSIC FIND A LIVE VERSION OF THIS [SL:MUSIC_TYPE SONG ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_TYPE SONG ] ]"}, "prediction": "", "function_calls": [{"name": "get_message", "arguments": {"content_exact": "Find a live version of this song."}}, {"name": "unsupported_music", "arguments": {"music_type": "live version"}}]}
{"filename": "stop_data/stop/test_1/music_test/00004091.wav", "split": "test", "intent": "[IN:START_SHUFFLE_MUSIC Shuffle that [SL:MUSIC_TYPE album ] , will you ? ]", "parameters": {}, "sentence": "Shuffle that album, will you?", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "SHUFFLE THAT ALBUM WILL YOU", "normalized_seqlogical": "[IN:START_SHUFFLE_MUSIC SHUFFLE THAT [SL:MUSIC_TYPE ALBUM ] WILL YOU ]", "raw_data": {"file_id": "test_1/music_test/00004091.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Shuffle that album, will you?", "seqlogical": "[IN:START_SHUFFLE_MUSIC Shuffle that [SL:MUSIC_TYPE album ] , will you ? ]", "normalized_utterance": "SHUFFLE THAT ALBUM WILL YOU", "normalized_seqlogical": "[IN:START_SHUFFLE_MUSIC SHUFFLE THAT [SL:MUSIC_TYPE ALBUM ] WILL YOU ]", "decoupled_normalized_seqlogical": "[IN:START_SHUFFLE_MUSIC [SL:MUSIC_TYPE ALBUM ] ]"}, "prediction": "", "function_calls": [{"name": "start_shuffle_music", "arguments": {"music_type": "album"}}]}
{"filename": "stop_data/stop/test_1/music_test/00003901.wav", "split": "test", "intent": "[IN:LOOP_MUSIC Could you play this [SL:MUSIC_TYPE song ] in loop ? ]", "parameters": {}, "sentence": "Could you play this song in loop?", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "COULD YOU PLAY THIS SONG IN LOOP", "normalized_seqlogical": "[IN:LOOP_MUSIC COULD YOU PLAY THIS [SL:MUSIC_TYPE SONG ] IN LOOP ]", "raw_data": {"file_id": "test_1/music_test/00003901.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Could you play this song in loop?", "seqlogical": "[IN:LOOP_MUSIC Could you play this [SL:MUSIC_TYPE song ] in loop ? ]", "normalized_utterance": "COULD YOU PLAY THIS SONG IN LOOP", "normalized_seqlogical": "[IN:LOOP_MUSIC COULD YOU PLAY THIS [SL:MUSIC_TYPE SONG ] IN LOOP ]", "decoupled_normalized_seqlogical": "[IN:LOOP_MUSIC [SL:MUSIC_TYPE SONG ] ]"}, "prediction": "", "function_calls": [{"name": "loop_music", "arguments": {"music_type": "song"}}]}
{"filename": "stop_data/stop/test_0/music_test/00000580.wav", "split": "test", "intent": "[IN:SKIP_TRACK_MUSIC skip this [SL:MUSIC_TYPE song ] ]", "parameters": {}, "sentence": "skip this song", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "SKIP THIS SONG", "normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC SKIP THIS [SL:MUSIC_TYPE SONG ] ]", "raw_data": {"file_id": "test_0/music_test_0/00000580.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "skip this song", "seqlogical": "[IN:SKIP_TRACK_MUSIC skip this [SL:MUSIC_TYPE song ] ]", "normalized_utterance": "SKIP THIS SONG", "normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC SKIP THIS [SL:MUSIC_TYPE SONG ] ]", "decoupled_normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC [SL:MUSIC_TYPE SONG ] ]"}, "prediction": "", "function_calls": [{"name": "skip_track_music", "arguments": {"music_type": "song", "ordinal": "next"}}]}
{"filename": "stop_data/stop/test_0/music_test/00004004.wav", "split": "test", "intent": "[IN:SKIP_TRACK_MUSIC skip [SL:MUSIC_TYPE song ] on [SL:MUSIC_PROVIDER_NAME pandora ] ]", "parameters": {}, "sentence": "skip song on pandora", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "SKIP SONG ON PANDORA", "normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC SKIP [SL:MUSIC_TYPE SONG ] ON [SL:MUSIC_PROVIDER_NAME PANDORA ] ]", "raw_data": {"file_id": "test_0/music_test_0/00004004.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "skip song on pandora", "seqlogical": "[IN:SKIP_TRACK_MUSIC skip [SL:MUSIC_TYPE song ] on [SL:MUSIC_PROVIDER_NAME pandora ] ]", "normalized_utterance": "SKIP SONG ON PANDORA", "normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC SKIP [SL:MUSIC_TYPE SONG ] ON [SL:MUSIC_PROVIDER_NAME PANDORA ] ]", "decoupled_normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC [SL:MUSIC_TYPE SONG ] [SL:MUSIC_PROVIDER_NAME PANDORA ] ]"}, "prediction": "", "function_calls": [{"name": "skip_track_music", "arguments": {"music_type": "song", "ordinal": "next"}}]}
{"filename": "stop_data/stop/test_1/music_test/00002611.wav", "split": "test", "intent": "[IN:PREVIOUS_TRACK_MUSIC please play the [SL:ORDINAL last ] [SL:MUSIC_TYPE song ] one more time ]", "parameters": {}, "sentence": "please play the last song one more time", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "PLEASE PLAY THE LAST SONG ONE MORE TIME", "normalized_seqlogical": "[IN:PREVIOUS_TRACK_MUSIC PLEASE PLAY THE [SL:ORDINAL LAST ] [SL:MUSIC_TYPE SONG ] ONE MORE TIME ]", "raw_data": {"file_id": "test_1/music_test/00002611.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "please play the last song one more time", "seqlogical": "[IN:PREVIOUS_TRACK_MUSIC please play the [SL:ORDINAL last ] [SL:MUSIC_TYPE song ] one more time ]", "normalized_utterance": "PLEASE PLAY THE LAST SONG ONE MORE TIME", "normalized_seqlogical": "[IN:PREVIOUS_TRACK_MUSIC PLEASE PLAY THE [SL:ORDINAL LAST ] [SL:MUSIC_TYPE SONG ] ONE MORE TIME ]", "decoupled_normalized_seqlogical": "[IN:PREVIOUS_TRACK_MUSIC [SL:ORDINAL LAST ] [SL:MUSIC_TYPE SONG ] ]"}, "prediction": "", "function_calls": [{"name": "replay_music", "arguments": {"music_type": "song"}}]}
{"filename": "stop_data/stop/test_1/music_test/00001592.wav", "split": "test", "intent": "[IN:REPLAY_MUSIC Repeat this [SL:MUSIC_TYPE track ] ]", "parameters": {}, "sentence": "Repeat this track", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "REPEAT THIS TRACK", "normalized_seqlogical": "[IN:REPLAY_MUSIC REPEAT THIS [SL:MUSIC_TYPE TRACK ] ]", "raw_data": {"file_id": "test_1/music_test/00001592.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Repeat this track", "seqlogical": "[IN:REPLAY_MUSIC Repeat this [SL:MUSIC_TYPE track ] ]", "normalized_utterance": "REPEAT THIS TRACK", "normalized_seqlogical": "[IN:REPLAY_MUSIC REPEAT THIS [SL:MUSIC_TYPE TRACK ] ]", "decoupled_normalized_seqlogical": "[IN:REPLAY_MUSIC [SL:MUSIC_TYPE TRACK ] ]"}, "prediction": "", "function_calls": [{"name": "replay_music", "arguments": {"music_type": "track"}}]}
{"filename": "stop_data/stop/test_0/music_test/00000231.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Play [SL:MUSIC_GENRE country ] [SL:MUSIC_TYPE music ] . ]", "parameters": {}, "sentence": "Play country music.", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "PLAY COUNTRY MUSIC", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_GENRE COUNTRY ] [SL:MUSIC_TYPE MUSIC ] ]", "raw_data": {"file_id": "test_0/music_test_0/00000231.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Play country music.", "seqlogical": "[IN:PLAY_MUSIC Play [SL:MUSIC_GENRE country ] [SL:MUSIC_TYPE music ] . ]", "normalized_utterance": "PLAY COUNTRY MUSIC", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_GENRE COUNTRY ] [SL:MUSIC_TYPE MUSIC ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_GENRE COUNTRY ] [SL:MUSIC_TYPE MUSIC ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_genre": "country"}}]}
{"filename": "stop_data/stop/test_1/music_test/00003804.wav", "split": "test", "intent": "[IN:LIKE_MUSIC Mark this [SL:MUSIC_TYPE song ] as a favorite ]", "parameters": {}, "sentence": "Mark this song as a favorite", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "MARK THIS SONG AS A FAVORITE", "normalized_seqlogical": "[IN:LIKE_MUSIC MARK THIS [SL:MUSIC_TYPE SONG ] AS A FAVORITE ]", "raw_data": {"file_id": "test_1/music_test/00003804.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Mark this song as a favorite", "seqlogical": "[IN:LIKE_MUSIC Mark this [SL:MUSIC_TYPE song ] as a favorite ]", "normalized_utterance": "MARK THIS SONG AS A FAVORITE", "normalized_seqlogical": "[IN:LIKE_MUSIC MARK THIS [SL:MUSIC_TYPE SONG ] AS A FAVORITE ]", "decoupled_normalized_seqlogical": "[IN:LIKE_MUSIC [SL:MUSIC_TYPE SONG ] ]"}, "prediction": "", "function_calls": [{"name": "add_to_playlist_music", "arguments": {"music_type": "favorite"}}]}
{"filename": "stop_data/stop/test_1/music_test/00001053.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Play [SL:MUSIC_PLAYLIST_TITLE Kids Bop ] [SL:MUSIC_TYPE Radio ] on [SL:MUSIC_PROVIDER_NAME Pandora ] . ]", "parameters": {}, "sentence": "Play Kids Bop Radio on Pandora.", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "PLAY KIDS BOP RADIO ON PANDORA", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_PLAYLIST_TITLE KIDS BOP ] [SL:MUSIC_TYPE RADIO ] ON [SL:MUSIC_PROVIDER_NAME PANDORA ] ]", "raw_data": {"file_id": "test_1/music_test/00001053.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Play Kids Bop Radio on Pandora.", "seqlogical": "[IN:PLAY_MUSIC Play [SL:MUSIC_PLAYLIST_TITLE Kids Bop ] [SL:MUSIC_TYPE Radio ] on [SL:MUSIC_PROVIDER_NAME Pandora ] . ]", "normalized_utterance": "PLAY KIDS BOP RADIO ON PANDORA", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_PLAYLIST_TITLE KIDS BOP ] [SL:MUSIC_TYPE RADIO ] ON [SL:MUSIC_PROVIDER_NAME PANDORA ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_PLAYLIST_TITLE KIDS BOP ] [SL:MUSIC_TYPE RADIO ] [SL:MUSIC_PROVIDER_NAME PANDORA ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_type": "Kids Bop Radio", "music_provider_name": "Pandora"}}]}
{"filename": "stop_data/stop/test_1/music_test/00002785.wav", "split": "test", "intent": "[IN:SKIP_TRACK_MUSIC Play the [SL:ORDINAL next ] [SL:MUSIC_TYPE song ] ]", "parameters": {}, "sentence": "Play the next song", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "PLAY THE NEXT SONG", "normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC PLAY THE [SL:ORDINAL NEXT ] [SL:MUSIC_TYPE SONG ] ]", "raw_data": {"file_id": "test_1/music_test/00002785.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Play the next song", "seqlogical": "[IN:SKIP_TRACK_MUSIC Play the [SL:ORDINAL next ] [SL:MUSIC_TYPE song ] ]", "normalized_utterance": "PLAY THE NEXT SONG", "normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC PLAY THE [SL:ORDINAL NEXT ] [SL:MUSIC_TYPE SONG ] ]", "decoupled_normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC [SL:ORDINAL NEXT ] [SL:MUSIC_TYPE SONG ] ]"}, "prediction": "", "function_calls": [{"name": "skip_track_music", "arguments": {"music_type": "song", "ordinal": "next"}}]}
{"filename": "stop_data/stop/test_0/music_test/00002150.wav", "split": "test", "intent": "[IN:PLAY_MUSIC I want to hear [SL:MUSIC_ARTIST_NAME the Rolling Stones ] ' newest [SL:MUSIC_TYPE album ] . ]", "parameters": {}, "sentence": "I want to hear the Rolling Stones' newest album.", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "I WANT TO HEAR THE ROLLING STONES ' NEWEST ALBUM", "normalized_seqlogical": "[IN:PLAY_MUSIC I WANT TO HEAR [SL:MUSIC_ARTIST_NAME THE ROLLING STONES ] ' NEWEST [SL:MUSIC_TYPE ALBUM ] ]", "raw_data": {"file_id": "test_0/music_test_0/00002150.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "I want to hear the Rolling Stones' newest album.", "seqlogical": "[IN:PLAY_MUSIC I want to hear [SL:MUSIC_ARTIST_NAME the Rolling Stones ] ' newest [SL:MUSIC_TYPE album ] . ]", "normalized_utterance": "I WANT TO HEAR THE ROLLING STONES ' NEWEST ALBUM", "normalized_seqlogical": "[IN:PLAY_MUSIC I WANT TO HEAR [SL:MUSIC_ARTIST_NAME THE ROLLING STONES ] ' NEWEST [SL:MUSIC_TYPE ALBUM ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_ARTIST_NAME THE ROLLING STONES ] [SL:MUSIC_TYPE ALBUM ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_artist_name": "Rolling Stones", "music_type": "album"}}]}
{"filename": "stop_data/stop/test_1/music_test/00004053.wav", "split": "test", "intent": "[IN:PLAY_MUSIC [SL:MUSIC_PROVIDER_NAME Pandora ] , can you play [SL:MUSIC_GENRE pop ] [SL:MUSIC_TYPE music ] now ? ]", "parameters": {}, "sentence": "Pandora, can you play pop music now?", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "PANDORA CAN YOU PLAY POP MUSIC NOW", "normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_PROVIDER_NAME PANDORA ] CAN YOU PLAY [SL:MUSIC_GENRE POP ] [SL:MUSIC_TYPE MUSIC ] NOW ]", "raw_data": {"file_id": "test_1/music_test/00004053.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Pandora, can you play pop music now?", "seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_PROVIDER_NAME Pandora ] , can you play [SL:MUSIC_GENRE pop ] [SL:MUSIC_TYPE music ] now ? ]", "normalized_utterance": "PANDORA CAN YOU PLAY POP MUSIC NOW", "normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_PROVIDER_NAME PANDORA ] CAN YOU PLAY [SL:MUSIC_GENRE POP ] [SL:MUSIC_TYPE MUSIC ] NOW ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_PROVIDER_NAME PANDORA ] [SL:MUSIC_GENRE POP ] [SL:MUSIC_TYPE MUSIC ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_provider_name": "Pandora", "music_genre": "pop"}}]}
{"filename": "stop_data/stop/test_1/music_test/00001606.wav", "split": "test", "intent": "[IN:DISLIKE_MUSIC Thumbs down this [SL:MUSIC_TYPE song ] . ]", "parameters": {}, "sentence": "Thumbs down this song.", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "THUMBS DOWN THIS SONG", "normalized_seqlogical": "[IN:DISLIKE_MUSIC THUMBS DOWN THIS [SL:MUSIC_TYPE SONG ] ]", "raw_data": {"file_id": "test_1/music_test/00001606.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Thumbs down this song.", "seqlogical": "[IN:DISLIKE_MUSIC Thumbs down this [SL:MUSIC_TYPE song ] . ]", "normalized_utterance": "THUMBS DOWN THIS SONG", "normalized_seqlogical": "[IN:DISLIKE_MUSIC THUMBS DOWN THIS [SL:MUSIC_TYPE SONG ] ]", "decoupled_normalized_seqlogical": "[IN:DISLIKE_MUSIC [SL:MUSIC_TYPE SONG ] ]"}, "prediction": "", "function_calls": [{"name": "dislike_music", "arguments": {"music_type": "song"}}]}
{"filename": "stop_data/stop/test_1/music_test/00002154.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Play [SL:MUSIC_ALBUM_TITLE The Cheetah Girls 2 ] [SL:MUSIC_TYPE album ] . ]", "parameters": {}, "sentence": "Play The Cheetah Girls 2 album.", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "PLAY THE CHEETAH GIRLS TWO ALBUM", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_ALBUM_TITLE THE CHEETAH GIRLS TWO ] [SL:MUSIC_TYPE ALBUM ] ]", "raw_data": {"file_id": "test_1/music_test/00002154.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Play The Cheetah Girls 2 album.", "seqlogical": "[IN:PLAY_MUSIC Play [SL:MUSIC_ALBUM_TITLE The Cheetah Girls 2 ] [SL:MUSIC_TYPE album ] . ]", "normalized_utterance": "PLAY THE CHEETAH GIRLS TWO ALBUM", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_ALBUM_TITLE THE CHEETAH GIRLS TWO ] [SL:MUSIC_TYPE ALBUM ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_ALBUM_TITLE THE CHEETAH GIRLS TWO ] [SL:MUSIC_TYPE ALBUM ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_album_title": "Cheetah Girls 2"}}]}
{"filename": "stop_data/stop/test_0/music_test/00001692.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Play [SL:MUSIC_PLAYLIST_TITLE rap ] [SL:MUSIC_TYPE playlist ] ]", "parameters": {}, "sentence": "Play rap playlist", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "PLAY RAP PLAYLIST", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_PLAYLIST_TITLE RAP ] [SL:MUSIC_TYPE PLAYLIST ] ]", "raw_data": {"file_id": "test_0/music_test_0/00001692.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Play rap playlist", "seqlogical": "[IN:PLAY_MUSIC Play [SL:MUSIC_PLAYLIST_TITLE rap ] [SL:MUSIC_TYPE playlist ] ]", "normalized_utterance": "PLAY RAP PLAYLIST", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_PLAYLIST_TITLE RAP ] [SL:MUSIC_TYPE PLAYLIST ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_PLAYLIST_TITLE RAP ] [SL:MUSIC_TYPE PLAYLIST ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_type": "playlist", "music_genre": "rap"}}]}
{"filename": "stop_data/stop/test_1/music_test/00003968.wav", "split": "test", "intent": "[IN:SKIP_TRACK_MUSIC Please skip [SL:ORDINAL next ] [SL:MUSIC_TYPE song ] . ]", "parameters": {}, "sentence": "Please skip next song.", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "PLEASE SKIP NEXT SONG", "normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC PLEASE SKIP [SL:ORDINAL NEXT ] [SL:MUSIC_TYPE SONG ] ]", "raw_data": {"file_id": "test_1/music_test/00003968.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Please skip next song.", "seqlogical": "[IN:SKIP_TRACK_MUSIC Please skip [SL:ORDINAL next ] [SL:MUSIC_TYPE song ] . ]", "normalized_utterance": "PLEASE SKIP NEXT SONG", "normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC PLEASE SKIP [SL:ORDINAL NEXT ] [SL:MUSIC_TYPE SONG ] ]", "decoupled_normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC [SL:ORDINAL NEXT ] [SL:MUSIC_TYPE SONG ] ]"}, "prediction": "", "function_calls": [{"name": "skip_track_music", "arguments": {"music_type": "song", "ordinal": "next"}}]}
{"filename": "stop_data/stop/test_1/music_test/00001035.wav", "split": "test", "intent": "[IN:SKIP_TRACK_MUSIC skip the [SL:ORDINAL next ] two [SL:MUSIC_TYPE songs ] ]", "parameters": {}, "sentence": "skip the next two songs", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "SKIP THE NEXT TWO SONGS", "normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC SKIP THE [SL:ORDINAL NEXT ] TWO [SL:MUSIC_TYPE SONGS ] ]", "raw_data": {"file_id": "test_1/music_test/00001035.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "skip the next two songs", "seqlogical": "[IN:SKIP_TRACK_MUSIC skip the [SL:ORDINAL next ] two [SL:MUSIC_TYPE songs ] ]", "normalized_utterance": "SKIP THE NEXT TWO SONGS", "normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC SKIP THE [SL:ORDINAL NEXT ] TWO [SL:MUSIC_TYPE SONGS ] ]", "decoupled_normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC [SL:ORDINAL NEXT ] [SL:MUSIC_TYPE SONGS ] ]"}, "prediction": "", "function_calls": [{"name": "skip_track_music", "arguments": {"music_type": "song", "ordinal": "two"}}]}
{"filename": "stop_data/stop/test_1/music_test/00000452.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Play [SL:MUSIC_GENRE smooth jazz ] . ]", "parameters": {}, "sentence": "Play smooth jazz.", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "PLAY SMOOTH JAZZ", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_GENRE SMOOTH JAZZ ] ]", "raw_data": {"file_id": "test_1/music_test/00000452.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Play smooth jazz.", "seqlogical": "[IN:PLAY_MUSIC Play [SL:MUSIC_GENRE smooth jazz ] . ]", "normalized_utterance": "PLAY SMOOTH JAZZ", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_GENRE SMOOTH JAZZ ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_GENRE SMOOTH JAZZ ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_genre": "smooth jazz"}}]}
{"filename": "stop_data/stop/test_1/music_test/00003443.wav", "split": "test", "intent": "[IN:START_SHUFFLE_MUSIC put the [SL:MUSIC_TYPE tracks ] in shuffle mode please ]", "parameters": {}, "sentence": "put the tracks in shuffle mode please", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "PUT THE TRACKS IN SHUFFLE MODE PLEASE", "normalized_seqlogical": "[IN:START_SHUFFLE_MUSIC PUT THE [SL:MUSIC_TYPE TRACKS ] IN SHUFFLE MODE PLEASE ]", "raw_data": {"file_id": "test_1/music_test/00003443.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "put the tracks in shuffle mode please", "seqlogical": "[IN:START_SHUFFLE_MUSIC put the [SL:MUSIC_TYPE tracks ] in shuffle mode please ]", "normalized_utterance": "PUT THE TRACKS IN SHUFFLE MODE PLEASE", "normalized_seqlogical": "[IN:START_SHUFFLE_MUSIC PUT THE [SL:MUSIC_TYPE TRACKS ] IN SHUFFLE MODE PLEASE ]", "decoupled_normalized_seqlogical": "[IN:START_SHUFFLE_MUSIC [SL:MUSIC_TYPE TRACKS ] ]"}, "prediction": "", "function_calls": [{"name": "start_shuffle_music", "arguments": {"music_type": "track"}}]}
{"filename": "stop_data/stop/test_1/music_test/00002881.wav", "split": "test", "intent": "[IN:START_SHUFFLE_MUSIC Shuffle [SL:MUSIC_TYPE songs ] on this [SL:MUSIC_TYPE playlist ] ]", "parameters": {}, "sentence": "Shuffle songs on this playlist", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "SHUFFLE SONGS ON THIS PLAYLIST", "normalized_seqlogical": "[IN:START_SHUFFLE_MUSIC SHUFFLE [SL:MUSIC_TYPE SONGS ] ON THIS [SL:MUSIC_TYPE PLAYLIST ] ]", "raw_data": {"file_id": "test_1/music_test/00002881.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Shuffle songs on this playlist", "seqlogical": "[IN:START_SHUFFLE_MUSIC Shuffle [SL:MUSIC_TYPE songs ] on this [SL:MUSIC_TYPE playlist ] ]", "normalized_utterance": "SHUFFLE SONGS ON THIS PLAYLIST", "normalized_seqlogical": "[IN:START_SHUFFLE_MUSIC SHUFFLE [SL:MUSIC_TYPE SONGS ] ON THIS [SL:MUSIC_TYPE PLAYLIST ] ]", "decoupled_normalized_seqlogical": "[IN:START_SHUFFLE_MUSIC [SL:MUSIC_TYPE SONGS ] [SL:MUSIC_TYPE PLAYLIST ] ]"}, "prediction": "", "function_calls": [{"name": "start_shuffle_music", "arguments": {"music_type": "playlist"}}]}
{"filename": "stop_data/stop/test_0/music_test/00003168.wav", "split": "test", "intent": "[IN:SET_DEFAULT_PROVIDER_MUSIC set music provider to [SL:MUSIC_PROVIDER_NAME spotify ] ]", "parameters": {}, "sentence": "set music provider to spotify", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "SET MUSIC PROVIDER TO SPOTIFY", "normalized_seqlogical": "[IN:SET_DEFAULT_PROVIDER_MUSIC SET MUSIC PROVIDER TO [SL:MUSIC_PROVIDER_NAME SPOTIFY ] ]", "raw_data": {"file_id": "test_0/music_test_0/00003168.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "set music provider to spotify", "seqlogical": "[IN:SET_DEFAULT_PROVIDER_MUSIC set music provider to [SL:MUSIC_PROVIDER_NAME spotify ] ]", "normalized_utterance": "SET MUSIC PROVIDER TO SPOTIFY", "normalized_seqlogical": "[IN:SET_DEFAULT_PROVIDER_MUSIC SET MUSIC PROVIDER TO [SL:MUSIC_PROVIDER_NAME SPOTIFY ] ]", "decoupled_normalized_seqlogical": "[IN:SET_DEFAULT_PROVIDER_MUSIC [SL:MUSIC_PROVIDER_NAME SPOTIFY ] ]"}, "prediction": "", "function_calls": [{"name": "set_default_provider_music", "arguments": {"music_provider_name": "Spotify"}}]}
{"filename": "stop_data/stop/test_0/music_test/00003198.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Play some [SL:MUSIC_ARTIST_NAME Sam Cooke ] . ]", "parameters": {}, "sentence": "Play some Sam Cooke.", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "PLAY SOME SAM COOKE", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY SOME [SL:MUSIC_ARTIST_NAME SAM COOKE ] ]", "raw_data": {"file_id": "test_0/music_test_0/00003198.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Play some Sam Cooke.", "seqlogical": "[IN:PLAY_MUSIC Play some [SL:MUSIC_ARTIST_NAME Sam Cooke ] . ]", "normalized_utterance": "PLAY SOME SAM COOKE", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY SOME [SL:MUSIC_ARTIST_NAME SAM COOKE ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_ARTIST_NAME SAM COOKE ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_artist_name": "Sam Cooke"}}]}
{"filename": "stop_data/stop/test_1/music_test/00003742.wav", "split": "test", "intent": "[IN:DISLIKE_MUSIC Do not play that [SL:MUSIC_TYPE song ] ever again ]", "parameters": {}, "sentence": "Do not play that song ever again", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "DO NOT PLAY THAT SONG EVER AGAIN", "normalized_seqlogical": "[IN:DISLIKE_MUSIC DO NOT PLAY THAT [SL:MUSIC_TYPE SONG ] EVER AGAIN ]", "raw_data": {"file_id": "test_1/music_test/00003742.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Do not play that song ever again", "seqlogical": "[IN:DISLIKE_MUSIC Do not play that [SL:MUSIC_TYPE song ] ever again ]", "normalized_utterance": "DO NOT PLAY THAT SONG EVER AGAIN", "normalized_seqlogical": "[IN:DISLIKE_MUSIC DO NOT PLAY THAT [SL:MUSIC_TYPE SONG ] EVER AGAIN ]", "decoupled_normalized_seqlogical": "[IN:DISLIKE_MUSIC [SL:MUSIC_TYPE SONG ] ]"}, "prediction": "", "function_calls": [{"name": "remove_from_playlist_music", "arguments": {"music_type": "song"}}]}
{"filename": "stop_data/stop/test_0/music_test/00003330.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Play [SL:MUSIC_ARTIST_NAME taylor swift ] ]", "parameters": {}, "sentence": "Play taylor swift", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "PLAY TAYLOR SWIFT", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_ARTIST_NAME TAYLOR SWIFT ] ]", "raw_data": {"file_id": "test_0/music_test_0/00003330.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Play taylor swift", "seqlogical": "[IN:PLAY_MUSIC Play [SL:MUSIC_ARTIST_NAME taylor swift ] ]", "normalized_utterance": "PLAY TAYLOR SWIFT", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_ARTIST_NAME TAYLOR SWIFT ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_ARTIST_NAME TAYLOR SWIFT ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_artist_name": "Taylor Swift"}}]}
{"filename": "stop_data/stop/test_1/music_test/00003785.wav", "split": "test", "intent": "[IN:PLAY_MUSIC start [SL:MUSIC_PLAYLIST_TITLE sleep ] [SL:MUSIC_TYPE playlist ] ]", "parameters": {}, "sentence": "start sleep playlist", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "START SLEEP PLAYLIST", "normalized_seqlogical": "[IN:PLAY_MUSIC START [SL:MUSIC_PLAYLIST_TITLE SLEEP ] [SL:MUSIC_TYPE PLAYLIST ] ]", "raw_data": {"file_id": "test_1/music_test/00003785.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "start sleep playlist", "seqlogical": "[IN:PLAY_MUSIC start [SL:MUSIC_PLAYLIST_TITLE sleep ] [SL:MUSIC_TYPE playlist ] ]", "normalized_utterance": "START SLEEP PLAYLIST", "normalized_seqlogical": "[IN:PLAY_MUSIC START [SL:MUSIC_PLAYLIST_TITLE SLEEP ] [SL:MUSIC_TYPE PLAYLIST ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_PLAYLIST_TITLE SLEEP ] [SL:MUSIC_TYPE PLAYLIST ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_type": "sleep playlist"}}]}
{"filename": "stop_data/stop/test_1/music_test/00001600.wav", "split": "test", "intent": "[IN:REMOVE_FROM_PLAYLIST_MUSIC can you skip all [SL:MUSIC_ARTIST_NAME selena gomez ] [SL:MUSIC_TYPE songs ] when they come on ]", "parameters": {}, "sentence": "can you skip all selena gomez songs when they come on", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "CAN YOU SKIP ALL SELENA GOMEZ SONGS WHEN THEY COME ON", "normalized_seqlogical": "[IN:REMOVE_FROM_PLAYLIST_MUSIC CAN YOU SKIP ALL [SL:MUSIC_ARTIST_NAME SELENA GOMEZ ] [SL:MUSIC_TYPE SONGS ] WHEN THEY COME ON ]", "raw_data": {"file_id": "test_1/music_test/00001600.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "can you skip all selena gomez songs when they come on", "seqlogical": "[IN:REMOVE_FROM_PLAYLIST_MUSIC can you skip all [SL:MUSIC_ARTIST_NAME selena gomez ] [SL:MUSIC_TYPE songs ] when they come on ]", "normalized_utterance": "CAN YOU SKIP ALL SELENA GOMEZ SONGS WHEN THEY COME ON", "normalized_seqlogical": "[IN:REMOVE_FROM_PLAYLIST_MUSIC CAN YOU SKIP ALL [SL:MUSIC_ARTIST_NAME SELENA GOMEZ ] [SL:MUSIC_TYPE SONGS ] WHEN THEY COME ON ]", "decoupled_normalized_seqlogical": "[IN:REMOVE_FROM_PLAYLIST_MUSIC [SL:MUSIC_ARTIST_NAME SELENA GOMEZ ] [SL:MUSIC_TYPE SONGS ] ]"}, "prediction": "", "function_calls": [{"name": "remove_from_playlist_music", "arguments": {"music_artist_name": "Selena Gomez", "music_type": "song"}}]}
{"filename": "stop_data/stop/test_0/music_test/00002920.wav", "split": "test", "intent": "[IN:ADD_TO_PLAYLIST_MUSIC Add this [SL:MUSIC_TYPE song ] to my [SL:MUSIC_PLAYLIST_TITLE Gaming ] [SL:MUSIC_TYPE Playlist ] ]", "parameters": {}, "sentence": "Add this song to my Gaming Playlist", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "ADD THIS SONG TO MY GAMING PLAYLIST", "normalized_seqlogical": "[IN:ADD_TO_PLAYLIST_MUSIC ADD THIS [SL:MUSIC_TYPE SONG ] TO MY [SL:MUSIC_PLAYLIST_TITLE GAMING ] [SL:MUSIC_TYPE PLAYLIST ] ]", "raw_data": {"file_id": "test_0/music_test_0/00002920.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Add this song to my Gaming Playlist", "seqlogical": "[IN:ADD_TO_PLAYLIST_MUSIC Add this [SL:MUSIC_TYPE song ] to my [SL:MUSIC_PLAYLIST_TITLE Gaming ] [SL:MUSIC_TYPE Playlist ] ]", "normalized_utterance": "ADD THIS SONG TO MY GAMING PLAYLIST", "normalized_seqlogical": "[IN:ADD_TO_PLAYLIST_MUSIC ADD THIS [SL:MUSIC_TYPE SONG ] TO MY [SL:MUSIC_PLAYLIST_TITLE GAMING ] [SL:MUSIC_TYPE PLAYLIST ] ]", "decoupled_normalized_seqlogical": "[IN:ADD_TO_PLAYLIST_MUSIC [SL:MUSIC_TYPE SONG ] [SL:MUSIC_PLAYLIST_TITLE GAMING ] [SL:MUSIC_TYPE PLAYLIST ] ]"}, "prediction": "", "function_calls": [{"name": "add_to_playlist_music", "arguments": {"music_playlist_title": "gaming", "music_type": "song"}}]}
{"filename": "stop_data/stop/test_0/music_test/00000621.wav", "split": "test", "intent": "[IN:PLAY_MUSIC i want to listen to [SL:MUSIC_ARTIST_NAME lady gaga ] ]", "parameters": {}, "sentence": "i want to listen to lady gaga", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "I WANT TO LISTEN TO LADY GAGA", "normalized_seqlogical": "[IN:PLAY_MUSIC I WANT TO LISTEN TO [SL:MUSIC_ARTIST_NAME LADY GAGA ] ]", "raw_data": {"file_id": "test_0/music_test_0/00000621.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "i want to listen to lady gaga", "seqlogical": "[IN:PLAY_MUSIC i want to listen to [SL:MUSIC_ARTIST_NAME lady gaga ] ]", "normalized_utterance": "I WANT TO LISTEN TO LADY GAGA", "normalized_seqlogical": "[IN:PLAY_MUSIC I WANT TO LISTEN TO [SL:MUSIC_ARTIST_NAME LADY GAGA ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_ARTIST_NAME LADY GAGA ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_artist_name": "Lady Gaga"}}]}
{"filename": "stop_data/stop/test_0/music_test/00001312.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Play my [SL:MUSIC_PLAYLIST_TITLE summer ] [SL:MUSIC_TYPE playlist ] for 20 minutes ]", "parameters": {}, "sentence": "Play my summer playlist for 20 minutes", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "PLAY MY SUMMER PLAYLIST FOR TWENTY MINUTES", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY MY [SL:MUSIC_PLAYLIST_TITLE SUMMER ] [SL:MUSIC_TYPE PLAYLIST ] FOR TWENTY MINUTES ]", "raw_data": {"file_id": "test_0/music_test_0/00001312.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Play my summer playlist for 20 minutes", "seqlogical": "[IN:PLAY_MUSIC Play my [SL:MUSIC_PLAYLIST_TITLE summer ] [SL:MUSIC_TYPE playlist ] for 20 minutes ]", "normalized_utterance": "PLAY MY SUMMER PLAYLIST FOR TWENTY MINUTES", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY MY [SL:MUSIC_PLAYLIST_TITLE SUMMER ] [SL:MUSIC_TYPE PLAYLIST ] FOR TWENTY MINUTES ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_PLAYLIST_TITLE SUMMER ] [SL:MUSIC_TYPE PLAYLIST ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_playlist_title": "summer playlist"}}, {"name": "create_timer", "arguments": {"amount": 20, "method_timer": "minutes"}}]}
{"filename": "stop_data/stop/test_1/music_test/00002238.wav", "split": "test", "intent": "[IN:REPLAY_MUSIC Restart this [SL:MUSIC_TYPE song ] ]", "parameters": {}, "sentence": "Restart this song", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "RESTART THIS SONG", "normalized_seqlogical": "[IN:REPLAY_MUSIC RESTART THIS [SL:MUSIC_TYPE SONG ] ]", "raw_data": {"file_id": "test_1/music_test/00002238.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Restart this song", "seqlogical": "[IN:REPLAY_MUSIC Restart this [SL:MUSIC_TYPE song ] ]", "normalized_utterance": "RESTART THIS SONG", "normalized_seqlogical": "[IN:REPLAY_MUSIC RESTART THIS [SL:MUSIC_TYPE SONG ] ]", "decoupled_normalized_seqlogical": "[IN:REPLAY_MUSIC [SL:MUSIC_TYPE SONG ] ]"}, "prediction": "", "function_calls": [{"name": "replay_music", "arguments": {"music_type": "song"}}]}
{"filename": "stop_data/stop/test_1/music_test/00001921.wav", "split": "test", "intent": "[IN:PLAY_MUSIC I want to listen to some [SL:MUSIC_GENRE rock ] [SL:MUSIC_TYPE music ] . ]", "parameters": {}, "sentence": "I want to listen to some rock music.", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "I WANT TO LISTEN TO SOME ROCK MUSIC", "normalized_seqlogical": "[IN:PLAY_MUSIC I WANT TO LISTEN TO SOME [SL:MUSIC_GENRE ROCK ] [SL:MUSIC_TYPE MUSIC ] ]", "raw_data": {"file_id": "test_1/music_test/00001921.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "I want to listen to some rock music.", "seqlogical": "[IN:PLAY_MUSIC I want to listen to some [SL:MUSIC_GENRE rock ] [SL:MUSIC_TYPE music ] . ]", "normalized_utterance": "I WANT TO LISTEN TO SOME ROCK MUSIC", "normalized_seqlogical": "[IN:PLAY_MUSIC I WANT TO LISTEN TO SOME [SL:MUSIC_GENRE ROCK ] [SL:MUSIC_TYPE MUSIC ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_GENRE ROCK ] [SL:MUSIC_TYPE MUSIC ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_genre": "rock"}}]}
{"filename": "stop_data/stop/test_0/music_test/00003956.wav", "split": "test", "intent": "[IN:SKIP_TRACK_MUSIC [SL:ORDINAL next ] [SL:MUSIC_TYPE track ] please ]", "parameters": {}, "sentence": "next track please", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "NEXT TRACK PLEASE", "normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC [SL:ORDINAL NEXT ] [SL:MUSIC_TYPE TRACK ] PLEASE ]", "raw_data": {"file_id": "test_0/music_test_0/00003956.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "next track please", "seqlogical": "[IN:SKIP_TRACK_MUSIC [SL:ORDINAL next ] [SL:MUSIC_TYPE track ] please ]", "normalized_utterance": "NEXT TRACK PLEASE", "normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC [SL:ORDINAL NEXT ] [SL:MUSIC_TYPE TRACK ] PLEASE ]", "decoupled_normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC [SL:ORDINAL NEXT ] [SL:MUSIC_TYPE TRACK ] ]"}, "prediction": "", "function_calls": [{"name": "skip_track_music", "arguments": {"music_type": "track", "ordinal": "next"}}]}
{"filename": "stop_data/stop/test_1/music_test/00000112.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Play [SL:MUSIC_GENRE classic rock ] . ]", "parameters": {}, "sentence": "Play classic rock.", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "PLAY CLASSIC ROCK", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_GENRE CLASSIC ROCK ] ]", "raw_data": {"file_id": "test_1/music_test/00000112.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Play classic rock.", "seqlogical": "[IN:PLAY_MUSIC Play [SL:MUSIC_GENRE classic rock ] . ]", "normalized_utterance": "PLAY CLASSIC ROCK", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_GENRE CLASSIC ROCK ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_GENRE CLASSIC ROCK ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_genre": "classic rock"}}]}
{"filename": "stop_data/stop/test_1/music_test/00004016.wav", "split": "test", "intent": "[IN:START_SHUFFLE_MUSIC shuffle all of my [SL:MUSIC_PLAYLIST_TITLE favorites ] ]", "parameters": {}, "sentence": "shuffle all of my favorites", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "SHUFFLE ALL OF MY FAVORITES", "normalized_seqlogical": "[IN:START_SHUFFLE_MUSIC SHUFFLE ALL OF MY [SL:MUSIC_PLAYLIST_TITLE FAVORITES ] ]", "raw_data": {"file_id": "test_1/music_test/00004016.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "shuffle all of my favorites", "seqlogical": "[IN:START_SHUFFLE_MUSIC shuffle all of my [SL:MUSIC_PLAYLIST_TITLE favorites ] ]", "normalized_utterance": "SHUFFLE ALL OF MY FAVORITES", "normalized_seqlogical": "[IN:START_SHUFFLE_MUSIC SHUFFLE ALL OF MY [SL:MUSIC_PLAYLIST_TITLE FAVORITES ] ]", "decoupled_normalized_seqlogical": "[IN:START_SHUFFLE_MUSIC [SL:MUSIC_PLAYLIST_TITLE FAVORITES ] ]"}, "prediction": "", "function_calls": [{"name": "start_shuffle_music", "arguments": {"music_playlist_title": "favorites"}}]}
{"filename": "stop_data/stop/test_0/music_test/00000662.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Play the [SL:MUSIC_GENRE comedy ] [SL:MUSIC_TYPE channel ] on [SL:MUSIC_PROVIDER_NAME Spotify ] . ]", "parameters": {}, "sentence": "Play the comedy channel on Spotify.", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "PLAY THE COMEDY CHANNEL ON SPOTIFY", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY THE [SL:MUSIC_GENRE COMEDY ] [SL:MUSIC_TYPE CHANNEL ] ON [SL:MUSIC_PROVIDER_NAME SPOTIFY ] ]", "raw_data": {"file_id": "test_0/music_test_0/00000662.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Play the comedy channel on Spotify.", "seqlogical": "[IN:PLAY_MUSIC Play the [SL:MUSIC_GENRE comedy ] [SL:MUSIC_TYPE channel ] on [SL:MUSIC_PROVIDER_NAME Spotify ] . ]", "normalized_utterance": "PLAY THE COMEDY CHANNEL ON SPOTIFY", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY THE [SL:MUSIC_GENRE COMEDY ] [SL:MUSIC_TYPE CHANNEL ] ON [SL:MUSIC_PROVIDER_NAME SPOTIFY ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_GENRE COMEDY ] [SL:MUSIC_TYPE CHANNEL ] [SL:MUSIC_PROVIDER_NAME SPOTIFY ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_type": "comedy", "music_provider_name": "spotify"}}]}
{"filename": "stop_data/stop/test_0/music_test/00003163.wav", "split": "test", "intent": "[IN:SET_DEFAULT_PROVIDER_MUSIC update music app to [SL:MUSIC_PROVIDER_NAME spotify ] ]", "parameters": {}, "sentence": "update music app to spotify", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "UPDATE MUSIC APP TO SPOTIFY", "normalized_seqlogical": "[IN:SET_DEFAULT_PROVIDER_MUSIC UPDATE MUSIC APP TO [SL:MUSIC_PROVIDER_NAME SPOTIFY ] ]", "raw_data": {"file_id": "test_0/music_test_0/00003163.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "update music app to spotify", "seqlogical": "[IN:SET_DEFAULT_PROVIDER_MUSIC update music app to [SL:MUSIC_PROVIDER_NAME spotify ] ]", "normalized_utterance": "UPDATE MUSIC APP TO SPOTIFY", "normalized_seqlogical": "[IN:SET_DEFAULT_PROVIDER_MUSIC UPDATE MUSIC APP TO [SL:MUSIC_PROVIDER_NAME SPOTIFY ] ]", "decoupled_normalized_seqlogical": "[IN:SET_DEFAULT_PROVIDER_MUSIC [SL:MUSIC_PROVIDER_NAME SPOTIFY ] ]"}, "prediction": "", "function_calls": [{"name": "set_default_provider_music", "arguments": {"music_provider_name": "Spotify"}}]}
{"filename": "stop_data/stop/test_1/music_test/00003209.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Play [SL:MUSIC_ARTIST_NAME Goo Goo Dolls ] ]", "parameters": {}, "sentence": "Play Goo Goo Dolls", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "PLAY GOO GOO DOLLS", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_ARTIST_NAME GOO GOO DOLLS ] ]", "raw_data": {"file_id": "test_1/music_test/00003209.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Play Goo Goo Dolls", "seqlogical": "[IN:PLAY_MUSIC Play [SL:MUSIC_ARTIST_NAME Goo Goo Dolls ] ]", "normalized_utterance": "PLAY GOO GOO DOLLS", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_ARTIST_NAME GOO GOO DOLLS ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_ARTIST_NAME GOO GOO DOLLS ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_artist_name": "Goo Goo Dolls"}}]}
{"filename": "stop_data/stop/test_1/music_test/00001169.wav", "split": "test", "intent": "[IN:PLAY_MUSIC I want to hear [SL:MUSIC_ARTIST_NAME Paramore ] 's latest [SL:MUSIC_TYPE album ] ]", "parameters": {}, "sentence": "I want to hear Paramore's latest album", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "I WANT TO HEAR PARAMORE 'S LATEST ALBUM", "normalized_seqlogical": "[IN:PLAY_MUSIC I WANT TO HEAR [SL:MUSIC_ARTIST_NAME PARAMORE ] 'S LATEST [SL:MUSIC_TYPE ALBUM ] ]", "raw_data": {"file_id": "test_1/music_test/00001169.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "I want to hear Paramore's latest album", "seqlogical": "[IN:PLAY_MUSIC I want to hear [SL:MUSIC_ARTIST_NAME Paramore ] 's latest [SL:MUSIC_TYPE album ] ]", "normalized_utterance": "I WANT TO HEAR PARAMORE 'S LATEST ALBUM", "normalized_seqlogical": "[IN:PLAY_MUSIC I WANT TO HEAR [SL:MUSIC_ARTIST_NAME PARAMORE ] 'S LATEST [SL:MUSIC_TYPE ALBUM ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_ARTIST_NAME PARAMORE ] [SL:MUSIC_TYPE ALBUM ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_artist_name": "Paramore", "music_type": "album"}}]}
{"filename": "stop_data/stop/test_0/music_test/00003734.wav", "split": "test", "intent": "[IN:DISLIKE_MUSIC Give this [SL:MUSIC_TYPE song ] a thumbs down . ]", "parameters": {}, "sentence": "Give this song a thumbs down.", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "GIVE THIS SONG A THUMBS DOWN", "normalized_seqlogical": "[IN:DISLIKE_MUSIC GIVE THIS [SL:MUSIC_TYPE SONG ] A THUMBS DOWN ]", "raw_data": {"file_id": "test_0/music_test_0/00003734.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Give this song a thumbs down.", "seqlogical": "[IN:DISLIKE_MUSIC Give this [SL:MUSIC_TYPE song ] a thumbs down . ]", "normalized_utterance": "GIVE THIS SONG A THUMBS DOWN", "normalized_seqlogical": "[IN:DISLIKE_MUSIC GIVE THIS [SL:MUSIC_TYPE SONG ] A THUMBS DOWN ]", "decoupled_normalized_seqlogical": "[IN:DISLIKE_MUSIC [SL:MUSIC_TYPE SONG ] ]"}, "prediction": "", "function_calls": [{"name": "dislike_music", "arguments": {"music_type": "song"}}]}
{"filename": "stop_data/stop/test_1/music_test/00002844.wav", "split": "test", "intent": "[IN:STOP_MUSIC turn off the [SL:MUSIC_TYPE music ] ]", "parameters": {}, "sentence": "turn off the music", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "TURN OFF THE MUSIC", "normalized_seqlogical": "[IN:STOP_MUSIC TURN OFF THE [SL:MUSIC_TYPE MUSIC ] ]", "raw_data": {"file_id": "test_1/music_test/00002844.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "turn off the music", "seqlogical": "[IN:STOP_MUSIC turn off the [SL:MUSIC_TYPE music ] ]", "normalized_utterance": "TURN OFF THE MUSIC", "normalized_seqlogical": "[IN:STOP_MUSIC TURN OFF THE [SL:MUSIC_TYPE MUSIC ] ]", "decoupled_normalized_seqlogical": "[IN:STOP_MUSIC [SL:MUSIC_TYPE MUSIC ] ]"}, "prediction": "", "function_calls": [{"name": "stop_music", "arguments": {"music_type": "music"}}]}
{"filename": "stop_data/stop/test_0/music_test/00002974.wav", "split": "test", "intent": "[IN:REPLAY_MUSIC Play [SL:MUSIC_TRACK_TITLE Sorry ] one again ]", "parameters": {}, "sentence": "Play Sorry one again", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "PLAY SORRY ONE AGAIN", "normalized_seqlogical": "[IN:REPLAY_MUSIC PLAY [SL:MUSIC_TRACK_TITLE SORRY ] ONE AGAIN ]", "raw_data": {"file_id": "test_0/music_test_0/00002974.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Play Sorry one again", "seqlogical": "[IN:REPLAY_MUSIC Play [SL:MUSIC_TRACK_TITLE Sorry ] one again ]", "normalized_utterance": "PLAY SORRY ONE AGAIN", "normalized_seqlogical": "[IN:REPLAY_MUSIC PLAY [SL:MUSIC_TRACK_TITLE SORRY ] ONE AGAIN ]", "decoupled_normalized_seqlogical": "[IN:REPLAY_MUSIC [SL:MUSIC_TRACK_TITLE SORRY ] ]"}, "prediction": "", "function_calls": [{"name": "replay_music", "arguments": {"music_type": "song"}}]}
{"filename": "stop_data/stop/test_0/music_test/00003388.wav", "split": "test", "intent": "[IN:PLAY_MUSIC I want to listen to [SL:MUSIC_ARTIST_NAME Mariah Carey ] please ]", "parameters": {}, "sentence": "I want to listen to Mariah Carey please", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "I WANT TO LISTEN TO MARIAH CAREY PLEASE", "normalized_seqlogical": "[IN:PLAY_MUSIC I WANT TO LISTEN TO [SL:MUSIC_ARTIST_NAME MARIAH CAREY ] PLEASE ]", "raw_data": {"file_id": "test_0/music_test_0/00003388.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "I want to listen to Mariah Carey please", "seqlogical": "[IN:PLAY_MUSIC I want to listen to [SL:MUSIC_ARTIST_NAME Mariah Carey ] please ]", "normalized_utterance": "I WANT TO LISTEN TO MARIAH CAREY PLEASE", "normalized_seqlogical": "[IN:PLAY_MUSIC I WANT TO LISTEN TO [SL:MUSIC_ARTIST_NAME MARIAH CAREY ] PLEASE ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_ARTIST_NAME MARIAH CAREY ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_artist_name": "Mariah Carey"}}]}
{"filename": "stop_data/stop/test_0/music_test/00001645.wav", "split": "test", "intent": "[IN:PLAY_MUSIC I want to listen to [SL:MUSIC_ARTIST_NAME New Kids on the Block ] . ]", "parameters": {}, "sentence": "I want to listen to New Kids on the Block.", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "I WANT TO LISTEN TO NEW KIDS ON THE BLOCK", "normalized_seqlogical": "[IN:PLAY_MUSIC I WANT TO LISTEN TO [SL:MUSIC_ARTIST_NAME NEW KIDS ON THE BLOCK ] ]", "raw_data": {"file_id": "test_0/music_test_0/00001645.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "I want to listen to New Kids on the Block.", "seqlogical": "[IN:PLAY_MUSIC I want to listen to [SL:MUSIC_ARTIST_NAME New Kids on the Block ] . ]", "normalized_utterance": "I WANT TO LISTEN TO NEW KIDS ON THE BLOCK", "normalized_seqlogical": "[IN:PLAY_MUSIC I WANT TO LISTEN TO [SL:MUSIC_ARTIST_NAME NEW KIDS ON THE BLOCK ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_ARTIST_NAME NEW KIDS ON THE BLOCK ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_artist_name": "New Kids on the Block"}}]}
{"filename": "stop_data/stop/test_1/music_test/00002000.wav", "split": "test", "intent": "[IN:PLAY_MUSIC listen to [SL:MUSIC_ARTIST_NAME Drake ] ]", "parameters": {}, "sentence": "listen to Drake", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "LISTEN TO DRAKE", "normalized_seqlogical": "[IN:PLAY_MUSIC LISTEN TO [SL:MUSIC_ARTIST_NAME DRAKE ] ]", "raw_data": {"file_id": "test_1/music_test/00002000.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "listen to Drake", "seqlogical": "[IN:PLAY_MUSIC listen to [SL:MUSIC_ARTIST_NAME Drake ] ]", "normalized_utterance": "LISTEN TO DRAKE", "normalized_seqlogical": "[IN:PLAY_MUSIC LISTEN TO [SL:MUSIC_ARTIST_NAME DRAKE ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_ARTIST_NAME DRAKE ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_artist_name": "Drake"}}]}
{"filename": "stop_data/stop/test_0/music_test/00002342.wav", "split": "test", "intent": "[IN:PLAY_MUSIC play the [SL:MUSIC_TRACK_TITLE unforgiven ] by [SL:MUSIC_ARTIST_NAME metallica ] ]", "parameters": {}, "sentence": "play the unforgiven by metallica", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "PLAY THE UNFORGIVEN BY METALLICA", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY THE [SL:MUSIC_TRACK_TITLE UNFORGIVEN ] BY [SL:MUSIC_ARTIST_NAME METALLICA ] ]", "raw_data": {"file_id": "test_0/music_test_0/00002342.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "play the unforgiven by metallica", "seqlogical": "[IN:PLAY_MUSIC play the [SL:MUSIC_TRACK_TITLE unforgiven ] by [SL:MUSIC_ARTIST_NAME metallica ] ]", "normalized_utterance": "PLAY THE UNFORGIVEN BY METALLICA", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY THE [SL:MUSIC_TRACK_TITLE UNFORGIVEN ] BY [SL:MUSIC_ARTIST_NAME METALLICA ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_TRACK_TITLE UNFORGIVEN ] [SL:MUSIC_ARTIST_NAME METALLICA ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_track_title": "The Unforgiven", "music_artist_name": "Metallica"}}]}
{"filename": "stop_data/stop/test_0/music_test/00003666.wav", "split": "test", "intent": "[IN:REPLAY_MUSIC Replay that [SL:ORDINAL last ] [SL:MUSIC_TYPE song ] for me ]", "parameters": {}, "sentence": "Replay that last song for me", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "REPLAY THAT LAST SONG FOR ME", "normalized_seqlogical": "[IN:REPLAY_MUSIC REPLAY THAT [SL:ORDINAL LAST ] [SL:MUSIC_TYPE SONG ] FOR ME ]", "raw_data": {"file_id": "test_0/music_test_0/00003666.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Replay that last song for me", "seqlogical": "[IN:REPLAY_MUSIC Replay that [SL:ORDINAL last ] [SL:MUSIC_TYPE song ] for me ]", "normalized_utterance": "REPLAY THAT LAST SONG FOR ME", "normalized_seqlogical": "[IN:REPLAY_MUSIC REPLAY THAT [SL:ORDINAL LAST ] [SL:MUSIC_TYPE SONG ] FOR ME ]", "decoupled_normalized_seqlogical": "[IN:REPLAY_MUSIC [SL:ORDINAL LAST ] [SL:MUSIC_TYPE SONG ] ]"}, "prediction": "", "function_calls": [{"name": "previous_track_music", "arguments": {"music_type": "song", "ordinal": "last"}}]}
{"filename": "stop_data/stop/test_1/music_test/00002878.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Play party [SL:MUSIC_TYPE mix ] ]", "parameters": {}, "sentence": "Play party mix", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "PLAY PARTY MIX", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY PARTY [SL:MUSIC_TYPE MIX ] ]", "raw_data": {"file_id": "test_1/music_test/00002878.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Play party mix", "seqlogical": "[IN:PLAY_MUSIC Play party [SL:MUSIC_TYPE mix ] ]", "normalized_utterance": "PLAY PARTY MIX", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY PARTY [SL:MUSIC_TYPE MIX ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_TYPE MIX ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_playlist_title": "Party Mix"}}]}
{"filename": "stop_data/stop/test_0/music_test/00001545.wav", "split": "test", "intent": "[IN:PLAY_MUSIC can i listen to [SL:MUSIC_ARTIST_NAME Missy Elliot ] ]", "parameters": {}, "sentence": "can i listen to Missy Elliot", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "CAN I LISTEN TO MISSY ELLIOT", "normalized_seqlogical": "[IN:PLAY_MUSIC CAN I LISTEN TO [SL:MUSIC_ARTIST_NAME MISSY ELLIOT ] ]", "raw_data": {"file_id": "test_0/music_test_0/00001545.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "can i listen to Missy Elliot", "seqlogical": "[IN:PLAY_MUSIC can i listen to [SL:MUSIC_ARTIST_NAME Missy Elliot ] ]", "normalized_utterance": "CAN I LISTEN TO MISSY ELLIOT", "normalized_seqlogical": "[IN:PLAY_MUSIC CAN I LISTEN TO [SL:MUSIC_ARTIST_NAME MISSY ELLIOT ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_ARTIST_NAME MISSY ELLIOT ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_artist_name": "Missy Elliott"}}]}
{"filename": "stop_data/stop/test_1/music_test/00003850.wav", "split": "test", "intent": "[IN:LIKE_MUSIC I want this [SL:MUSIC_TYPE song ] to be given a thumbs up ]", "parameters": {}, "sentence": "I want this song to be given a thumbs up", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "I WANT THIS SONG TO BE GIVEN A THUMBS UP", "normalized_seqlogical": "[IN:LIKE_MUSIC I WANT THIS [SL:MUSIC_TYPE SONG ] TO BE GIVEN A THUMBS UP ]", "raw_data": {"file_id": "test_1/music_test/00003850.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "I want this song to be given a thumbs up", "seqlogical": "[IN:LIKE_MUSIC I want this [SL:MUSIC_TYPE song ] to be given a thumbs up ]", "normalized_utterance": "I WANT THIS SONG TO BE GIVEN A THUMBS UP", "normalized_seqlogical": "[IN:LIKE_MUSIC I WANT THIS [SL:MUSIC_TYPE SONG ] TO BE GIVEN A THUMBS UP ]", "decoupled_normalized_seqlogical": "[IN:LIKE_MUSIC [SL:MUSIC_TYPE SONG ] ]"}, "prediction": "", "function_calls": [{"name": "like_music", "arguments": {"music_type": "song"}}]}
{"filename": "stop_data/stop/test_1/music_test/00003678.wav", "split": "test", "intent": "[IN:PREVIOUS_TRACK_MUSIC Play the [SL:ORDINAL previous ] [SL:MUSIC_TYPE song ] please ]", "parameters": {}, "sentence": "Play the previous song please", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "PLAY THE PREVIOUS SONG PLEASE", "normalized_seqlogical": "[IN:PREVIOUS_TRACK_MUSIC PLAY THE [SL:ORDINAL PREVIOUS ] [SL:MUSIC_TYPE SONG ] PLEASE ]", "raw_data": {"file_id": "test_1/music_test/00003678.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Play the previous song please", "seqlogical": "[IN:PREVIOUS_TRACK_MUSIC Play the [SL:ORDINAL previous ] [SL:MUSIC_TYPE song ] please ]", "normalized_utterance": "PLAY THE PREVIOUS SONG PLEASE", "normalized_seqlogical": "[IN:PREVIOUS_TRACK_MUSIC PLAY THE [SL:ORDINAL PREVIOUS ] [SL:MUSIC_TYPE SONG ] PLEASE ]", "decoupled_normalized_seqlogical": "[IN:PREVIOUS_TRACK_MUSIC [SL:ORDINAL PREVIOUS ] [SL:MUSIC_TYPE SONG ] ]"}, "prediction": "", "function_calls": [{"name": "previous_track_music", "arguments": {"music_type": "song", "ordinal": "previous"}}]}
{"filename": "stop_data/stop/test_0/music_test/00001679.wav", "split": "test", "intent": "[IN:SKIP_TRACK_MUSIC skip [SL:ORDINAL next ] [SL:MUSIC_TYPE song ] ]", "parameters": {}, "sentence": "skip next song", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "SKIP NEXT SONG", "normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC SKIP [SL:ORDINAL NEXT ] [SL:MUSIC_TYPE SONG ] ]", "raw_data": {"file_id": "test_0/music_test_0/00001679.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "skip next song", "seqlogical": "[IN:SKIP_TRACK_MUSIC skip [SL:ORDINAL next ] [SL:MUSIC_TYPE song ] ]", "normalized_utterance": "SKIP NEXT SONG", "normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC SKIP [SL:ORDINAL NEXT ] [SL:MUSIC_TYPE SONG ] ]", "decoupled_normalized_seqlogical": "[IN:SKIP_TRACK_MUSIC [SL:ORDINAL NEXT ] [SL:MUSIC_TYPE SONG ] ]"}, "prediction": "", "function_calls": [{"name": "skip_track_music", "arguments": {"music_type": "song", "ordinal": "next"}}]}
{"filename": "stop_data/stop/test_1/music_test/00001643.wav", "split": "test", "intent": "[IN:REPLAY_MUSIC Play that [SL:MUSIC_TYPE song ] again ]", "parameters": {}, "sentence": "Play that song again", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "PLAY THAT SONG AGAIN", "normalized_seqlogical": "[IN:REPLAY_MUSIC PLAY THAT [SL:MUSIC_TYPE SONG ] AGAIN ]", "raw_data": {"file_id": "test_1/music_test/00001643.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Play that song again", "seqlogical": "[IN:REPLAY_MUSIC Play that [SL:MUSIC_TYPE song ] again ]", "normalized_utterance": "PLAY THAT SONG AGAIN", "normalized_seqlogical": "[IN:REPLAY_MUSIC PLAY THAT [SL:MUSIC_TYPE SONG ] AGAIN ]", "decoupled_normalized_seqlogical": "[IN:REPLAY_MUSIC [SL:MUSIC_TYPE SONG ] ]"}, "prediction": "", "function_calls": [{"name": "replay_music", "arguments": {"music_type": "song"}}]}
{"filename": "stop_data/stop/test_1/music_test/00003792.wav", "split": "test", "intent": "[IN:PREVIOUS_TRACK_MUSIC i want to go back two [SL:MUSIC_TYPE songs ] ]", "parameters": {}, "sentence": "i want to go back two songs", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "I WANT TO GO BACK TWO SONGS", "normalized_seqlogical": "[IN:PREVIOUS_TRACK_MUSIC I WANT TO GO BACK TWO [SL:MUSIC_TYPE SONGS ] ]", "raw_data": {"file_id": "test_1/music_test/00003792.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "i want to go back two songs", "seqlogical": "[IN:PREVIOUS_TRACK_MUSIC i want to go back two [SL:MUSIC_TYPE songs ] ]", "normalized_utterance": "I WANT TO GO BACK TWO SONGS", "normalized_seqlogical": "[IN:PREVIOUS_TRACK_MUSIC I WANT TO GO BACK TWO [SL:MUSIC_TYPE SONGS ] ]", "decoupled_normalized_seqlogical": "[IN:PREVIOUS_TRACK_MUSIC [SL:MUSIC_TYPE SONGS ] ]"}, "prediction": "", "function_calls": [{"name": "previous_track_music", "arguments": {"music_type": "song", "ordinal": "1"}}]}
{"filename": "stop_data/stop/test_1/music_test/00002079.wav", "split": "test", "intent": "[IN:PLAY_MUSIC Play [SL:MUSIC_TRACK_TITLE Hurt ] by [SL:MUSIC_ARTIST_NAME Johnny Cash ] ]", "parameters": {}, "sentence": "Play Hurt by Johnny Cash", "domain": "music", "gender": "Female", "native": "Yes", "normalized_utterance": "PLAY HURT BY JOHNNY CASH", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_TRACK_TITLE HURT ] BY [SL:MUSIC_ARTIST_NAME JOHNNY CASH ] ]", "raw_data": {"file_id": "test_1/music_test/00002079.wav", "domain": "music", "gender": "Female", "native": "Yes", "utterance": "Play Hurt by Johnny Cash", "seqlogical": "[IN:PLAY_MUSIC Play [SL:MUSIC_TRACK_TITLE Hurt ] by [SL:MUSIC_ARTIST_NAME Johnny Cash ] ]", "normalized_utterance": "PLAY HURT BY JOHNNY CASH", "normalized_seqlogical": "[IN:PLAY_MUSIC PLAY [SL:MUSIC_TRACK_TITLE HURT ] BY [SL:MUSIC_ARTIST_NAME JOHNNY CASH ] ]", "decoupled_normalized_seqlogical": "[IN:PLAY_MUSIC [SL:MUSIC_TRACK_TITLE HURT ] [SL:MUSIC_ARTIST_NAME JOHNNY CASH ] ]"}, "prediction": "", "function_calls": [{"name": "play_music", "arguments": {"music_track_title": "Hurt", "music_artist_name": "Johnny Cash"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00001668.wav", "split": "test", "intent": "[IN:CREATE_REMINDER I need to pick Dad up in the morning . Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE email [SL:CONTACT [IN:GET_CONTACT [SL:TYPE_RELATION dad ] ] ] ] ] [SL:DATE_TIME tonight at 9 ] to [SL:TODO remind him ] ] ] ]", "parameters": {}, "sentence": "I need to pick Dad up  in the morning. Remind me to email dad tonight at 9 to remind him", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "I NEED TO PICK DAD UP IN THE MORNING REMIND ME TO EMAIL DAD TONIGHT AT NINE TO REMIND HIM", "normalized_seqlogical": "[IN:CREATE_REMINDER I NEED TO PICK DAD UP IN THE MORNING REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE EMAIL [SL:CONTACT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ] ] [SL:DATE_TIME TONIGHT AT NINE ] TO [SL:TODO REMIND HIM ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00001668.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "I need to pick Dad up  in the morning. Remind me to email dad tonight at 9 to remind him", "seqlogical": "[IN:CREATE_REMINDER I need to pick Dad up in the morning . Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE email [SL:CONTACT [IN:GET_CONTACT [SL:TYPE_RELATION dad ] ] ] ] ] [SL:DATE_TIME tonight at 9 ] to [SL:TODO remind him ] ] ] ]", "normalized_utterance": "I NEED TO PICK DAD UP IN THE MORNING REMIND ME TO EMAIL DAD TONIGHT AT NINE TO REMIND HIM", "normalized_seqlogical": "[IN:CREATE_REMINDER I NEED TO PICK DAD UP IN THE MORNING REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE EMAIL [SL:CONTACT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ] ] [SL:DATE_TIME TONIGHT AT NINE ] TO [SL:TODO REMIND HIM ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE [SL:CONTACT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ] ] [SL:DATE_TIME TONIGHT AT NINE ] [SL:TODO REMIND HIM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "Dad", "todo": "pick Dad up in the morning", "date_time": "tomorrow morning"}}, {"name": "create_reminder", "arguments": {"person_reminded": "Dad", "todo": "email Dad", "date_time": "tonight at 9 PM"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00001668.wav", "split": "test", "intent": "[IN:CREATE_REMINDER I need to pick Dad up in the morning . Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE email [SL:CONTACT [IN:GET_CONTACT [SL:TYPE_RELATION dad ] ] ] ] ] [SL:DATE_TIME tonight at 9 ] to [SL:TODO remind him ] ] ] ]", "parameters": {}, "sentence": "I need to pick Dad up  in the morning. Remind me to email dad tonight at 9 to remind him", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "I NEED TO PICK DAD UP IN THE MORNING REMIND ME TO EMAIL DAD TONIGHT AT NINE TO REMIND HIM", "normalized_seqlogical": "[IN:CREATE_REMINDER I NEED TO PICK DAD UP IN THE MORNING REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE EMAIL [SL:CONTACT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ] ] [SL:DATE_TIME TONIGHT AT NINE ] TO [SL:TODO REMIND HIM ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00001668.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "I need to pick Dad up  in the morning. Remind me to email dad tonight at 9 to remind him", "seqlogical": "[IN:CREATE_REMINDER I need to pick Dad up in the morning . Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE email [SL:CONTACT [IN:GET_CONTACT [SL:TYPE_RELATION dad ] ] ] ] ] [SL:DATE_TIME tonight at 9 ] to [SL:TODO remind him ] ] ] ]", "normalized_utterance": "I NEED TO PICK DAD UP IN THE MORNING REMIND ME TO EMAIL DAD TONIGHT AT NINE TO REMIND HIM", "normalized_seqlogical": "[IN:CREATE_REMINDER I NEED TO PICK DAD UP IN THE MORNING REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE EMAIL [SL:CONTACT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ] ] [SL:DATE_TIME TONIGHT AT NINE ] TO [SL:TODO REMIND HIM ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE [SL:CONTACT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ] ] [SL:DATE_TIME TONIGHT AT NINE ] [SL:TODO REMIND HIM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "pick dad up", "date_time": "tomorrow morning"}}, {"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "email dad", "date_time": "tonight at 9 PM"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00001438.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Reminder to [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE text [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION friends ] ] ] ] ] [SL:TODO if I haven't talked them for a while ] ] ] ]", "parameters": {}, "sentence": "Reminder to text friends if I haven't talked them for a while", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "REMINDER TO TEXT FRIENDS IF I HAVEN'T TALKED THEM FOR A WHILE", "normalized_seqlogical": "[IN:CREATE_REMINDER REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION FRIENDS ] ] ] ] ] [SL:TODO IF I HAVEN'T TALKED THEM FOR A WHILE ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00001438.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Reminder to text friends if I haven't talked them for a while", "seqlogical": "[IN:CREATE_REMINDER Reminder to [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE text [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION friends ] ] ] ] ] [SL:TODO if I haven't talked them for a while ] ] ] ]", "normalized_utterance": "REMINDER TO TEXT FRIENDS IF I HAVEN'T TALKED THEM FOR A WHILE", "normalized_seqlogical": "[IN:CREATE_REMINDER REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION FRIENDS ] ] ] ] ] [SL:TODO IF I HAVEN'T TALKED THEM FOR A WHILE ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION FRIENDS ] ] ] ] ] [SL:TODO IF I HAVEN'T TALKED THEM FOR A WHILE ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "text friends if I haven't talked to them for a while"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00003454.wav", "split": "test", "intent": "[IN:CREATE_REMINDER set up reminder to [SL:TODO [IN:GET_TODO [SL:TODO replenish pantry ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Saturday ] [SL:DATE_TIME for 8 weeks ] ] ] ] ] [SL:DATE_TIME starting today ] . ]", "parameters": {}, "sentence": "set up reminder to replenish pantry every Saturday for 8 weeks starting today.", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "SET UP REMINDER TO REPLENISH PANTRY EVERY SATURDAY FOR EIGHT WEEKS STARTING TODAY", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO REPLENISH PANTRY ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY SATURDAY ] [SL:DATE_TIME FOR EIGHT WEEKS ] ] ] ] ] [SL:DATE_TIME STARTING TODAY ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00003454.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "set up reminder to replenish pantry every Saturday for 8 weeks starting today.", "seqlogical": "[IN:CREATE_REMINDER set up reminder to [SL:TODO [IN:GET_TODO [SL:TODO replenish pantry ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Saturday ] [SL:DATE_TIME for 8 weeks ] ] ] ] ] [SL:DATE_TIME starting today ] . ]", "normalized_utterance": "SET UP REMINDER TO REPLENISH PANTRY EVERY SATURDAY FOR EIGHT WEEKS STARTING TODAY", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO REPLENISH PANTRY ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY SATURDAY ] [SL:DATE_TIME FOR EIGHT WEEKS ] ] ] ] ] [SL:DATE_TIME STARTING TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:TODO [IN:GET_TODO [SL:TODO REPLENISH PANTRY ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY SATURDAY ] [SL:DATE_TIME FOR EIGHT WEEKS ] ] ] ] ] [SL:DATE_TIME STARTING TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "every Saturday", "amount": 8, "todo": "replenish pantry", "date_time": "today"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00002537.wav", "split": "test", "intent": "[IN:DELETE_REMINDER Remove [SL:PERSON_REMINDED my ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO take my trash out ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Thursday night ] [SL:DATE_TIME for the remaining of this month ] ] ] ] ] leave the one for next month alone ]", "parameters": {}, "sentence": "Remove my reminder to take my trash out every Thursday night for the remaining of this month leave the one for next month alone", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "REMOVE MY REMINDER TO TAKE MY TRASH OUT EVERY THURSDAY NIGHT FOR THE REMAINING OF THIS MONTH LEAVE THE ONE FOR NEXT MONTH ALONE", "normalized_seqlogical": "[IN:DELETE_REMINDER REMOVE [SL:PERSON_REMINDED MY ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO TAKE MY TRASH OUT ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY THURSDAY NIGHT ] [SL:DATE_TIME FOR THE REMAINING OF THIS MONTH ] ] ] ] ] LEAVE THE ONE FOR NEXT MONTH ALONE ]", "raw_data": {"file_id": "test_0/reminder_test_0/00002537.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Remove my reminder to take my trash out every Thursday night for the remaining of this month leave the one for next month alone", "seqlogical": "[IN:DELETE_REMINDER Remove [SL:PERSON_REMINDED my ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO take my trash out ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Thursday night ] [SL:DATE_TIME for the remaining of this month ] ] ] ] ] leave the one for next month alone ]", "normalized_utterance": "REMOVE MY REMINDER TO TAKE MY TRASH OUT EVERY THURSDAY NIGHT FOR THE REMAINING OF THIS MONTH LEAVE THE ONE FOR NEXT MONTH ALONE", "normalized_seqlogical": "[IN:DELETE_REMINDER REMOVE [SL:PERSON_REMINDED MY ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO TAKE MY TRASH OUT ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY THURSDAY NIGHT ] [SL:DATE_TIME FOR THE REMAINING OF THIS MONTH ] ] ] ] ] LEAVE THE ONE FOR NEXT MONTH ALONE ]", "decoupled_normalized_seqlogical": "[IN:DELETE_REMINDER [SL:PERSON_REMINDED MY ] [SL:TODO [IN:GET_TODO [SL:TODO TAKE MY TRASH OUT ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY THURSDAY NIGHT ] [SL:DATE_TIME FOR THE REMAINING OF THIS MONTH ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "take my trash out", "recurring_date_time": "every Thursday night for the remaining month"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00003006.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO do ] the [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] [SL:TODO charting ] [SL:DATE_TIME at 4 : 00 PM ] ] ] ]", "parameters": {}, "sentence": "Set a weekly reminder to do the weekly charting at 4:00 PM", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "SET A WEEKLY REMINDER TO DO THE WEEKLY CHARTING AT FOUR PM", "normalized_seqlogical": "[IN:CREATE_REMINDER SET A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO DO ] THE [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO CHARTING ] [SL:DATE_TIME AT FOUR PM ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00003006.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Set a weekly reminder to do the weekly charting at 4:00 PM", "seqlogical": "[IN:CREATE_REMINDER Set a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO do ] the [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] [SL:TODO charting ] [SL:DATE_TIME at 4 : 00 PM ] ] ] ]", "normalized_utterance": "SET A WEEKLY REMINDER TO DO THE WEEKLY CHARTING AT FOUR PM", "normalized_seqlogical": "[IN:CREATE_REMINDER SET A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO DO ] THE [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO CHARTING ] [SL:DATE_TIME AT FOUR PM ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO [IN:GET_TODO [SL:TODO DO ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO CHARTING ] [SL:DATE_TIME AT FOUR PM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "weekly", "todo": "do the weekly charting", "date_time": "4 o'clock PM"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00002173.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] about [SL:TODO [IN:GET_TODO [SL:TODO dinner ] [SL:DATE_TIME tomorrow ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] ] ] [SL:DATE_TIME at 2 : 00 ] ]", "parameters": {}, "sentence": "Remind me about dinner tomorrow with mom at 2:00", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "REMIND ME ABOUT DINNER TOMORROW WITH MOM AT TWO", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] ABOUT [SL:TODO [IN:GET_TODO [SL:TODO DINNER ] [SL:DATE_TIME TOMORROW ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] ] ] [SL:DATE_TIME AT TWO ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00002173.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Remind me about dinner tomorrow with mom at 2:00", "seqlogical": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] about [SL:TODO [IN:GET_TODO [SL:TODO dinner ] [SL:DATE_TIME tomorrow ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] ] ] [SL:DATE_TIME at 2 : 00 ] ]", "normalized_utterance": "REMIND ME ABOUT DINNER TOMORROW WITH MOM AT TWO", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] ABOUT [SL:TODO [IN:GET_TODO [SL:TODO DINNER ] [SL:DATE_TIME TOMORROW ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] ] ] [SL:DATE_TIME AT TWO ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:GET_TODO [SL:TODO DINNER ] [SL:DATE_TIME TOMORROW ] [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] ] ] [SL:DATE_TIME AT TWO ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "dinner with mom", "date_time": "tomorrow at 2pm"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00001643.wav", "split": "test", "intent": "[IN:DELETE_REMINDER Delete [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] [SL:TODO meetings ] with [SL:ATTENDEE Gilly ] ] ] [SL:DATE_TIME at 4 pm ] . ]", "parameters": {}, "sentence": "Delete weekly meetings with Gilly at 4pm.", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "DELETE WEEKLY MEETINGS WITH GILLY AT FOUR PM", "normalized_seqlogical": "[IN:DELETE_REMINDER DELETE [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO MEETINGS ] WITH [SL:ATTENDEE GILLY ] ] ] [SL:DATE_TIME AT FOUR PM ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00001643.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Delete weekly meetings with Gilly at 4pm.", "seqlogical": "[IN:DELETE_REMINDER Delete [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] [SL:TODO meetings ] with [SL:ATTENDEE Gilly ] ] ] [SL:DATE_TIME at 4 pm ] . ]", "normalized_utterance": "DELETE WEEKLY MEETINGS WITH GILLY AT FOUR PM", "normalized_seqlogical": "[IN:DELETE_REMINDER DELETE [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO MEETINGS ] WITH [SL:ATTENDEE GILLY ] ] ] [SL:DATE_TIME AT FOUR PM ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_REMINDER [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO MEETINGS ] [SL:ATTENDEE GILLY ] ] ] [SL:DATE_TIME AT FOUR PM ] ]"}, "prediction": "", "function_calls": [{"name": "delete_reminder", "arguments": {"recurring_date_time": "weekly", "person_reminded": "Jilly", "todo": "meetings", "date_time": "4pm"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00000522.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set a reminder for [SL:TODO [IN:GET_TODO [SL:TODO dinner ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:MUTUAL_SCHOOL college ] [SL:TYPE_RELATION friends ] ] ] ] ] [SL:DATE_TIME tonight at 7 pm ] . ]", "parameters": {}, "sentence": "Set a reminder for dinner with college friends tonight at 7 pm.", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "SET A REMINDER FOR DINNER WITH COLLEGE FRIENDS TONIGHT AT SEVEN PM", "normalized_seqlogical": "[IN:CREATE_REMINDER SET A REMINDER FOR [SL:TODO [IN:GET_TODO [SL:TODO DINNER ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:MUTUAL_SCHOOL COLLEGE ] [SL:TYPE_RELATION FRIENDS ] ] ] ] ] [SL:DATE_TIME TONIGHT AT SEVEN PM ] ]", "raw_data": {"file_id": "test_1/reminder_test/00000522.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Set a reminder for dinner with college friends tonight at 7 pm.", "seqlogical": "[IN:CREATE_REMINDER Set a reminder for [SL:TODO [IN:GET_TODO [SL:TODO dinner ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:MUTUAL_SCHOOL college ] [SL:TYPE_RELATION friends ] ] ] ] ] [SL:DATE_TIME tonight at 7 pm ] . ]", "normalized_utterance": "SET A REMINDER FOR DINNER WITH COLLEGE FRIENDS TONIGHT AT SEVEN PM", "normalized_seqlogical": "[IN:CREATE_REMINDER SET A REMINDER FOR [SL:TODO [IN:GET_TODO [SL:TODO DINNER ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:MUTUAL_SCHOOL COLLEGE ] [SL:TYPE_RELATION FRIENDS ] ] ] ] ] [SL:DATE_TIME TONIGHT AT SEVEN PM ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:TODO [IN:GET_TODO [SL:TODO DINNER ] [SL:ATTENDEE [IN:GET_CONTACT [SL:MUTUAL_SCHOOL COLLEGE ] [SL:TYPE_RELATION FRIENDS ] ] ] ] ] [SL:DATE_TIME TONIGHT AT SEVEN PM ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "dinner with college friends", "date_time": "today at 7pm"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00003027.wav", "split": "test", "intent": "[IN:GET_REMINDER_LOCATION where is [SL:PERSON_REMINDED my ] [SL:ORDINAL next ] reminder [SL:TODO [IN:GET_TODO with [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION sister ] ] ] ] ] ]", "parameters": {}, "sentence": "where is my next reminder with my sister", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "WHERE IS MY NEXT REMINDER WITH MY SISTER", "normalized_seqlogical": "[IN:GET_REMINDER_LOCATION WHERE IS [SL:PERSON_REMINDED MY ] [SL:ORDINAL NEXT ] REMINDER [SL:TODO [IN:GET_TODO WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION SISTER ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00003027.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "where is my next reminder with my sister", "seqlogical": "[IN:GET_REMINDER_LOCATION where is [SL:PERSON_REMINDED my ] [SL:ORDINAL next ] reminder [SL:TODO [IN:GET_TODO with [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION sister ] ] ] ] ] ]", "normalized_utterance": "WHERE IS MY NEXT REMINDER WITH MY SISTER", "normalized_seqlogical": "[IN:GET_REMINDER_LOCATION WHERE IS [SL:PERSON_REMINDED MY ] [SL:ORDINAL NEXT ] REMINDER [SL:TODO [IN:GET_TODO WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION SISTER ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_REMINDER_LOCATION [SL:PERSON_REMINDED MY ] [SL:ORDINAL NEXT ] [SL:TODO [IN:GET_TODO [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION SISTER ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_reminder_location", "arguments": {"person_reminded": "sister", "todo": "next reminder"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00003306.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set a reminder [SL:DATE_TIME for 10 minutes before ] [SL:TODO [IN:GET_TODO [SL:TODO Yellowstone starts ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME at 10 o'clock ] for [SL:FREQUENCY every Wednesday ] ] ] ] ] . ]", "parameters": {}, "sentence": "Set a reminder for 10 minutes before Yellowstone starts at 10 o'clock for every Wednesday.", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "SET A REMINDER FOR TEN MINUTES BEFORE YELLOWSTONE STARTS AT TEN O'CLOCK FOR EVERY WEDNESDAY", "normalized_seqlogical": "[IN:CREATE_REMINDER SET A REMINDER [SL:DATE_TIME FOR TEN MINUTES BEFORE ] [SL:TODO [IN:GET_TODO [SL:TODO YELLOWSTONE STARTS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME AT TEN O'CLOCK ] FOR [SL:FREQUENCY EVERY WEDNESDAY ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00003306.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Set a reminder for 10 minutes before Yellowstone starts at 10 o'clock for every Wednesday.", "seqlogical": "[IN:CREATE_REMINDER Set a reminder [SL:DATE_TIME for 10 minutes before ] [SL:TODO [IN:GET_TODO [SL:TODO Yellowstone starts ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME at 10 o'clock ] for [SL:FREQUENCY every Wednesday ] ] ] ] ] . ]", "normalized_utterance": "SET A REMINDER FOR TEN MINUTES BEFORE YELLOWSTONE STARTS AT TEN O'CLOCK FOR EVERY WEDNESDAY", "normalized_seqlogical": "[IN:CREATE_REMINDER SET A REMINDER [SL:DATE_TIME FOR TEN MINUTES BEFORE ] [SL:TODO [IN:GET_TODO [SL:TODO YELLOWSTONE STARTS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME AT TEN O'CLOCK ] FOR [SL:FREQUENCY EVERY WEDNESDAY ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:DATE_TIME FOR TEN MINUTES BEFORE ] [SL:TODO [IN:GET_TODO [SL:TODO YELLOWSTONE STARTS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME AT TEN O'CLOCK ] [SL:FREQUENCY EVERY WEDNESDAY ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "Yellowstone starts", "date_time": "Wednesday at 9:50pm"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00001170.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder for [SL:PERSON_REMINDED [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION son ] ] ] to [SL:TODO [IN:GET_TODO [SL:TODO go ] to his [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] [SL:TODO robotix club ] ] ] . ]", "parameters": {}, "sentence": "Set up a weekly reminder for my son to go to his weekly robotix club.", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "SET UP A WEEKLY REMINDER FOR MY SON TO GO TO HIS WEEKLY ROBOTIX CLUB", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER FOR [SL:PERSON_REMINDED [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION SON ] ] ] TO [SL:TODO [IN:GET_TODO [SL:TODO GO ] TO HIS [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO ROBOTIX CLUB ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00001170.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Set up a weekly reminder for my son to go to his weekly robotix club.", "seqlogical": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder for [SL:PERSON_REMINDED [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION son ] ] ] to [SL:TODO [IN:GET_TODO [SL:TODO go ] to his [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] [SL:TODO robotix club ] ] ] . ]", "normalized_utterance": "SET UP A WEEKLY REMINDER FOR MY SON TO GO TO HIS WEEKLY ROBOTIX CLUB", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER FOR [SL:PERSON_REMINDED [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION SON ] ] ] TO [SL:TODO [IN:GET_TODO [SL:TODO GO ] TO HIS [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO ROBOTIX CLUB ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:PERSON_REMINDED [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION SON ] ] ] [SL:TODO [IN:GET_TODO [SL:TODO GO ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO ROBOTIX CLUB ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "Mason", "recurring_date_time": "weekly", "todo": "go to his weekly robotics club"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00003129.wav", "split": "test", "intent": "[IN:CREATE_REMINDER remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO catch up on the walking dead ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every evening ] [SL:DATE_TIME at 7 ] ] ] to [SL:TODO catch up before the new season starts ] ] ] ]", "parameters": {}, "sentence": "remind me to catch up on the walking dead every evening at 7 to catch up before the new season starts", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "REMIND ME TO CATCH UP ON THE WALKING DEAD EVERY EVENING AT SEVEN TO CATCH UP BEFORE THE NEW SEASON STARTS", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO CATCH UP ON THE WALKING DEAD ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY EVENING ] [SL:DATE_TIME AT SEVEN ] ] ] TO [SL:TODO CATCH UP BEFORE THE NEW SEASON STARTS ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00003129.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "remind me to catch up on the walking dead every evening at 7 to catch up before the new season starts", "seqlogical": "[IN:CREATE_REMINDER remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO catch up on the walking dead ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every evening ] [SL:DATE_TIME at 7 ] ] ] to [SL:TODO catch up before the new season starts ] ] ] ]", "normalized_utterance": "REMIND ME TO CATCH UP ON THE WALKING DEAD EVERY EVENING AT SEVEN TO CATCH UP BEFORE THE NEW SEASON STARTS", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO CATCH UP ON THE WALKING DEAD ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY EVENING ] [SL:DATE_TIME AT SEVEN ] ] ] TO [SL:TODO CATCH UP BEFORE THE NEW SEASON STARTS ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:GET_TODO [SL:TODO CATCH UP ON THE WALKING DEAD ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY EVENING ] [SL:DATE_TIME AT SEVEN ] ] ] [SL:TODO CATCH UP BEFORE THE NEW SEASON STARTS ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "catch up on The Walking Dead", "recurring_date_time": "every evening at seven"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00002723.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:SEND_MESSAGE shoot [SL:RECIPIENT Gail ] an email about [SL:CONTENT_EXACT [IN:GET_EVENT [SL:DATE_TIME tomorrows ] [SL:CATEGORY_EVENT meeting ] ] ] ] ] ]", "parameters": {}, "sentence": "Remind me to shoot Gail an email about tomorrows meeting", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "REMIND ME TO SHOOT GAIL AN EMAIL ABOUT TOMORROWS MEETING", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:SEND_MESSAGE SHOOT [SL:RECIPIENT GAIL ] AN EMAIL ABOUT [SL:CONTENT_EXACT [IN:GET_EVENT [SL:DATE_TIME TOMORROWS ] [SL:CATEGORY_EVENT MEETING ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00002723.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Remind me to shoot Gail an email about tomorrows meeting", "seqlogical": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:SEND_MESSAGE shoot [SL:RECIPIENT Gail ] an email about [SL:CONTENT_EXACT [IN:GET_EVENT [SL:DATE_TIME tomorrows ] [SL:CATEGORY_EVENT meeting ] ] ] ] ] ]", "normalized_utterance": "REMIND ME TO SHOOT GAIL AN EMAIL ABOUT TOMORROWS MEETING", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:SEND_MESSAGE SHOOT [SL:RECIPIENT GAIL ] AN EMAIL ABOUT [SL:CONTENT_EXACT [IN:GET_EVENT [SL:DATE_TIME TOMORROWS ] [SL:CATEGORY_EVENT MEETING ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:SEND_MESSAGE [SL:RECIPIENT GAIL ] [SL:CONTENT_EXACT [IN:GET_EVENT [SL:DATE_TIME TOMORROWS ] [SL:CATEGORY_EVENT MEETING ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "shoot Gail an email about tomorrow's meeting", "date_time": "tomorrow"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00000855.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set up a reminder for the [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] [SL:TODO volunteering sessions ] ] ] ]", "parameters": {}, "sentence": "Set up a reminder for the weekly volunteering sessions", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "SET UP A REMINDER FOR THE WEEKLY VOLUNTEERING SESSIONS", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A REMINDER FOR THE [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO VOLUNTEERING SESSIONS ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00000855.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Set up a reminder for the weekly volunteering sessions", "seqlogical": "[IN:CREATE_REMINDER Set up a reminder for the [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] [SL:TODO volunteering sessions ] ] ] ]", "normalized_utterance": "SET UP A REMINDER FOR THE WEEKLY VOLUNTEERING SESSIONS", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A REMINDER FOR THE [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO VOLUNTEERING SESSIONS ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO VOLUNTEERING SESSIONS ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "weekly volunteering sessions", "recurring_date_time": "weekly"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00003531.wav", "split": "test", "intent": "[IN:DELETE_REMINDER please delete the [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] [SL:TODO mentoring session ] ] ] reminder ]", "parameters": {}, "sentence": "please delete the weekly mentoring session reminder", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "PLEASE DELETE THE WEEKLY MENTORING SESSION REMINDER", "normalized_seqlogical": "[IN:DELETE_REMINDER PLEASE DELETE THE [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO MENTORING SESSION ] ] ] REMINDER ]", "raw_data": {"file_id": "test_0/reminder_test_0/00003531.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "please delete the weekly mentoring session reminder", "seqlogical": "[IN:DELETE_REMINDER please delete the [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] [SL:TODO mentoring session ] ] ] reminder ]", "normalized_utterance": "PLEASE DELETE THE WEEKLY MENTORING SESSION REMINDER", "normalized_seqlogical": "[IN:DELETE_REMINDER PLEASE DELETE THE [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO MENTORING SESSION ] ] ] REMINDER ]", "decoupled_normalized_seqlogical": "[IN:DELETE_REMINDER [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO MENTORING SESSION ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_reminder", "arguments": {"recurring_date_time": "weekly", "todo": "mentoring session"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00005367.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Can you create a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder starting [SL:DATE_TIME Friday ] for [SL:TODO [IN:GET_TODO [SL:TODO theatre rehearsal ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Monday ] [SL:DATE_TIME at 7 pm ] ] ] ] ] ]", "parameters": {}, "sentence": "Can you create a weekly reminder starting Friday for theatre rehearsal every Monday at 7 pm", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "CAN YOU CREATE A WEEKLY REMINDER STARTING FRIDAY FOR THEATRE REHEARSAL EVERY MONDAY AT SEVEN PM", "normalized_seqlogical": "[IN:CREATE_REMINDER CAN YOU CREATE A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER STARTING [SL:DATE_TIME FRIDAY ] FOR [SL:TODO [IN:GET_TODO [SL:TODO THEATRE REHEARSAL ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY MONDAY ] [SL:DATE_TIME AT SEVEN PM ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00005367.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Can you create a weekly reminder starting Friday for theatre rehearsal every Monday at 7 pm", "seqlogical": "[IN:CREATE_REMINDER Can you create a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder starting [SL:DATE_TIME Friday ] for [SL:TODO [IN:GET_TODO [SL:TODO theatre rehearsal ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Monday ] [SL:DATE_TIME at 7 pm ] ] ] ] ] ]", "normalized_utterance": "CAN YOU CREATE A WEEKLY REMINDER STARTING FRIDAY FOR THEATRE REHEARSAL EVERY MONDAY AT SEVEN PM", "normalized_seqlogical": "[IN:CREATE_REMINDER CAN YOU CREATE A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER STARTING [SL:DATE_TIME FRIDAY ] FOR [SL:TODO [IN:GET_TODO [SL:TODO THEATRE REHEARSAL ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY MONDAY ] [SL:DATE_TIME AT SEVEN PM ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:DATE_TIME FRIDAY ] [SL:TODO [IN:GET_TODO [SL:TODO THEATRE REHEARSAL ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY MONDAY ] [SL:DATE_TIME AT SEVEN PM ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "every Monday at 7 pm", "todo": "theater rehearsal", "date_time": "starting Friday"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00002723.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:SEND_MESSAGE shoot [SL:RECIPIENT Gail ] an email about [SL:CONTENT_EXACT [IN:GET_EVENT [SL:DATE_TIME tomorrows ] [SL:CATEGORY_EVENT meeting ] ] ] ] ] ]", "parameters": {}, "sentence": "Remind me to shoot Gail an email about tomorrows meeting", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "REMIND ME TO SHOOT GAIL AN EMAIL ABOUT TOMORROWS MEETING", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:SEND_MESSAGE SHOOT [SL:RECIPIENT GAIL ] AN EMAIL ABOUT [SL:CONTENT_EXACT [IN:GET_EVENT [SL:DATE_TIME TOMORROWS ] [SL:CATEGORY_EVENT MEETING ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00002723.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Remind me to shoot Gail an email about tomorrows meeting", "seqlogical": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:SEND_MESSAGE shoot [SL:RECIPIENT Gail ] an email about [SL:CONTENT_EXACT [IN:GET_EVENT [SL:DATE_TIME tomorrows ] [SL:CATEGORY_EVENT meeting ] ] ] ] ] ]", "normalized_utterance": "REMIND ME TO SHOOT GAIL AN EMAIL ABOUT TOMORROWS MEETING", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:SEND_MESSAGE SHOOT [SL:RECIPIENT GAIL ] AN EMAIL ABOUT [SL:CONTENT_EXACT [IN:GET_EVENT [SL:DATE_TIME TOMORROWS ] [SL:CATEGORY_EVENT MEETING ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:SEND_MESSAGE [SL:RECIPIENT GAIL ] [SL:CONTENT_EXACT [IN:GET_EVENT [SL:DATE_TIME TOMORROWS ] [SL:CATEGORY_EVENT MEETING ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "shoot Gail an email about tomorrow's meeting", "date_time": "tomorrow"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00003492.wav", "split": "test", "intent": "[IN:DELETE_REMINDER Dad isn't able to meet us for dinner tonight , so please delete [SL:PERSON_REMINDED our ] [SL:TODO [IN:GET_TODO [SL:TODO dinner ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION dad ] ] ] ] ] reminder . ]", "parameters": {}, "sentence": "Dad isn't able to meet us for dinner tonight, so please delete our dinner with dad reminder.", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "DAD ISN'T ABLE TO MEET US FOR DINNER TONIGHT SO PLEASE DELETE OUR DINNER WITH DAD REMINDER", "normalized_seqlogical": "[IN:DELETE_REMINDER DAD ISN'T ABLE TO MEET US FOR DINNER TONIGHT SO PLEASE DELETE [SL:PERSON_REMINDED OUR ] [SL:TODO [IN:GET_TODO [SL:TODO DINNER ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ] ] REMINDER ]", "raw_data": {"file_id": "test_0/reminder_test_0/00003492.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Dad isn't able to meet us for dinner tonight, so please delete our dinner with dad reminder.", "seqlogical": "[IN:DELETE_REMINDER Dad isn't able to meet us for dinner tonight , so please delete [SL:PERSON_REMINDED our ] [SL:TODO [IN:GET_TODO [SL:TODO dinner ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION dad ] ] ] ] ] reminder . ]", "normalized_utterance": "DAD ISN'T ABLE TO MEET US FOR DINNER TONIGHT SO PLEASE DELETE OUR DINNER WITH DAD REMINDER", "normalized_seqlogical": "[IN:DELETE_REMINDER DAD ISN'T ABLE TO MEET US FOR DINNER TONIGHT SO PLEASE DELETE [SL:PERSON_REMINDED OUR ] [SL:TODO [IN:GET_TODO [SL:TODO DINNER ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ] ] REMINDER ]", "decoupled_normalized_seqlogical": "[IN:DELETE_REMINDER [SL:PERSON_REMINDED OUR ] [SL:TODO [IN:GET_TODO [SL:TODO DINNER ] [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_reminder", "arguments": {"todo": "dinner with Dad"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00002035.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY everyday ] ] ] to [SL:TODO [IN:GET_TODO [SL:TODO take my medicine ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME at 7 pm ] [SL:FREQUENCY everyday ] ] ] ] ] ]", "parameters": {}, "sentence": "Remind me everyday to take my medicine at 7pm everyday", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "REMIND ME EVERYDAY TO TAKE MY MEDICINE AT SEVEN PM EVERYDAY", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERYDAY ] ] ] TO [SL:TODO [IN:GET_TODO [SL:TODO TAKE MY MEDICINE ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME AT SEVEN PM ] [SL:FREQUENCY EVERYDAY ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00002035.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Remind me everyday to take my medicine at 7pm everyday", "seqlogical": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY everyday ] ] ] to [SL:TODO [IN:GET_TODO [SL:TODO take my medicine ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME at 7 pm ] [SL:FREQUENCY everyday ] ] ] ] ] ]", "normalized_utterance": "REMIND ME EVERYDAY TO TAKE MY MEDICINE AT SEVEN PM EVERYDAY", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERYDAY ] ] ] TO [SL:TODO [IN:GET_TODO [SL:TODO TAKE MY MEDICINE ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME AT SEVEN PM ] [SL:FREQUENCY EVERYDAY ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERYDAY ] ] ] [SL:TODO [IN:GET_TODO [SL:TODO TAKE MY MEDICINE ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME AT SEVEN PM ] [SL:FREQUENCY EVERYDAY ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "every day", "todo": "take my medicine", "date_time": "7pm"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00000890.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO take the trash out ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Wednesday night ] ] ] ] ] . ]", "parameters": {}, "sentence": "Set up a weekly reminder to take the trash out every Wednesday night.", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "SET UP A WEEKLY REMINDER TO TAKE THE TRASH OUT EVERY WEDNESDAY NIGHT", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO TAKE THE TRASH OUT ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY WEDNESDAY NIGHT ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00000890.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Set up a weekly reminder to take the trash out every Wednesday night.", "seqlogical": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO take the trash out ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Wednesday night ] ] ] ] ] . ]", "normalized_utterance": "SET UP A WEEKLY REMINDER TO TAKE THE TRASH OUT EVERY WEDNESDAY NIGHT", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO TAKE THE TRASH OUT ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY WEDNESDAY NIGHT ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO [IN:GET_TODO [SL:TODO TAKE THE TRASH OUT ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY WEDNESDAY NIGHT ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "every Wednesday night", "todo": "take the trash out"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00000823.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO take medication ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every morning ] [SL:DATE_TIME at 6 ] ] ] ] ] . ]", "parameters": {}, "sentence": "Set up a weekly reminder to take medication every morning at 6.", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "SET UP A WEEKLY REMINDER TO TAKE MEDICATION EVERY MORNING AT SIX", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO TAKE MEDICATION ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY MORNING ] [SL:DATE_TIME AT SIX ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00000823.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Set up a weekly reminder to take medication every morning at 6.", "seqlogical": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO take medication ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every morning ] [SL:DATE_TIME at 6 ] ] ] ] ] . ]", "normalized_utterance": "SET UP A WEEKLY REMINDER TO TAKE MEDICATION EVERY MORNING AT SIX", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO TAKE MEDICATION ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY MORNING ] [SL:DATE_TIME AT SIX ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO [IN:GET_TODO [SL:TODO TAKE MEDICATION ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY MORNING ] [SL:DATE_TIME AT SIX ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "every morning", "todo": "take medication", "date_time": "6 AM"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00003236.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder for [SL:PERSON_REMINDED Jude ] to [SL:TODO [IN:GET_TODO [SL:TODO water my mom 's plants ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY everyday ] ] ] ] ] . ]", "parameters": {}, "sentence": "Set up a weekly reminder for Jude to water my mom's plants everyday.", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "SET UP A WEEKLY REMINDER FOR JUDE TO WATER MY MOM 'S PLANTS EVERYDAY", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER FOR [SL:PERSON_REMINDED JUDE ] TO [SL:TODO [IN:GET_TODO [SL:TODO WATER MY MOM 'S PLANTS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERYDAY ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00003236.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Set up a weekly reminder for Jude to water my mom's plants everyday.", "seqlogical": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder for [SL:PERSON_REMINDED Jude ] to [SL:TODO [IN:GET_TODO [SL:TODO water my mom 's plants ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY everyday ] ] ] ] ] . ]", "normalized_utterance": "SET UP A WEEKLY REMINDER FOR JUDE TO WATER MY MOM 'S PLANTS EVERYDAY", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER FOR [SL:PERSON_REMINDED JUDE ] TO [SL:TODO [IN:GET_TODO [SL:TODO WATER MY MOM 'S PLANTS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERYDAY ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:PERSON_REMINDED JUDE ] [SL:TODO [IN:GET_TODO [SL:TODO WATER MY MOM 'S PLANTS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERYDAY ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "Jude", "recurring_date_time": "every day", "todo": "water my mom's plants"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00003609.wav", "split": "test", "intent": "[IN:CREATE_REMINDER set up a reminder for [SL:TODO [IN:GET_TODO [SL:TODO trash ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Tuesday ] ] ] ] ] and [SL:TODO Recycle ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every other Wednesday ] ] ] ]", "parameters": {}, "sentence": "set up a reminder for trash every Tuesday and Recycle every other Wednesday", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "SET UP A REMINDER FOR TRASH EVERY TUESDAY AND RECYCLE EVERY OTHER WEDNESDAY", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A REMINDER FOR [SL:TODO [IN:GET_TODO [SL:TODO TRASH ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY TUESDAY ] ] ] ] ] AND [SL:TODO RECYCLE ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY OTHER WEDNESDAY ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00003609.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "set up a reminder for trash every Tuesday and Recycle every other Wednesday", "seqlogical": "[IN:CREATE_REMINDER set up a reminder for [SL:TODO [IN:GET_TODO [SL:TODO trash ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Tuesday ] ] ] ] ] and [SL:TODO Recycle ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every other Wednesday ] ] ] ]", "normalized_utterance": "SET UP A REMINDER FOR TRASH EVERY TUESDAY AND RECYCLE EVERY OTHER WEDNESDAY", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A REMINDER FOR [SL:TODO [IN:GET_TODO [SL:TODO TRASH ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY TUESDAY ] ] ] ] ] AND [SL:TODO RECYCLE ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY OTHER WEDNESDAY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:TODO [IN:GET_TODO [SL:TODO TRASH ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY TUESDAY ] ] ] ] ] [SL:TODO RECYCLE ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY OTHER WEDNESDAY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "every Tuesday", "todo": "trash"}}, {"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "every other Wednesday", "todo": "recycle"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00003577.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY monthly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE email [SL:RECIPIENT the team ] about [SL:CONTENT_EXACT status updates ] ] ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME on the first Friday ] of [SL:FREQUENCY every month ] ] ] ] ] . ]", "parameters": {}, "sentence": "Set up a monthly reminder to email the team about status updates on the first Friday of every month.", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "SET UP A MONTHLY REMINDER TO EMAIL THE TEAM ABOUT STATUS UPDATES ON THE FIRST FRIDAY OF EVERY MONTH", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY MONTHLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE EMAIL [SL:RECIPIENT THE TEAM ] ABOUT [SL:CONTENT_EXACT STATUS UPDATES ] ] ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME ON THE FIRST FRIDAY ] OF [SL:FREQUENCY EVERY MONTH ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00003577.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Set up a monthly reminder to email the team about status updates on the first Friday of every month.", "seqlogical": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY monthly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE email [SL:RECIPIENT the team ] about [SL:CONTENT_EXACT status updates ] ] ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME on the first Friday ] of [SL:FREQUENCY every month ] ] ] ] ] . ]", "normalized_utterance": "SET UP A MONTHLY REMINDER TO EMAIL THE TEAM ABOUT STATUS UPDATES ON THE FIRST FRIDAY OF EVERY MONTH", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY MONTHLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE EMAIL [SL:RECIPIENT THE TEAM ] ABOUT [SL:CONTENT_EXACT STATUS UPDATES ] ] ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME ON THE FIRST FRIDAY ] OF [SL:FREQUENCY EVERY MONTH ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY MONTHLY ] ] ] [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE [SL:RECIPIENT THE TEAM ] [SL:CONTENT_EXACT STATUS UPDATES ] ] ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME ON THE FIRST FRIDAY ] [SL:FREQUENCY EVERY MONTH ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "the first Friday of every month", "todo": "email the team about status updates"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00001875.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder for [SL:PERSON_REMINDED Moses ] to [SL:TODO [IN:GET_TODO [SL:TODO study for his exam ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Tuesday ] [SL:DATE_TIME morning ] ] ] ] ] . ]", "parameters": {}, "sentence": "Set up a weekly reminder for Moses to study for his exam every Tuesday morning.", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "SET UP A WEEKLY REMINDER FOR MOSES TO STUDY FOR HIS EXAM EVERY TUESDAY MORNING", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER FOR [SL:PERSON_REMINDED MOSES ] TO [SL:TODO [IN:GET_TODO [SL:TODO STUDY FOR HIS EXAM ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY TUESDAY ] [SL:DATE_TIME MORNING ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00001875.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Set up a weekly reminder for Moses to study for his exam every Tuesday morning.", "seqlogical": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder for [SL:PERSON_REMINDED Moses ] to [SL:TODO [IN:GET_TODO [SL:TODO study for his exam ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Tuesday ] [SL:DATE_TIME morning ] ] ] ] ] . ]", "normalized_utterance": "SET UP A WEEKLY REMINDER FOR MOSES TO STUDY FOR HIS EXAM EVERY TUESDAY MORNING", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER FOR [SL:PERSON_REMINDED MOSES ] TO [SL:TODO [IN:GET_TODO [SL:TODO STUDY FOR HIS EXAM ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY TUESDAY ] [SL:DATE_TIME MORNING ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:PERSON_REMINDED MOSES ] [SL:TODO [IN:GET_TODO [SL:TODO STUDY FOR HIS EXAM ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY TUESDAY ] [SL:DATE_TIME MORNING ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "Moses", "recurring_date_time": "every Tuesday morning", "todo": "study his exam"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00000343.wav", "split": "test", "intent": "[IN:CREATE_REMINDER remind [SL:PERSON_REMINDED me ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] to [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE e - mail [SL:CONTENT_EXACT my hours for the month ] ] ] [SL:DATE_TIME by the 30th ] ] ] ]", "parameters": {}, "sentence": "remind me weekly to e-mail my hours for the month by the 30th", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "REMIND ME WEEKLY TO E MAIL MY HOURS FOR THE MONTH BY THE THIRTIETH", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] TO [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE E MAIL [SL:CONTENT_EXACT MY HOURS FOR THE MONTH ] ] ] [SL:DATE_TIME BY THE THIRTIETH ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00000343.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "remind me weekly to e-mail my hours for the month by the 30th", "seqlogical": "[IN:CREATE_REMINDER remind [SL:PERSON_REMINDED me ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] to [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE e - mail [SL:CONTENT_EXACT my hours for the month ] ] ] [SL:DATE_TIME by the 30th ] ] ] ]", "normalized_utterance": "REMIND ME WEEKLY TO E MAIL MY HOURS FOR THE MONTH BY THE THIRTIETH", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] TO [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE E MAIL [SL:CONTENT_EXACT MY HOURS FOR THE MONTH ] ] ] [SL:DATE_TIME BY THE THIRTIETH ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE [SL:CONTENT_EXACT MY HOURS FOR THE MONTH ] ] ] [SL:DATE_TIME BY THE THIRTIETH ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "weekly", "todo": "email my hours for the month by the 30th"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00000669.wav", "split": "test", "intent": "[IN:CREATE_REMINDER remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE send email to [SL:RECIPIENT Aaron ] ] ] about [SL:TODO the game ] ] ] [SL:DATE_TIME on friday night ] ]", "parameters": {}, "sentence": "remind me to send email to Aaron about the game on friday night", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "REMIND ME TO SEND EMAIL TO AARON ABOUT THE GAME ON FRIDAY NIGHT", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE SEND EMAIL TO [SL:RECIPIENT AARON ] ] ] ABOUT [SL:TODO THE GAME ] ] ] [SL:DATE_TIME ON FRIDAY NIGHT ] ]", "raw_data": {"file_id": "test_1/reminder_test/00000669.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "remind me to send email to Aaron about the game on friday night", "seqlogical": "[IN:CREATE_REMINDER remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE send email to [SL:RECIPIENT Aaron ] ] ] about [SL:TODO the game ] ] ] [SL:DATE_TIME on friday night ] ]", "normalized_utterance": "REMIND ME TO SEND EMAIL TO AARON ABOUT THE GAME ON FRIDAY NIGHT", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE SEND EMAIL TO [SL:RECIPIENT AARON ] ] ] ABOUT [SL:TODO THE GAME ] ] ] [SL:DATE_TIME ON FRIDAY NIGHT ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE [SL:RECIPIENT AARON ] ] ] [SL:TODO THE GAME ] ] ] [SL:DATE_TIME ON FRIDAY NIGHT ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "send email to Erin about the game", "date_time": "Friday night"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00001892.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO water the plants ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Tuesday ] and [SL:FREQUENCY Thursday ] [SL:DATE_TIME at 10 am ] ] ] ] ] . ]", "parameters": {}, "sentence": "Set up a weekly reminder to water the plants every Tuesday and Thursday at 10am.", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "SET UP A WEEKLY REMINDER TO WATER THE PLANTS EVERY TUESDAY AND THURSDAY AT TEN AM", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO WATER THE PLANTS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY TUESDAY ] AND [SL:FREQUENCY THURSDAY ] [SL:DATE_TIME AT TEN AM ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00001892.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Set up a weekly reminder to water the plants every Tuesday and Thursday at 10am.", "seqlogical": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO water the plants ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Tuesday ] and [SL:FREQUENCY Thursday ] [SL:DATE_TIME at 10 am ] ] ] ] ] . ]", "normalized_utterance": "SET UP A WEEKLY REMINDER TO WATER THE PLANTS EVERY TUESDAY AND THURSDAY AT TEN AM", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO WATER THE PLANTS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY TUESDAY ] AND [SL:FREQUENCY THURSDAY ] [SL:DATE_TIME AT TEN AM ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO [IN:GET_TODO [SL:TODO WATER THE PLANTS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY TUESDAY ] [SL:FREQUENCY THURSDAY ] [SL:DATE_TIME AT TEN AM ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "every Tuesday and Thursday at 10 AM", "todo": "water the plants"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00001892.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO water the plants ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Tuesday ] and [SL:FREQUENCY Thursday ] [SL:DATE_TIME at 10 am ] ] ] ] ] . ]", "parameters": {}, "sentence": "Set up a weekly reminder to water the plants every Tuesday and Thursday at 10am.", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "SET UP A WEEKLY REMINDER TO WATER THE PLANTS EVERY TUESDAY AND THURSDAY AT TEN AM", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO WATER THE PLANTS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY TUESDAY ] AND [SL:FREQUENCY THURSDAY ] [SL:DATE_TIME AT TEN AM ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00001892.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Set up a weekly reminder to water the plants every Tuesday and Thursday at 10am.", "seqlogical": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO water the plants ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Tuesday ] and [SL:FREQUENCY Thursday ] [SL:DATE_TIME at 10 am ] ] ] ] ] . ]", "normalized_utterance": "SET UP A WEEKLY REMINDER TO WATER THE PLANTS EVERY TUESDAY AND THURSDAY AT TEN AM", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO WATER THE PLANTS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY TUESDAY ] AND [SL:FREQUENCY THURSDAY ] [SL:DATE_TIME AT TEN AM ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO [IN:GET_TODO [SL:TODO WATER THE PLANTS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY TUESDAY ] [SL:FREQUENCY THURSDAY ] [SL:DATE_TIME AT TEN AM ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "every Tuesday and Thursday at 10 AM", "todo": "water the plants"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00000352.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO schedule a barbecue ] [SL:DATE_TIME for next weekend ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION friends ] ] ] ] ] . ]", "parameters": {}, "sentence": "Remind me to schedule a barbecue for next weekend with friends.", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "REMIND ME TO SCHEDULE A BARBECUE FOR NEXT WEEKEND WITH FRIENDS", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO SCHEDULE A BARBECUE ] [SL:DATE_TIME FOR NEXT WEEKEND ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION FRIENDS ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00000352.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Remind me to schedule a barbecue for next weekend with friends.", "seqlogical": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO schedule a barbecue ] [SL:DATE_TIME for next weekend ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION friends ] ] ] ] ] . ]", "normalized_utterance": "REMIND ME TO SCHEDULE A BARBECUE FOR NEXT WEEKEND WITH FRIENDS", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO SCHEDULE A BARBECUE ] [SL:DATE_TIME FOR NEXT WEEKEND ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION FRIENDS ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:GET_TODO [SL:TODO SCHEDULE A BARBECUE ] [SL:DATE_TIME FOR NEXT WEEKEND ] [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION FRIENDS ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "schedule a barbecue with friends", "date_time": "next weekend"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00003112.wav", "split": "test", "intent": "[IN:DELETE_REMINDER Delete [SL:DATE_TIME tomorrow ] 's reminder for [SL:TODO [IN:GET_TODO [SL:TODO dinner ] with [SL:ATTENDEE Bob ] and [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED his ] [SL:TYPE_RELATION wife ] ] ] ] ] . ]", "parameters": {}, "sentence": "Delete tomorrow's reminder for dinner with Bob and his wife.", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "DELETE TOMORROW 'S REMINDER FOR DINNER WITH BOB AND HIS WIFE", "normalized_seqlogical": "[IN:DELETE_REMINDER DELETE [SL:DATE_TIME TOMORROW ] 'S REMINDER FOR [SL:TODO [IN:GET_TODO [SL:TODO DINNER ] WITH [SL:ATTENDEE BOB ] AND [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED HIS ] [SL:TYPE_RELATION WIFE ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00003112.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Delete tomorrow's reminder for dinner with Bob and his wife.", "seqlogical": "[IN:DELETE_REMINDER Delete [SL:DATE_TIME tomorrow ] 's reminder for [SL:TODO [IN:GET_TODO [SL:TODO dinner ] with [SL:ATTENDEE Bob ] and [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED his ] [SL:TYPE_RELATION wife ] ] ] ] ] . ]", "normalized_utterance": "DELETE TOMORROW 'S REMINDER FOR DINNER WITH BOB AND HIS WIFE", "normalized_seqlogical": "[IN:DELETE_REMINDER DELETE [SL:DATE_TIME TOMORROW ] 'S REMINDER FOR [SL:TODO [IN:GET_TODO [SL:TODO DINNER ] WITH [SL:ATTENDEE BOB ] AND [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED HIS ] [SL:TYPE_RELATION WIFE ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_REMINDER [SL:DATE_TIME TOMORROW ] [SL:TODO [IN:GET_TODO [SL:TODO DINNER ] [SL:ATTENDEE BOB ] [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED HIS ] [SL:TYPE_RELATION WIFE ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_reminder", "arguments": {"date_time": "tomorrow", "todo": "dinner with Bob and his wife"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00005367.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Can you create a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder starting [SL:DATE_TIME Friday ] for [SL:TODO [IN:GET_TODO [SL:TODO theatre rehearsal ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Monday ] [SL:DATE_TIME at 7 pm ] ] ] ] ] ]", "parameters": {}, "sentence": "Can you create a weekly reminder starting Friday for theatre rehearsal every Monday at 7 pm", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "CAN YOU CREATE A WEEKLY REMINDER STARTING FRIDAY FOR THEATRE REHEARSAL EVERY MONDAY AT SEVEN PM", "normalized_seqlogical": "[IN:CREATE_REMINDER CAN YOU CREATE A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER STARTING [SL:DATE_TIME FRIDAY ] FOR [SL:TODO [IN:GET_TODO [SL:TODO THEATRE REHEARSAL ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY MONDAY ] [SL:DATE_TIME AT SEVEN PM ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00005367.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Can you create a weekly reminder starting Friday for theatre rehearsal every Monday at 7 pm", "seqlogical": "[IN:CREATE_REMINDER Can you create a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder starting [SL:DATE_TIME Friday ] for [SL:TODO [IN:GET_TODO [SL:TODO theatre rehearsal ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Monday ] [SL:DATE_TIME at 7 pm ] ] ] ] ] ]", "normalized_utterance": "CAN YOU CREATE A WEEKLY REMINDER STARTING FRIDAY FOR THEATRE REHEARSAL EVERY MONDAY AT SEVEN PM", "normalized_seqlogical": "[IN:CREATE_REMINDER CAN YOU CREATE A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER STARTING [SL:DATE_TIME FRIDAY ] FOR [SL:TODO [IN:GET_TODO [SL:TODO THEATRE REHEARSAL ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY MONDAY ] [SL:DATE_TIME AT SEVEN PM ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:DATE_TIME FRIDAY ] [SL:TODO [IN:GET_TODO [SL:TODO THEATRE REHEARSAL ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY MONDAY ] [SL:DATE_TIME AT SEVEN PM ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "every Monday at 7 PM", "todo": "theater rehearsal", "date_time": "starting Friday"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00003887.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY daily ] ] ] reminder for [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO set out my clothes ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every night ] [SL:DATE_TIME at 7 pm ] ] ] ] ] . ]", "parameters": {}, "sentence": "Set a daily reminder for me to set out my clothes every night at 7 pm.", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "SET A DAILY REMINDER FOR ME TO SET OUT MY CLOTHES EVERY NIGHT AT SEVEN PM", "normalized_seqlogical": "[IN:CREATE_REMINDER SET A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY DAILY ] ] ] REMINDER FOR [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO SET OUT MY CLOTHES ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY NIGHT ] [SL:DATE_TIME AT SEVEN PM ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00003887.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Set a daily reminder for me to set out my clothes every night at 7 pm.", "seqlogical": "[IN:CREATE_REMINDER Set a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY daily ] ] ] reminder for [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO set out my clothes ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every night ] [SL:DATE_TIME at 7 pm ] ] ] ] ] . ]", "normalized_utterance": "SET A DAILY REMINDER FOR ME TO SET OUT MY CLOTHES EVERY NIGHT AT SEVEN PM", "normalized_seqlogical": "[IN:CREATE_REMINDER SET A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY DAILY ] ] ] REMINDER FOR [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO SET OUT MY CLOTHES ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY NIGHT ] [SL:DATE_TIME AT SEVEN PM ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY DAILY ] ] ] [SL:PERSON_REMINDED ME ] [SL:TODO [IN:GET_TODO [SL:TODO SET OUT MY CLOTHES ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY NIGHT ] [SL:DATE_TIME AT SEVEN PM ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "set out my clothes every night", "recurring_date_time": "daily", "date_time": "7pm"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00003803.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Please set a reminder to [SL:TODO [IN:GET_TODO [SL:TODO make a dental appointment ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every 4 months ] ] ] [SL:TODO for a cleaning ] ] ] . ]", "parameters": {}, "sentence": "Please set a reminder to make a dental appointment every 4 months for a cleaning.", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "PLEASE SET A REMINDER TO MAKE A DENTAL APPOINTMENT EVERY FOUR MONTHS FOR A CLEANING", "normalized_seqlogical": "[IN:CREATE_REMINDER PLEASE SET A REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO MAKE A DENTAL APPOINTMENT ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY FOUR MONTHS ] ] ] [SL:TODO FOR A CLEANING ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00003803.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Please set a reminder to make a dental appointment every 4 months for a cleaning.", "seqlogical": "[IN:CREATE_REMINDER Please set a reminder to [SL:TODO [IN:GET_TODO [SL:TODO make a dental appointment ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every 4 months ] ] ] [SL:TODO for a cleaning ] ] ] . ]", "normalized_utterance": "PLEASE SET A REMINDER TO MAKE A DENTAL APPOINTMENT EVERY FOUR MONTHS FOR A CLEANING", "normalized_seqlogical": "[IN:CREATE_REMINDER PLEASE SET A REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO MAKE A DENTAL APPOINTMENT ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY FOUR MONTHS ] ] ] [SL:TODO FOR A CLEANING ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:TODO [IN:GET_TODO [SL:TODO MAKE A DENTAL APPOINTMENT ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY FOUR MONTHS ] ] ] [SL:TODO FOR A CLEANING ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "every four months", "todo": "make a dental appointment for a cleaning"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00003544.wav", "split": "test", "intent": "[IN:CREATE_REMINDER reminder set for [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY daily ] ] ] [SL:TODO show ] ] ] [SL:DATE_TIME all week and next ] ]", "parameters": {}, "sentence": "reminder set for daily show all week and next", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "REMINDER SET FOR DAILY SHOW ALL WEEK AND NEXT", "normalized_seqlogical": "[IN:CREATE_REMINDER REMINDER SET FOR [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY DAILY ] ] ] [SL:TODO SHOW ] ] ] [SL:DATE_TIME ALL WEEK AND NEXT ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00003544.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "reminder set for daily show all week and next", "seqlogical": "[IN:CREATE_REMINDER reminder set for [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY daily ] ] ] [SL:TODO show ] ] ] [SL:DATE_TIME all week and next ] ]", "normalized_utterance": "REMINDER SET FOR DAILY SHOW ALL WEEK AND NEXT", "normalized_seqlogical": "[IN:CREATE_REMINDER REMINDER SET FOR [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY DAILY ] ] ] [SL:TODO SHOW ] ] ] [SL:DATE_TIME ALL WEEK AND NEXT ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY DAILY ] ] ] [SL:TODO SHOW ] ] ] [SL:DATE_TIME ALL WEEK AND NEXT ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "Daily Show", "recurring_date_time": "all week"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00003671.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Please remind [SL:PERSON_REMINDED me ] [SL:DATE_TIME 45 minutes before ] [SL:TODO [IN:GET_TODO my [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] [SL:TODO dance class ] ] ] . ]", "parameters": {}, "sentence": "Please remind me 45 minutes before my weekly dance class.", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "PLEASE REMIND ME FORTY FIVE MINUTES BEFORE MY WEEKLY DANCE CLASS", "normalized_seqlogical": "[IN:CREATE_REMINDER PLEASE REMIND [SL:PERSON_REMINDED ME ] [SL:DATE_TIME FORTY FIVE MINUTES BEFORE ] [SL:TODO [IN:GET_TODO MY [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO DANCE CLASS ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00003671.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Please remind me 45 minutes before my weekly dance class.", "seqlogical": "[IN:CREATE_REMINDER Please remind [SL:PERSON_REMINDED me ] [SL:DATE_TIME 45 minutes before ] [SL:TODO [IN:GET_TODO my [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] [SL:TODO dance class ] ] ] . ]", "normalized_utterance": "PLEASE REMIND ME FORTY FIVE MINUTES BEFORE MY WEEKLY DANCE CLASS", "normalized_seqlogical": "[IN:CREATE_REMINDER PLEASE REMIND [SL:PERSON_REMINDED ME ] [SL:DATE_TIME FORTY FIVE MINUTES BEFORE ] [SL:TODO [IN:GET_TODO MY [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO DANCE CLASS ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:DATE_TIME FORTY FIVE MINUTES BEFORE ] [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO DANCE CLASS ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "weekly dance class", "date_time": "45 minutes before"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00003803.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Please set a reminder to [SL:TODO [IN:GET_TODO [SL:TODO make a dental appointment ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every 4 months ] ] ] [SL:TODO for a cleaning ] ] ] . ]", "parameters": {}, "sentence": "Please set a reminder to make a dental appointment every 4 months for a cleaning.", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "PLEASE SET A REMINDER TO MAKE A DENTAL APPOINTMENT EVERY FOUR MONTHS FOR A CLEANING", "normalized_seqlogical": "[IN:CREATE_REMINDER PLEASE SET A REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO MAKE A DENTAL APPOINTMENT ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY FOUR MONTHS ] ] ] [SL:TODO FOR A CLEANING ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00003803.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Please set a reminder to make a dental appointment every 4 months for a cleaning.", "seqlogical": "[IN:CREATE_REMINDER Please set a reminder to [SL:TODO [IN:GET_TODO [SL:TODO make a dental appointment ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every 4 months ] ] ] [SL:TODO for a cleaning ] ] ] . ]", "normalized_utterance": "PLEASE SET A REMINDER TO MAKE A DENTAL APPOINTMENT EVERY FOUR MONTHS FOR A CLEANING", "normalized_seqlogical": "[IN:CREATE_REMINDER PLEASE SET A REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO MAKE A DENTAL APPOINTMENT ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY FOUR MONTHS ] ] ] [SL:TODO FOR A CLEANING ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:TODO [IN:GET_TODO [SL:TODO MAKE A DENTAL APPOINTMENT ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY FOUR MONTHS ] ] ] [SL:TODO FOR A CLEANING ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "every four months", "todo": "make a dental appointment for a cleaning"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00003129.wav", "split": "test", "intent": "[IN:CREATE_REMINDER remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO catch up on the walking dead ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every evening ] [SL:DATE_TIME at 7 ] ] ] to [SL:TODO catch up before the new season starts ] ] ] ]", "parameters": {}, "sentence": "remind me to catch up on the walking dead every evening at 7 to catch up before the new season starts", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "REMIND ME TO CATCH UP ON THE WALKING DEAD EVERY EVENING AT SEVEN TO CATCH UP BEFORE THE NEW SEASON STARTS", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO CATCH UP ON THE WALKING DEAD ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY EVENING ] [SL:DATE_TIME AT SEVEN ] ] ] TO [SL:TODO CATCH UP BEFORE THE NEW SEASON STARTS ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00003129.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "remind me to catch up on the walking dead every evening at 7 to catch up before the new season starts", "seqlogical": "[IN:CREATE_REMINDER remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO catch up on the walking dead ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every evening ] [SL:DATE_TIME at 7 ] ] ] to [SL:TODO catch up before the new season starts ] ] ] ]", "normalized_utterance": "REMIND ME TO CATCH UP ON THE WALKING DEAD EVERY EVENING AT SEVEN TO CATCH UP BEFORE THE NEW SEASON STARTS", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO CATCH UP ON THE WALKING DEAD ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY EVENING ] [SL:DATE_TIME AT SEVEN ] ] ] TO [SL:TODO CATCH UP BEFORE THE NEW SEASON STARTS ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:GET_TODO [SL:TODO CATCH UP ON THE WALKING DEAD ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY EVENING ] [SL:DATE_TIME AT SEVEN ] ] ] [SL:TODO CATCH UP BEFORE THE NEW SEASON STARTS ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "catch up on The Walking Dead", "recurring_date_time": "every evening at seven"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00002537.wav", "split": "test", "intent": "[IN:DELETE_REMINDER Remove [SL:PERSON_REMINDED my ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO take my trash out ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Thursday night ] [SL:DATE_TIME for the remaining of this month ] ] ] ] ] leave the one for next month alone ]", "parameters": {}, "sentence": "Remove my reminder to take my trash out every Thursday night for the remaining of this month leave the one for next month alone", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "REMOVE MY REMINDER TO TAKE MY TRASH OUT EVERY THURSDAY NIGHT FOR THE REMAINING OF THIS MONTH LEAVE THE ONE FOR NEXT MONTH ALONE", "normalized_seqlogical": "[IN:DELETE_REMINDER REMOVE [SL:PERSON_REMINDED MY ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO TAKE MY TRASH OUT ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY THURSDAY NIGHT ] [SL:DATE_TIME FOR THE REMAINING OF THIS MONTH ] ] ] ] ] LEAVE THE ONE FOR NEXT MONTH ALONE ]", "raw_data": {"file_id": "test_1/reminder_test/00002537.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Remove my reminder to take my trash out every Thursday night for the remaining of this month leave the one for next month alone", "seqlogical": "[IN:DELETE_REMINDER Remove [SL:PERSON_REMINDED my ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO take my trash out ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Thursday night ] [SL:DATE_TIME for the remaining of this month ] ] ] ] ] leave the one for next month alone ]", "normalized_utterance": "REMOVE MY REMINDER TO TAKE MY TRASH OUT EVERY THURSDAY NIGHT FOR THE REMAINING OF THIS MONTH LEAVE THE ONE FOR NEXT MONTH ALONE", "normalized_seqlogical": "[IN:DELETE_REMINDER REMOVE [SL:PERSON_REMINDED MY ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO TAKE MY TRASH OUT ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY THURSDAY NIGHT ] [SL:DATE_TIME FOR THE REMAINING OF THIS MONTH ] ] ] ] ] LEAVE THE ONE FOR NEXT MONTH ALONE ]", "decoupled_normalized_seqlogical": "[IN:DELETE_REMINDER [SL:PERSON_REMINDED MY ] [SL:TODO [IN:GET_TODO [SL:TODO TAKE MY TRASH OUT ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY THURSDAY NIGHT ] [SL:DATE_TIME FOR THE REMAINING OF THIS MONTH ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_reminder", "arguments": {"recurring_date_time": "every Thursday night for the remaining of this month", "todo": "take my trash out"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00003806.wav", "split": "test", "intent": "[IN:DELETE_REMINDER Delete reminder of [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY monthly ] ] ] [SL:TODO meeting ] ] ] [SL:DATE_TIME this month only ] ]", "parameters": {}, "sentence": "Delete reminder of monthly meeting this month only", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "DELETE REMINDER OF MONTHLY MEETING THIS MONTH ONLY", "normalized_seqlogical": "[IN:DELETE_REMINDER DELETE REMINDER OF [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY MONTHLY ] ] ] [SL:TODO MEETING ] ] ] [SL:DATE_TIME THIS MONTH ONLY ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00003806.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Delete reminder of monthly meeting this month only", "seqlogical": "[IN:DELETE_REMINDER Delete reminder of [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY monthly ] ] ] [SL:TODO meeting ] ] ] [SL:DATE_TIME this month only ] ]", "normalized_utterance": "DELETE REMINDER OF MONTHLY MEETING THIS MONTH ONLY", "normalized_seqlogical": "[IN:DELETE_REMINDER DELETE REMINDER OF [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY MONTHLY ] ] ] [SL:TODO MEETING ] ] ] [SL:DATE_TIME THIS MONTH ONLY ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_REMINDER [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY MONTHLY ] ] ] [SL:TODO MEETING ] ] ] [SL:DATE_TIME THIS MONTH ONLY ] ]"}, "prediction": "", "function_calls": [{"name": "delete_reminder", "arguments": {"todo": "monthly meeting", "date_time": "this month"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00002508.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set a reminder to [SL:TODO [IN:SEND_MESSAGE text [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Mom ] ] ] about [SL:CONTENT_EXACT [IN:GET_EVENT [SL:CATEGORY_EVENT the birthday party ] ] ] ] ] [SL:DATE_TIME tomorrow ] . ]", "parameters": {}, "sentence": "Set a reminder to text Mom about the birthday party tomorrow.", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "SET A REMINDER TO TEXT MOM ABOUT THE BIRTHDAY PARTY TOMORROW", "normalized_seqlogical": "[IN:CREATE_REMINDER SET A REMINDER TO [SL:TODO [IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] ABOUT [SL:CONTENT_EXACT [IN:GET_EVENT [SL:CATEGORY_EVENT THE BIRTHDAY PARTY ] ] ] ] ] [SL:DATE_TIME TOMORROW ] ]", "raw_data": {"file_id": "test_1/reminder_test/00002508.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Set a reminder to text Mom about the birthday party tomorrow.", "seqlogical": "[IN:CREATE_REMINDER Set a reminder to [SL:TODO [IN:SEND_MESSAGE text [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Mom ] ] ] about [SL:CONTENT_EXACT [IN:GET_EVENT [SL:CATEGORY_EVENT the birthday party ] ] ] ] ] [SL:DATE_TIME tomorrow ] . ]", "normalized_utterance": "SET A REMINDER TO TEXT MOM ABOUT THE BIRTHDAY PARTY TOMORROW", "normalized_seqlogical": "[IN:CREATE_REMINDER SET A REMINDER TO [SL:TODO [IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] ABOUT [SL:CONTENT_EXACT [IN:GET_EVENT [SL:CATEGORY_EVENT THE BIRTHDAY PARTY ] ] ] ] ] [SL:DATE_TIME TOMORROW ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:TODO [IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT [IN:GET_EVENT [SL:CATEGORY_EVENT THE BIRTHDAY PARTY ] ] ] ] ] [SL:DATE_TIME TOMORROW ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "text Mom about the birthday party", "date_time": "tomorrow"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00003236.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder for [SL:PERSON_REMINDED Jude ] to [SL:TODO [IN:GET_TODO [SL:TODO water my mom 's plants ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY everyday ] ] ] ] ] . ]", "parameters": {}, "sentence": "Set up a weekly reminder for Jude to water my mom's plants everyday.", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "SET UP A WEEKLY REMINDER FOR JUDE TO WATER MY MOM 'S PLANTS EVERYDAY", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER FOR [SL:PERSON_REMINDED JUDE ] TO [SL:TODO [IN:GET_TODO [SL:TODO WATER MY MOM 'S PLANTS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERYDAY ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00003236.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Set up a weekly reminder for Jude to water my mom's plants everyday.", "seqlogical": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder for [SL:PERSON_REMINDED Jude ] to [SL:TODO [IN:GET_TODO [SL:TODO water my mom 's plants ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY everyday ] ] ] ] ] . ]", "normalized_utterance": "SET UP A WEEKLY REMINDER FOR JUDE TO WATER MY MOM 'S PLANTS EVERYDAY", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER FOR [SL:PERSON_REMINDED JUDE ] TO [SL:TODO [IN:GET_TODO [SL:TODO WATER MY MOM 'S PLANTS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERYDAY ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:PERSON_REMINDED JUDE ] [SL:TODO [IN:GET_TODO [SL:TODO WATER MY MOM 'S PLANTS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERYDAY ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "Jude", "recurring_date_time": "every day", "todo": "water my mom's plants"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00000522.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set a reminder for [SL:TODO [IN:GET_TODO [SL:TODO dinner ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:MUTUAL_SCHOOL college ] [SL:TYPE_RELATION friends ] ] ] ] ] [SL:DATE_TIME tonight at 7 pm ] . ]", "parameters": {}, "sentence": "Set a reminder for dinner with college friends tonight at 7 pm.", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "SET A REMINDER FOR DINNER WITH COLLEGE FRIENDS TONIGHT AT SEVEN PM", "normalized_seqlogical": "[IN:CREATE_REMINDER SET A REMINDER FOR [SL:TODO [IN:GET_TODO [SL:TODO DINNER ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:MUTUAL_SCHOOL COLLEGE ] [SL:TYPE_RELATION FRIENDS ] ] ] ] ] [SL:DATE_TIME TONIGHT AT SEVEN PM ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00000522.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Set a reminder for dinner with college friends tonight at 7 pm.", "seqlogical": "[IN:CREATE_REMINDER Set a reminder for [SL:TODO [IN:GET_TODO [SL:TODO dinner ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:MUTUAL_SCHOOL college ] [SL:TYPE_RELATION friends ] ] ] ] ] [SL:DATE_TIME tonight at 7 pm ] . ]", "normalized_utterance": "SET A REMINDER FOR DINNER WITH COLLEGE FRIENDS TONIGHT AT SEVEN PM", "normalized_seqlogical": "[IN:CREATE_REMINDER SET A REMINDER FOR [SL:TODO [IN:GET_TODO [SL:TODO DINNER ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:MUTUAL_SCHOOL COLLEGE ] [SL:TYPE_RELATION FRIENDS ] ] ] ] ] [SL:DATE_TIME TONIGHT AT SEVEN PM ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:TODO [IN:GET_TODO [SL:TODO DINNER ] [SL:ATTENDEE [IN:GET_CONTACT [SL:MUTUAL_SCHOOL COLLEGE ] [SL:TYPE_RELATION FRIENDS ] ] ] ] ] [SL:DATE_TIME TONIGHT AT SEVEN PM ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "dinner with college friends", "date_time": "tonight at 7 PM"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00000226.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE email [SL:RECIPIENT Jim ] ] ] [SL:DATE_TIME this afternoon at 2 ] [SL:TODO about my doctor appointment ] ] ] . ]", "parameters": {}, "sentence": "Remind me to email Jim this afternoon at 2 about my doctor appointment.", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "REMIND ME TO EMAIL JIM THIS AFTERNOON AT TWO ABOUT MY DOCTOR APPOINTMENT", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE EMAIL [SL:RECIPIENT JIM ] ] ] [SL:DATE_TIME THIS AFTERNOON AT TWO ] [SL:TODO ABOUT MY DOCTOR APPOINTMENT ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00000226.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Remind me to email Jim this afternoon at 2 about my doctor appointment.", "seqlogical": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE email [SL:RECIPIENT Jim ] ] ] [SL:DATE_TIME this afternoon at 2 ] [SL:TODO about my doctor appointment ] ] ] . ]", "normalized_utterance": "REMIND ME TO EMAIL JIM THIS AFTERNOON AT TWO ABOUT MY DOCTOR APPOINTMENT", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE EMAIL [SL:RECIPIENT JIM ] ] ] [SL:DATE_TIME THIS AFTERNOON AT TWO ] [SL:TODO ABOUT MY DOCTOR APPOINTMENT ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE [SL:RECIPIENT JIM ] ] ] [SL:DATE_TIME THIS AFTERNOON AT TWO ] [SL:TODO ABOUT MY DOCTOR APPOINTMENT ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "email Jim about my doctor appointment", "date_time": "this afternoon at 2"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00003306.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set a reminder [SL:DATE_TIME for 10 minutes before ] [SL:TODO [IN:GET_TODO [SL:TODO Yellowstone starts ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME at 10 o'clock ] for [SL:FREQUENCY every Wednesday ] ] ] ] ] . ]", "parameters": {}, "sentence": "Set a reminder for 10 minutes before Yellowstone starts at 10 o'clock for every Wednesday.", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "SET A REMINDER FOR TEN MINUTES BEFORE YELLOWSTONE STARTS AT TEN O'CLOCK FOR EVERY WEDNESDAY", "normalized_seqlogical": "[IN:CREATE_REMINDER SET A REMINDER [SL:DATE_TIME FOR TEN MINUTES BEFORE ] [SL:TODO [IN:GET_TODO [SL:TODO YELLOWSTONE STARTS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME AT TEN O'CLOCK ] FOR [SL:FREQUENCY EVERY WEDNESDAY ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00003306.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Set a reminder for 10 minutes before Yellowstone starts at 10 o'clock for every Wednesday.", "seqlogical": "[IN:CREATE_REMINDER Set a reminder [SL:DATE_TIME for 10 minutes before ] [SL:TODO [IN:GET_TODO [SL:TODO Yellowstone starts ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME at 10 o'clock ] for [SL:FREQUENCY every Wednesday ] ] ] ] ] . ]", "normalized_utterance": "SET A REMINDER FOR TEN MINUTES BEFORE YELLOWSTONE STARTS AT TEN O'CLOCK FOR EVERY WEDNESDAY", "normalized_seqlogical": "[IN:CREATE_REMINDER SET A REMINDER [SL:DATE_TIME FOR TEN MINUTES BEFORE ] [SL:TODO [IN:GET_TODO [SL:TODO YELLOWSTONE STARTS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME AT TEN O'CLOCK ] FOR [SL:FREQUENCY EVERY WEDNESDAY ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:DATE_TIME FOR TEN MINUTES BEFORE ] [SL:TODO [IN:GET_TODO [SL:TODO YELLOWSTONE STARTS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME AT TEN O'CLOCK ] [SL:FREQUENCY EVERY WEDNESDAY ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "Yellowstone starts", "recurring_date_time": "every Wednesday at 9:50pm"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00004171.wav", "split": "test", "intent": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:SEND_MESSAGE EMAIL [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION GRANDMOTHER ] ] ] ] ] ]", "parameters": {}, "sentence": "REMIND ME TO EMAIL MY GRANDMOTHER", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "REMIND ME TO EMAIL MY GRANDMOTHER", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:SEND_MESSAGE EMAIL [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION GRANDMOTHER ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00004171.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "REMIND ME TO EMAIL MY GRANDMOTHER", "seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:SEND_MESSAGE EMAIL [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION GRANDMOTHER ] ] ] ] ] ]", "normalized_utterance": "REMIND ME TO EMAIL MY GRANDMOTHER", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:SEND_MESSAGE EMAIL [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION GRANDMOTHER ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION GRANDMOTHER ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "email my grandmother"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00003178.wav", "split": "test", "intent": "[IN:DELETE_REMINDER remove [SL:PERSON_REMINDED my ] [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] [SL:TODO bowling night ] ] ] reminder ]", "parameters": {}, "sentence": "remove my weekly bowling night reminder", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "REMOVE MY WEEKLY BOWLING NIGHT REMINDER", "normalized_seqlogical": "[IN:DELETE_REMINDER REMOVE [SL:PERSON_REMINDED MY ] [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO BOWLING NIGHT ] ] ] REMINDER ]", "raw_data": {"file_id": "test_0/reminder_test_0/00003178.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "remove my weekly bowling night reminder", "seqlogical": "[IN:DELETE_REMINDER remove [SL:PERSON_REMINDED my ] [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] [SL:TODO bowling night ] ] ] reminder ]", "normalized_utterance": "REMOVE MY WEEKLY BOWLING NIGHT REMINDER", "normalized_seqlogical": "[IN:DELETE_REMINDER REMOVE [SL:PERSON_REMINDED MY ] [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO BOWLING NIGHT ] ] ] REMINDER ]", "decoupled_normalized_seqlogical": "[IN:DELETE_REMINDER [SL:PERSON_REMINDED MY ] [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO BOWLING NIGHT ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_reminder", "arguments": {"todo": "weekly bowling night"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00002615.wav", "split": "test", "intent": "[IN:DELETE_REMINDER Delete [SL:AMOUNT all ] reminders for [SL:TODO [IN:GET_TODO the [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY monthly ] ] ] [SL:TODO budget report meetings ] ] ] . ]", "parameters": {}, "sentence": "Delete all reminders for the monthly budget report meetings.", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "DELETE ALL REMINDERS FOR THE MONTHLY BUDGET REPORT MEETINGS", "normalized_seqlogical": "[IN:DELETE_REMINDER DELETE [SL:AMOUNT ALL ] REMINDERS FOR [SL:TODO [IN:GET_TODO THE [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY MONTHLY ] ] ] [SL:TODO BUDGET REPORT MEETINGS ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00002615.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Delete all reminders for the monthly budget report meetings.", "seqlogical": "[IN:DELETE_REMINDER Delete [SL:AMOUNT all ] reminders for [SL:TODO [IN:GET_TODO the [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY monthly ] ] ] [SL:TODO budget report meetings ] ] ] . ]", "normalized_utterance": "DELETE ALL REMINDERS FOR THE MONTHLY BUDGET REPORT MEETINGS", "normalized_seqlogical": "[IN:DELETE_REMINDER DELETE [SL:AMOUNT ALL ] REMINDERS FOR [SL:TODO [IN:GET_TODO THE [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY MONTHLY ] ] ] [SL:TODO BUDGET REPORT MEETINGS ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_REMINDER [SL:AMOUNT ALL ] [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY MONTHLY ] ] ] [SL:TODO BUDGET REPORT MEETINGS ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_reminder", "arguments": {"todo": "monthly budget report meeting"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00001456.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY daily ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO pray ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every morning ] ] ] ] ] . ]", "parameters": {}, "sentence": "Set up a daily reminder to pray every morning.", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "SET UP A DAILY REMINDER TO PRAY EVERY MORNING", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY DAILY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO PRAY ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY MORNING ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00001456.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Set up a daily reminder to pray every morning.", "seqlogical": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY daily ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO pray ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every morning ] ] ] ] ] . ]", "normalized_utterance": "SET UP A DAILY REMINDER TO PRAY EVERY MORNING", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY DAILY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO PRAY ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY MORNING ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY DAILY ] ] ] [SL:TODO [IN:GET_TODO [SL:TODO PRAY ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY MORNING ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "pray", "recurring_date_time": "every morning"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00001602.wav", "split": "test", "intent": "[IN:CREATE_REMINDER set a reminder to [SL:TODO [IN:GET_TODO [SL:TODO have lunch ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] ] ] [SL:DATE_TIME on tuesday ] ]", "parameters": {}, "sentence": "set a reminder to have lunch with mom on tuesday", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "SET A REMINDER TO HAVE LUNCH WITH MOM ON TUESDAY", "normalized_seqlogical": "[IN:CREATE_REMINDER SET A REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO HAVE LUNCH ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] ] ] [SL:DATE_TIME ON TUESDAY ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00001602.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "set a reminder to have lunch with mom on tuesday", "seqlogical": "[IN:CREATE_REMINDER set a reminder to [SL:TODO [IN:GET_TODO [SL:TODO have lunch ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] ] ] [SL:DATE_TIME on tuesday ] ]", "normalized_utterance": "SET A REMINDER TO HAVE LUNCH WITH MOM ON TUESDAY", "normalized_seqlogical": "[IN:CREATE_REMINDER SET A REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO HAVE LUNCH ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] ] ] [SL:DATE_TIME ON TUESDAY ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:TODO [IN:GET_TODO [SL:TODO HAVE LUNCH ] [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] ] ] [SL:DATE_TIME ON TUESDAY ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "have lunch with mom", "date_time": "next Tuesday"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00002508.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set a reminder to [SL:TODO [IN:SEND_MESSAGE text [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Mom ] ] ] about [SL:CONTENT_EXACT [IN:GET_EVENT [SL:CATEGORY_EVENT the birthday party ] ] ] ] ] [SL:DATE_TIME tomorrow ] . ]", "parameters": {}, "sentence": "Set a reminder to text Mom about the birthday party tomorrow.", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "SET A REMINDER TO TEXT MOM ABOUT THE BIRTHDAY PARTY TOMORROW", "normalized_seqlogical": "[IN:CREATE_REMINDER SET A REMINDER TO [SL:TODO [IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] ABOUT [SL:CONTENT_EXACT [IN:GET_EVENT [SL:CATEGORY_EVENT THE BIRTHDAY PARTY ] ] ] ] ] [SL:DATE_TIME TOMORROW ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00002508.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Set a reminder to text Mom about the birthday party tomorrow.", "seqlogical": "[IN:CREATE_REMINDER Set a reminder to [SL:TODO [IN:SEND_MESSAGE text [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Mom ] ] ] about [SL:CONTENT_EXACT [IN:GET_EVENT [SL:CATEGORY_EVENT the birthday party ] ] ] ] ] [SL:DATE_TIME tomorrow ] . ]", "normalized_utterance": "SET A REMINDER TO TEXT MOM ABOUT THE BIRTHDAY PARTY TOMORROW", "normalized_seqlogical": "[IN:CREATE_REMINDER SET A REMINDER TO [SL:TODO [IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] ABOUT [SL:CONTENT_EXACT [IN:GET_EVENT [SL:CATEGORY_EVENT THE BIRTHDAY PARTY ] ] ] ] ] [SL:DATE_TIME TOMORROW ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:TODO [IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] [SL:CONTENT_EXACT [IN:GET_EVENT [SL:CATEGORY_EVENT THE BIRTHDAY PARTY ] ] ] ] ] [SL:DATE_TIME TOMORROW ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "text mom about the birthday party", "date_time": "tomorrow"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00003449.wav", "split": "test", "intent": "[IN:GET_REMINDER Can you find [SL:PERSON_REMINDED my ] reminder for [SL:TODO [IN:GET_TODO [SL:TODO my dinner plans ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION friends ] ] ] ] ] [SL:DATE_TIME next week ] ? ]", "parameters": {}, "sentence": "Can you find my reminder for my dinner plans with friends next week?", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "CAN YOU FIND MY REMINDER FOR MY DINNER PLANS WITH FRIENDS NEXT WEEK", "normalized_seqlogical": "[IN:GET_REMINDER CAN YOU FIND [SL:PERSON_REMINDED MY ] REMINDER FOR [SL:TODO [IN:GET_TODO [SL:TODO MY DINNER PLANS ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION FRIENDS ] ] ] ] ] [SL:DATE_TIME NEXT WEEK ] ]", "raw_data": {"file_id": "test_1/reminder_test/00003449.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Can you find my reminder for my dinner plans with friends next week?", "seqlogical": "[IN:GET_REMINDER Can you find [SL:PERSON_REMINDED my ] reminder for [SL:TODO [IN:GET_TODO [SL:TODO my dinner plans ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION friends ] ] ] ] ] [SL:DATE_TIME next week ] ? ]", "normalized_utterance": "CAN YOU FIND MY REMINDER FOR MY DINNER PLANS WITH FRIENDS NEXT WEEK", "normalized_seqlogical": "[IN:GET_REMINDER CAN YOU FIND [SL:PERSON_REMINDED MY ] REMINDER FOR [SL:TODO [IN:GET_TODO [SL:TODO MY DINNER PLANS ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION FRIENDS ] ] ] ] ] [SL:DATE_TIME NEXT WEEK ] ]", "decoupled_normalized_seqlogical": "[IN:GET_REMINDER [SL:PERSON_REMINDED MY ] [SL:TODO [IN:GET_TODO [SL:TODO MY DINNER PLANS ] [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION FRIENDS ] ] ] ] ] [SL:DATE_TIME NEXT WEEK ] ]"}, "prediction": "", "function_calls": [{"name": "get_reminder", "arguments": {"person_reminded": "my", "todo": "dinner plans with friends", "date_time": "next week"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00000188.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO take the trash out ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every ] [SL:DATE_TIME Thursday night ] ] ] ] ] . ]", "parameters": {}, "sentence": "Set a weekly reminder to take the trash out every Thursday night.", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "SET A WEEKLY REMINDER TO TAKE THE TRASH OUT EVERY THURSDAY NIGHT", "normalized_seqlogical": "[IN:CREATE_REMINDER SET A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO TAKE THE TRASH OUT ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY ] [SL:DATE_TIME THURSDAY NIGHT ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00000188.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Set a weekly reminder to take the trash out every Thursday night.", "seqlogical": "[IN:CREATE_REMINDER Set a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO take the trash out ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every ] [SL:DATE_TIME Thursday night ] ] ] ] ] . ]", "normalized_utterance": "SET A WEEKLY REMINDER TO TAKE THE TRASH OUT EVERY THURSDAY NIGHT", "normalized_seqlogical": "[IN:CREATE_REMINDER SET A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO TAKE THE TRASH OUT ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY ] [SL:DATE_TIME THURSDAY NIGHT ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO [IN:GET_TODO [SL:TODO TAKE THE TRASH OUT ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY ] [SL:DATE_TIME THURSDAY NIGHT ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "every Thursday night", "todo": "take the trash out"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00003609.wav", "split": "test", "intent": "[IN:CREATE_REMINDER set up a reminder for [SL:TODO [IN:GET_TODO [SL:TODO trash ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Tuesday ] ] ] ] ] and [SL:TODO Recycle ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every other Wednesday ] ] ] ]", "parameters": {}, "sentence": "set up a reminder for trash every Tuesday and Recycle every other Wednesday", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "SET UP A REMINDER FOR TRASH EVERY TUESDAY AND RECYCLE EVERY OTHER WEDNESDAY", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A REMINDER FOR [SL:TODO [IN:GET_TODO [SL:TODO TRASH ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY TUESDAY ] ] ] ] ] AND [SL:TODO RECYCLE ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY OTHER WEDNESDAY ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00003609.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "set up a reminder for trash every Tuesday and Recycle every other Wednesday", "seqlogical": "[IN:CREATE_REMINDER set up a reminder for [SL:TODO [IN:GET_TODO [SL:TODO trash ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Tuesday ] ] ] ] ] and [SL:TODO Recycle ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every other Wednesday ] ] ] ]", "normalized_utterance": "SET UP A REMINDER FOR TRASH EVERY TUESDAY AND RECYCLE EVERY OTHER WEDNESDAY", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A REMINDER FOR [SL:TODO [IN:GET_TODO [SL:TODO TRASH ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY TUESDAY ] ] ] ] ] AND [SL:TODO RECYCLE ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY OTHER WEDNESDAY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:TODO [IN:GET_TODO [SL:TODO TRASH ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY TUESDAY ] ] ] ] ] [SL:TODO RECYCLE ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY OTHER WEDNESDAY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "every Tuesday", "todo": "trash"}}, {"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "every other Wednesday", "todo": "recycle"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00002037.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:SEND_MESSAGE text [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Dad ] ] ] ] ] [SL:DATE_TIME on Monday ] ]", "parameters": {}, "sentence": "Remind me to text Dad on Monday", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "REMIND ME TO TEXT DAD ON MONDAY", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ] ] [SL:DATE_TIME ON MONDAY ] ]", "raw_data": {"file_id": "test_1/reminder_test/00002037.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Remind me to text Dad on Monday", "seqlogical": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:SEND_MESSAGE text [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Dad ] ] ] ] ] [SL:DATE_TIME on Monday ] ]", "normalized_utterance": "REMIND ME TO TEXT DAD ON MONDAY", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ] ] [SL:DATE_TIME ON MONDAY ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ] ] [SL:DATE_TIME ON MONDAY ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "text dad", "date_time": "next Monday"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00003006.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO do ] the [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] [SL:TODO charting ] [SL:DATE_TIME at 4 : 00 PM ] ] ] ]", "parameters": {}, "sentence": "Set a weekly reminder to do the weekly charting at 4:00 PM", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "SET A WEEKLY REMINDER TO DO THE WEEKLY CHARTING AT FOUR PM", "normalized_seqlogical": "[IN:CREATE_REMINDER SET A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO DO ] THE [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO CHARTING ] [SL:DATE_TIME AT FOUR PM ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00003006.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Set a weekly reminder to do the weekly charting at 4:00 PM", "seqlogical": "[IN:CREATE_REMINDER Set a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO do ] the [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] [SL:TODO charting ] [SL:DATE_TIME at 4 : 00 PM ] ] ] ]", "normalized_utterance": "SET A WEEKLY REMINDER TO DO THE WEEKLY CHARTING AT FOUR PM", "normalized_seqlogical": "[IN:CREATE_REMINDER SET A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO DO ] THE [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO CHARTING ] [SL:DATE_TIME AT FOUR PM ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO [IN:GET_TODO [SL:TODO DO ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO CHARTING ] [SL:DATE_TIME AT FOUR PM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "weekly", "todo": "do the weekly charting", "date_time": "4pm"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00001690.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set a reminder that [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Tuesday ] ] ] is [SL:TODO garbage day ] ] ] . ]", "parameters": {}, "sentence": "Set a reminder that every Tuesday is garbage day.", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "SET A REMINDER THAT EVERY TUESDAY IS GARBAGE DAY", "normalized_seqlogical": "[IN:CREATE_REMINDER SET A REMINDER THAT [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY TUESDAY ] ] ] IS [SL:TODO GARBAGE DAY ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00001690.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Set a reminder that every Tuesday is garbage day.", "seqlogical": "[IN:CREATE_REMINDER Set a reminder that [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Tuesday ] ] ] is [SL:TODO garbage day ] ] ] . ]", "normalized_utterance": "SET A REMINDER THAT EVERY TUESDAY IS GARBAGE DAY", "normalized_seqlogical": "[IN:CREATE_REMINDER SET A REMINDER THAT [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY TUESDAY ] ] ] IS [SL:TODO GARBAGE DAY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY TUESDAY ] ] ] [SL:TODO GARBAGE DAY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "every Tuesday", "todo": "garbage day"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00000422.wav", "split": "test", "intent": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO LIST AND POST ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY DAILY ] ] ] [SL:TODO COIN AUCTIONS ] [SL:DATE_TIME FOR THE UPCOMING WEEK ON SUNDAY ] [SL:TODO BEFORE WORK ] ] ] . ]", "parameters": {}, "sentence": "REMIND ME TO LIST AND POST DAILY COIN AUCTIONS FOR THE UPCOMING WEEK ON SUNDAY BEFORE WORK.", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "REMIND ME TO LIST AND POST DAILY COIN AUCTIONS FOR THE UPCOMING WEEK ON SUNDAY BEFORE WORK", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO LIST AND POST ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY DAILY ] ] ] [SL:TODO COIN AUCTIONS ] [SL:DATE_TIME FOR THE UPCOMING WEEK ON SUNDAY ] [SL:TODO BEFORE WORK ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00000422.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "REMIND ME TO LIST AND POST DAILY COIN AUCTIONS FOR THE UPCOMING WEEK ON SUNDAY BEFORE WORK.", "seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO LIST AND POST ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY DAILY ] ] ] [SL:TODO COIN AUCTIONS ] [SL:DATE_TIME FOR THE UPCOMING WEEK ON SUNDAY ] [SL:TODO BEFORE WORK ] ] ] . ]", "normalized_utterance": "REMIND ME TO LIST AND POST DAILY COIN AUCTIONS FOR THE UPCOMING WEEK ON SUNDAY BEFORE WORK", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO LIST AND POST ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY DAILY ] ] ] [SL:TODO COIN AUCTIONS ] [SL:DATE_TIME FOR THE UPCOMING WEEK ON SUNDAY ] [SL:TODO BEFORE WORK ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:GET_TODO [SL:TODO LIST AND POST ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY DAILY ] ] ] [SL:TODO COIN AUCTIONS ] [SL:DATE_TIME FOR THE UPCOMING WEEK ON SUNDAY ] [SL:TODO BEFORE WORK ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "list and post daily coin auctions for the upcoming week", "date_time": "Sunday before work"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00000422.wav", "split": "test", "intent": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO LIST AND POST ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY DAILY ] ] ] [SL:TODO COIN AUCTIONS ] [SL:DATE_TIME FOR THE UPCOMING WEEK ON SUNDAY ] [SL:TODO BEFORE WORK ] ] ] . ]", "parameters": {}, "sentence": "REMIND ME TO LIST AND POST DAILY COIN AUCTIONS FOR THE UPCOMING WEEK ON SUNDAY BEFORE WORK.", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "REMIND ME TO LIST AND POST DAILY COIN AUCTIONS FOR THE UPCOMING WEEK ON SUNDAY BEFORE WORK", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO LIST AND POST ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY DAILY ] ] ] [SL:TODO COIN AUCTIONS ] [SL:DATE_TIME FOR THE UPCOMING WEEK ON SUNDAY ] [SL:TODO BEFORE WORK ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00000422.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "REMIND ME TO LIST AND POST DAILY COIN AUCTIONS FOR THE UPCOMING WEEK ON SUNDAY BEFORE WORK.", "seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO LIST AND POST ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY DAILY ] ] ] [SL:TODO COIN AUCTIONS ] [SL:DATE_TIME FOR THE UPCOMING WEEK ON SUNDAY ] [SL:TODO BEFORE WORK ] ] ] . ]", "normalized_utterance": "REMIND ME TO LIST AND POST DAILY COIN AUCTIONS FOR THE UPCOMING WEEK ON SUNDAY BEFORE WORK", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO LIST AND POST ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY DAILY ] ] ] [SL:TODO COIN AUCTIONS ] [SL:DATE_TIME FOR THE UPCOMING WEEK ON SUNDAY ] [SL:TODO BEFORE WORK ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:GET_TODO [SL:TODO LIST AND POST ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY DAILY ] ] ] [SL:TODO COIN AUCTIONS ] [SL:DATE_TIME FOR THE UPCOMING WEEK ON SUNDAY ] [SL:TODO BEFORE WORK ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "list and post daily coin auctions for the upcoming week", "date_time": "Sunday before work"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00002173.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] about [SL:TODO [IN:GET_TODO [SL:TODO dinner ] [SL:DATE_TIME tomorrow ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] ] ] [SL:DATE_TIME at 2 : 00 ] ]", "parameters": {}, "sentence": "Remind me about dinner tomorrow with mom at 2:00", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "REMIND ME ABOUT DINNER TOMORROW WITH MOM AT TWO", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] ABOUT [SL:TODO [IN:GET_TODO [SL:TODO DINNER ] [SL:DATE_TIME TOMORROW ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] ] ] [SL:DATE_TIME AT TWO ] ]", "raw_data": {"file_id": "test_1/reminder_test/00002173.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Remind me about dinner tomorrow with mom at 2:00", "seqlogical": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] about [SL:TODO [IN:GET_TODO [SL:TODO dinner ] [SL:DATE_TIME tomorrow ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] ] ] [SL:DATE_TIME at 2 : 00 ] ]", "normalized_utterance": "REMIND ME ABOUT DINNER TOMORROW WITH MOM AT TWO", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] ABOUT [SL:TODO [IN:GET_TODO [SL:TODO DINNER ] [SL:DATE_TIME TOMORROW ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] ] ] [SL:DATE_TIME AT TWO ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:GET_TODO [SL:TODO DINNER ] [SL:DATE_TIME TOMORROW ] [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] ] ] [SL:DATE_TIME AT TWO ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "dinner with Mom", "date_time": "tomorrow at 2pm"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00003264.wav", "split": "test", "intent": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME At noon ] [SL:FREQUENCY every day ] ] ] [SL:PERSON_REMINDED I ] need to rememberTo [SL:TODO [IN:GET_TODO [SL:TODO tweet out the new listing ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every day ] ] ] [SL:TODO from Etsy ] ] ] ]", "parameters": {}, "sentence": "At noon every day I need to rememberTo tweet out the new listing every day from Etsy", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "AT NOON EVERY DAY I NEED TO REMEMBERTO TWEET OUT THE NEW LISTING EVERY DAY FROM ETSY", "normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME AT NOON ] [SL:FREQUENCY EVERY DAY ] ] ] [SL:PERSON_REMINDED I ] NEED TO REMEMBERTO [SL:TODO [IN:GET_TODO [SL:TODO TWEET OUT THE NEW LISTING ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY DAY ] ] ] [SL:TODO FROM ETSY ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00003264.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "At noon every day I need to rememberTo tweet out the new listing every day from Etsy", "seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME At noon ] [SL:FREQUENCY every day ] ] ] [SL:PERSON_REMINDED I ] need to rememberTo [SL:TODO [IN:GET_TODO [SL:TODO tweet out the new listing ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every day ] ] ] [SL:TODO from Etsy ] ] ] ]", "normalized_utterance": "AT NOON EVERY DAY I NEED TO REMEMBERTO TWEET OUT THE NEW LISTING EVERY DAY FROM ETSY", "normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME AT NOON ] [SL:FREQUENCY EVERY DAY ] ] ] [SL:PERSON_REMINDED I ] NEED TO REMEMBERTO [SL:TODO [IN:GET_TODO [SL:TODO TWEET OUT THE NEW LISTING ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY DAY ] ] ] [SL:TODO FROM ETSY ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME AT NOON ] [SL:FREQUENCY EVERY DAY ] ] ] [SL:PERSON_REMINDED I ] [SL:TODO [IN:GET_TODO [SL:TODO TWEET OUT THE NEW LISTING ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY DAY ] ] ] [SL:TODO FROM ETSY ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "tweet out a new listing from Etsy", "recurring_date_time": "every day", "date_time": "noon"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00000430.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:SEND_MESSAGE send an email to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION aunt ] [SL:CONTACT Lisa ] ] ] about [SL:CONTENT_EXACT her work ] ] ] [SL:DATE_TIME tonight before 7 pm ] . ]", "parameters": {}, "sentence": "Remind me to send an email to my aunt Lisa about her work tonight before 7 pm.", "domain": "reminder", "gender": "Female", "native": "Yes", "normalized_utterance": "REMIND ME TO SEND AN EMAIL TO MY AUNT LISA ABOUT HER WORK TONIGHT BEFORE SEVEN PM", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:SEND_MESSAGE SEND AN EMAIL TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION AUNT ] [SL:CONTACT LISA ] ] ] ABOUT [SL:CONTENT_EXACT HER WORK ] ] ] [SL:DATE_TIME TONIGHT BEFORE SEVEN PM ] ]", "raw_data": {"file_id": "test_1/reminder_test/00000430.wav", "domain": "reminder", "gender": "Female", "native": "Yes", "utterance": "Remind me to send an email to my aunt Lisa about her work tonight before 7 pm.", "seqlogical": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:SEND_MESSAGE send an email to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION aunt ] [SL:CONTACT Lisa ] ] ] about [SL:CONTENT_EXACT her work ] ] ] [SL:DATE_TIME tonight before 7 pm ] . ]", "normalized_utterance": "REMIND ME TO SEND AN EMAIL TO MY AUNT LISA ABOUT HER WORK TONIGHT BEFORE SEVEN PM", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:SEND_MESSAGE SEND AN EMAIL TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION AUNT ] [SL:CONTACT LISA ] ] ] ABOUT [SL:CONTENT_EXACT HER WORK ] ] ] [SL:DATE_TIME TONIGHT BEFORE SEVEN PM ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION AUNT ] [SL:CONTACT LISA ] ] ] [SL:CONTENT_EXACT HER WORK ] ] ] [SL:DATE_TIME TONIGHT BEFORE SEVEN PM ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "send an email to my Aunt Lisa about her work", "date_time": "tonight before 7:00 PM"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00001423.wav", "split": "test", "intent": "[IN:CREATE_REMINDER I will [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE email [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION dad ] ] ] ] ] [SL:DATE_TIME tonight ] ] ] , remind [SL:PERSON_REMINDED me ] [SL:DATE_TIME at 8 : 00 ] ]", "parameters": {}, "sentence": "I will email my dad tonight, remind me at 8:00", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "I WILL EMAIL MY DAD TONIGHT REMIND ME AT EIGHT", "normalized_seqlogical": "[IN:CREATE_REMINDER I WILL [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE EMAIL [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAD ] ] ] ] ] [SL:DATE_TIME TONIGHT ] ] ] REMIND [SL:PERSON_REMINDED ME ] [SL:DATE_TIME AT EIGHT ] ]", "raw_data": {"file_id": "test_1/reminder_test/00001423.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "I will email my dad tonight, remind me at 8:00", "seqlogical": "[IN:CREATE_REMINDER I will [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE email [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION dad ] ] ] ] ] [SL:DATE_TIME tonight ] ] ] , remind [SL:PERSON_REMINDED me ] [SL:DATE_TIME at 8 : 00 ] ]", "normalized_utterance": "I WILL EMAIL MY DAD TONIGHT REMIND ME AT EIGHT", "normalized_seqlogical": "[IN:CREATE_REMINDER I WILL [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE EMAIL [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAD ] ] ] ] ] [SL:DATE_TIME TONIGHT ] ] ] REMIND [SL:PERSON_REMINDED ME ] [SL:DATE_TIME AT EIGHT ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAD ] ] ] ] ] [SL:DATE_TIME TONIGHT ] ] ] [SL:PERSON_REMINDED ME ] [SL:DATE_TIME AT EIGHT ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "email my dad", "date_time": "tonight at 8pm"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00001423.wav", "split": "test", "intent": "[IN:CREATE_REMINDER I will [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE email [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION dad ] ] ] ] ] [SL:DATE_TIME tonight ] ] ] , remind [SL:PERSON_REMINDED me ] [SL:DATE_TIME at 8 : 00 ] ]", "parameters": {}, "sentence": "I will email my dad tonight, remind me at 8:00", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "I WILL EMAIL MY DAD TONIGHT REMIND ME AT EIGHT", "normalized_seqlogical": "[IN:CREATE_REMINDER I WILL [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE EMAIL [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAD ] ] ] ] ] [SL:DATE_TIME TONIGHT ] ] ] REMIND [SL:PERSON_REMINDED ME ] [SL:DATE_TIME AT EIGHT ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00001423.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "I will email my dad tonight, remind me at 8:00", "seqlogical": "[IN:CREATE_REMINDER I will [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE email [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION dad ] ] ] ] ] [SL:DATE_TIME tonight ] ] ] , remind [SL:PERSON_REMINDED me ] [SL:DATE_TIME at 8 : 00 ] ]", "normalized_utterance": "I WILL EMAIL MY DAD TONIGHT REMIND ME AT EIGHT", "normalized_seqlogical": "[IN:CREATE_REMINDER I WILL [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE EMAIL [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAD ] ] ] ] ] [SL:DATE_TIME TONIGHT ] ] ] REMIND [SL:PERSON_REMINDED ME ] [SL:DATE_TIME AT EIGHT ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION DAD ] ] ] ] ] [SL:DATE_TIME TONIGHT ] ] ] [SL:PERSON_REMINDED ME ] [SL:DATE_TIME AT EIGHT ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "email my dad", "date_time": "tonight at 8pm"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00001438.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Reminder to [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE text [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION friends ] ] ] ] ] [SL:TODO if I haven't talked them for a while ] ] ] ]", "parameters": {}, "sentence": "Reminder to text friends if I haven't talked them for a while", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "REMINDER TO TEXT FRIENDS IF I HAVEN'T TALKED THEM FOR A WHILE", "normalized_seqlogical": "[IN:CREATE_REMINDER REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION FRIENDS ] ] ] ] ] [SL:TODO IF I HAVEN'T TALKED THEM FOR A WHILE ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00001438.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Reminder to text friends if I haven't talked them for a while", "seqlogical": "[IN:CREATE_REMINDER Reminder to [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE text [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION friends ] ] ] ] ] [SL:TODO if I haven't talked them for a while ] ] ] ]", "normalized_utterance": "REMINDER TO TEXT FRIENDS IF I HAVEN'T TALKED THEM FOR A WHILE", "normalized_seqlogical": "[IN:CREATE_REMINDER REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION FRIENDS ] ] ] ] ] [SL:TODO IF I HAVEN'T TALKED THEM FOR A WHILE ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION FRIENDS ] ] ] ] ] [SL:TODO IF I HAVEN'T TALKED THEM FOR A WHILE ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "text friends if I haven't talked to them for a while"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00003994.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:SEND_MESSAGE send [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] best [SL:TYPE_RELATION friend ] ] ] an email , about [SL:CONTENT_EXACT [IN:GET_EVENT [SL:ORGANIZER_EVENT our ] [SL:ORDINAL next ] [SL:CATEGORY_EVENT girl 's get together ] ] ] ] ] . ]", "parameters": {}, "sentence": "Remind me to send my best friend an email, about our next girl's get together.", "domain": "reminder", "gender": "Male", "native": "Unanswered", "normalized_utterance": "REMIND ME TO SEND MY BEST FRIEND AN EMAIL ABOUT OUR NEXT GIRL 'S GET TOGETHER", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:SEND_MESSAGE SEND [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] BEST [SL:TYPE_RELATION FRIEND ] ] ] AN EMAIL ABOUT [SL:CONTENT_EXACT [IN:GET_EVENT [SL:ORGANIZER_EVENT OUR ] [SL:ORDINAL NEXT ] [SL:CATEGORY_EVENT GIRL 'S GET TOGETHER ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00003994.wav", "domain": "reminder", "gender": "Male", "native": "Unanswered", "utterance": "Remind me to send my best friend an email, about our next girl's get together.", "seqlogical": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:SEND_MESSAGE send [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] best [SL:TYPE_RELATION friend ] ] ] an email , about [SL:CONTENT_EXACT [IN:GET_EVENT [SL:ORGANIZER_EVENT our ] [SL:ORDINAL next ] [SL:CATEGORY_EVENT girl 's get together ] ] ] ] ] . ]", "normalized_utterance": "REMIND ME TO SEND MY BEST FRIEND AN EMAIL ABOUT OUR NEXT GIRL 'S GET TOGETHER", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:SEND_MESSAGE SEND [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] BEST [SL:TYPE_RELATION FRIEND ] ] ] AN EMAIL ABOUT [SL:CONTENT_EXACT [IN:GET_EVENT [SL:ORGANIZER_EVENT OUR ] [SL:ORDINAL NEXT ] [SL:CATEGORY_EVENT GIRL 'S GET TOGETHER ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION FRIEND ] ] ] [SL:CONTENT_EXACT [IN:GET_EVENT [SL:ORGANIZER_EVENT OUR ] [SL:ORDINAL NEXT ] [SL:CATEGORY_EVENT GIRL 'S GET TOGETHER ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "my best friend", "todo": "send an email about our next girls' get together"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00000823.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO take medication ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every morning ] [SL:DATE_TIME at 6 ] ] ] ] ] . ]", "parameters": {}, "sentence": "Set up a weekly reminder to take medication every morning at 6.", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "SET UP A WEEKLY REMINDER TO TAKE MEDICATION EVERY MORNING AT SIX", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO TAKE MEDICATION ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY MORNING ] [SL:DATE_TIME AT SIX ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00000823.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Set up a weekly reminder to take medication every morning at 6.", "seqlogical": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO take medication ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every morning ] [SL:DATE_TIME at 6 ] ] ] ] ] . ]", "normalized_utterance": "SET UP A WEEKLY REMINDER TO TAKE MEDICATION EVERY MORNING AT SIX", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO TAKE MEDICATION ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY MORNING ] [SL:DATE_TIME AT SIX ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO [IN:GET_TODO [SL:TODO TAKE MEDICATION ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY MORNING ] [SL:DATE_TIME AT SIX ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "every morning", "todo": "take medication", "date_time": "6:00 AM"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00001469.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO do yoga ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME on Wednesday mornings ] ] ] ] ] . ]", "parameters": {}, "sentence": "Set up a weekly reminder to do yoga on Wednesday mornings.", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "SET UP A WEEKLY REMINDER TO DO YOGA ON WEDNESDAY MORNINGS", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO DO YOGA ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME ON WEDNESDAY MORNINGS ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00001469.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Set up a weekly reminder to do yoga on Wednesday mornings.", "seqlogical": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO do yoga ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME on Wednesday mornings ] ] ] ] ] . ]", "normalized_utterance": "SET UP A WEEKLY REMINDER TO DO YOGA ON WEDNESDAY MORNINGS", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO DO YOGA ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME ON WEDNESDAY MORNINGS ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO [IN:GET_TODO [SL:TODO DO YOGA ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME ON WEDNESDAY MORNINGS ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "weekly", "todo": "do yoga on Wednesday mornings"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00001084.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] about [SL:TODO [IN:GET_TODO [SL:TODO the Theater date ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION husband ] ] ] ] ] [SL:DATE_TIME on August 10th ] . ]", "parameters": {}, "sentence": "Remind me about the Theater date with my husband on August 10th.", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "REMIND ME ABOUT THE THEATER DATE WITH MY HUSBAND ON AUGUST TENTH", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] ABOUT [SL:TODO [IN:GET_TODO [SL:TODO THE THEATER DATE ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION HUSBAND ] ] ] ] ] [SL:DATE_TIME ON AUGUST TENTH ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00001084.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Remind me about the Theater date with my husband on August 10th.", "seqlogical": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] about [SL:TODO [IN:GET_TODO [SL:TODO the Theater date ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION husband ] ] ] ] ] [SL:DATE_TIME on August 10th ] . ]", "normalized_utterance": "REMIND ME ABOUT THE THEATER DATE WITH MY HUSBAND ON AUGUST TENTH", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] ABOUT [SL:TODO [IN:GET_TODO [SL:TODO THE THEATER DATE ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION HUSBAND ] ] ] ] ] [SL:DATE_TIME ON AUGUST TENTH ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:GET_TODO [SL:TODO THE THEATER DATE ] [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION HUSBAND ] ] ] ] ] [SL:DATE_TIME ON AUGUST TENTH ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "theater date with my husband", "date_time": "August 10th"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00001256.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:SEND_MESSAGE send [SL:RECIPIENT Susan ] an email about [SL:CONTENT_EXACT [IN:GET_EVENT [SL:CATEGORY_EVENT the meeting ] ] ] ] ] [SL:DATE_TIME tonight ] ]", "parameters": {}, "sentence": "Remind me to send Susan an email about the meeting tonight", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "REMIND ME TO SEND SUSAN AN EMAIL ABOUT THE MEETING TONIGHT", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:SEND_MESSAGE SEND [SL:RECIPIENT SUSAN ] AN EMAIL ABOUT [SL:CONTENT_EXACT [IN:GET_EVENT [SL:CATEGORY_EVENT THE MEETING ] ] ] ] ] [SL:DATE_TIME TONIGHT ] ]", "raw_data": {"file_id": "test_1/reminder_test/00001256.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Remind me to send Susan an email about the meeting tonight", "seqlogical": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:SEND_MESSAGE send [SL:RECIPIENT Susan ] an email about [SL:CONTENT_EXACT [IN:GET_EVENT [SL:CATEGORY_EVENT the meeting ] ] ] ] ] [SL:DATE_TIME tonight ] ]", "normalized_utterance": "REMIND ME TO SEND SUSAN AN EMAIL ABOUT THE MEETING TONIGHT", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:SEND_MESSAGE SEND [SL:RECIPIENT SUSAN ] AN EMAIL ABOUT [SL:CONTENT_EXACT [IN:GET_EVENT [SL:CATEGORY_EVENT THE MEETING ] ] ] ] ] [SL:DATE_TIME TONIGHT ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:SEND_MESSAGE [SL:RECIPIENT SUSAN ] [SL:CONTENT_EXACT [IN:GET_EVENT [SL:CATEGORY_EVENT THE MEETING ] ] ] ] ] [SL:DATE_TIME TONIGHT ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "send Susan an email about the meeting", "date_time": "tonight"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00002037.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:SEND_MESSAGE text [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Dad ] ] ] ] ] [SL:DATE_TIME on Monday ] ]", "parameters": {}, "sentence": "Remind me to text Dad on Monday", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "REMIND ME TO TEXT DAD ON MONDAY", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ] ] [SL:DATE_TIME ON MONDAY ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00002037.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Remind me to text Dad on Monday", "seqlogical": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:SEND_MESSAGE text [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION Dad ] ] ] ] ] [SL:DATE_TIME on Monday ] ]", "normalized_utterance": "REMIND ME TO TEXT DAD ON MONDAY", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ] ] [SL:DATE_TIME ON MONDAY ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ] ] [SL:DATE_TIME ON MONDAY ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "text Dad", "date_time": "Monday"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00001843.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] [SL:DATE_TIME at 9 am ] to [SL:TODO [IN:GET_TODO [SL:TODO study 37 multiple choice questions ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY each day ] ] ] ] ] . ]", "parameters": {}, "sentence": "Remind me at 9 am to study 37 multiple choice questions each day.", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "REMIND ME AT NINE AM TO STUDY THIRTY SEVEN MULTIPLE CHOICE QUESTIONS EACH DAY", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] [SL:DATE_TIME AT NINE AM ] TO [SL:TODO [IN:GET_TODO [SL:TODO STUDY THIRTY SEVEN MULTIPLE CHOICE QUESTIONS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EACH DAY ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00001843.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Remind me at 9 am to study 37 multiple choice questions each day.", "seqlogical": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] [SL:DATE_TIME at 9 am ] to [SL:TODO [IN:GET_TODO [SL:TODO study 37 multiple choice questions ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY each day ] ] ] ] ] . ]", "normalized_utterance": "REMIND ME AT NINE AM TO STUDY THIRTY SEVEN MULTIPLE CHOICE QUESTIONS EACH DAY", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] [SL:DATE_TIME AT NINE AM ] TO [SL:TODO [IN:GET_TODO [SL:TODO STUDY THIRTY SEVEN MULTIPLE CHOICE QUESTIONS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EACH DAY ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:DATE_TIME AT NINE AM ] [SL:TODO [IN:GET_TODO [SL:TODO STUDY THIRTY SEVEN MULTIPLE CHOICE QUESTIONS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EACH DAY ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "study 37 multiple choice questions", "date_time": "9am", "recurring_date_time": "each day"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00001084.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] about [SL:TODO [IN:GET_TODO [SL:TODO the Theater date ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION husband ] ] ] ] ] [SL:DATE_TIME on August 10th ] . ]", "parameters": {}, "sentence": "Remind me about the Theater date with my husband on August 10th.", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "REMIND ME ABOUT THE THEATER DATE WITH MY HUSBAND ON AUGUST TENTH", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] ABOUT [SL:TODO [IN:GET_TODO [SL:TODO THE THEATER DATE ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION HUSBAND ] ] ] ] ] [SL:DATE_TIME ON AUGUST TENTH ] ]", "raw_data": {"file_id": "test_1/reminder_test/00001084.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Remind me about the Theater date with my husband on August 10th.", "seqlogical": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] about [SL:TODO [IN:GET_TODO [SL:TODO the Theater date ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION husband ] ] ] ] ] [SL:DATE_TIME on August 10th ] . ]", "normalized_utterance": "REMIND ME ABOUT THE THEATER DATE WITH MY HUSBAND ON AUGUST TENTH", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] ABOUT [SL:TODO [IN:GET_TODO [SL:TODO THE THEATER DATE ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION HUSBAND ] ] ] ] ] [SL:DATE_TIME ON AUGUST TENTH ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:GET_TODO [SL:TODO THE THEATER DATE ] [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION HUSBAND ] ] ] ] ] [SL:DATE_TIME ON AUGUST TENTH ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "theater date with my husband", "date_time": "August 10th"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00003178.wav", "split": "test", "intent": "[IN:DELETE_REMINDER remove [SL:PERSON_REMINDED my ] [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] [SL:TODO bowling night ] ] ] reminder ]", "parameters": {}, "sentence": "remove my weekly bowling night reminder", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "REMOVE MY WEEKLY BOWLING NIGHT REMINDER", "normalized_seqlogical": "[IN:DELETE_REMINDER REMOVE [SL:PERSON_REMINDED MY ] [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO BOWLING NIGHT ] ] ] REMINDER ]", "raw_data": {"file_id": "test_1/reminder_test/00003178.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "remove my weekly bowling night reminder", "seqlogical": "[IN:DELETE_REMINDER remove [SL:PERSON_REMINDED my ] [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] [SL:TODO bowling night ] ] ] reminder ]", "normalized_utterance": "REMOVE MY WEEKLY BOWLING NIGHT REMINDER", "normalized_seqlogical": "[IN:DELETE_REMINDER REMOVE [SL:PERSON_REMINDED MY ] [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO BOWLING NIGHT ] ] ] REMINDER ]", "decoupled_normalized_seqlogical": "[IN:DELETE_REMINDER [SL:PERSON_REMINDED MY ] [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO BOWLING NIGHT ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_reminder", "arguments": {"todo": "weekly bowling night"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00000861.wav", "split": "test", "intent": "[IN:CREATE_REMINDER remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:SEND_MESSAGE text [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] ] ] [SL:DATE_TIME by 9 pm tonight ] ]", "parameters": {}, "sentence": "remind me to text mom by 9pm tonight", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "REMIND ME TO TEXT MOM BY NINE PM TONIGHT", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] ] ] [SL:DATE_TIME BY NINE PM TONIGHT ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00000861.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "remind me to text mom by 9pm tonight", "seqlogical": "[IN:CREATE_REMINDER remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:SEND_MESSAGE text [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] ] ] [SL:DATE_TIME by 9 pm tonight ] ]", "normalized_utterance": "REMIND ME TO TEXT MOM BY NINE PM TONIGHT", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] ] ] [SL:DATE_TIME BY NINE PM TONIGHT ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] ] ] [SL:DATE_TIME BY NINE PM TONIGHT ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "text Mom", "date_time": "today at 9 PM"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00001310.wav", "split": "test", "intent": "[IN:DELETE_REMINDER Delete any reminders [SL:PERSON_REMINDED I ] set to [SL:TODO [IN:GET_TODO [SL:TODO meet ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] ] ] ] ] [SL:DATE_TIME this week ] ]", "parameters": {}, "sentence": "Delete any reminders I set to meet with my mom this week", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "DELETE ANY REMINDERS I SET TO MEET WITH MY MOM THIS WEEK", "normalized_seqlogical": "[IN:DELETE_REMINDER DELETE ANY REMINDERS [SL:PERSON_REMINDED I ] SET TO [SL:TODO [IN:GET_TODO [SL:TODO MEET ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] ] ] [SL:DATE_TIME THIS WEEK ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00001310.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Delete any reminders I set to meet with my mom this week", "seqlogical": "[IN:DELETE_REMINDER Delete any reminders [SL:PERSON_REMINDED I ] set to [SL:TODO [IN:GET_TODO [SL:TODO meet ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] ] ] ] ] [SL:DATE_TIME this week ] ]", "normalized_utterance": "DELETE ANY REMINDERS I SET TO MEET WITH MY MOM THIS WEEK", "normalized_seqlogical": "[IN:DELETE_REMINDER DELETE ANY REMINDERS [SL:PERSON_REMINDED I ] SET TO [SL:TODO [IN:GET_TODO [SL:TODO MEET ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] ] ] [SL:DATE_TIME THIS WEEK ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_REMINDER [SL:PERSON_REMINDED I ] [SL:TODO [IN:GET_TODO [SL:TODO MEET ] [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] ] ] [SL:DATE_TIME THIS WEEK ] ]"}, "prediction": "", "function_calls": [{"name": "delete_reminder", "arguments": {"person_reminded": "mom", "date_time": "this week"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00002529.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE send an email to [SL:RECIPIENT the Safety Patrol ] ] ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Monday ] ] ] [SL:TODO with the schedule ] ] ] . ]", "parameters": {}, "sentence": "Remind me to send an email to the Safety Patrol every Monday with the schedule.", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "REMIND ME TO SEND AN EMAIL TO THE SAFETY PATROL EVERY MONDAY WITH THE SCHEDULE", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE SEND AN EMAIL TO [SL:RECIPIENT THE SAFETY PATROL ] ] ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY MONDAY ] ] ] [SL:TODO WITH THE SCHEDULE ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00002529.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Remind me to send an email to the Safety Patrol every Monday with the schedule.", "seqlogical": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE send an email to [SL:RECIPIENT the Safety Patrol ] ] ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Monday ] ] ] [SL:TODO with the schedule ] ] ] . ]", "normalized_utterance": "REMIND ME TO SEND AN EMAIL TO THE SAFETY PATROL EVERY MONDAY WITH THE SCHEDULE", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE SEND AN EMAIL TO [SL:RECIPIENT THE SAFETY PATROL ] ] ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY MONDAY ] ] ] [SL:TODO WITH THE SCHEDULE ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE [SL:RECIPIENT THE SAFETY PATROL ] ] ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY MONDAY ] ] ] [SL:TODO WITH THE SCHEDULE ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "every Monday", "todo": "send an email to the safety patrol with the schedule"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00002976.wav", "split": "test", "intent": "[IN:CREATE_REMINDER can you set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO mow the grass ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY on Sundays ] ] ] ] ] ]", "parameters": {}, "sentence": "can you set up a weekly reminder to mow the grass on Sundays", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "CAN YOU SET UP A WEEKLY REMINDER TO MOW THE GRASS ON SUNDAYS", "normalized_seqlogical": "[IN:CREATE_REMINDER CAN YOU SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO MOW THE GRASS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY ON SUNDAYS ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00002976.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "can you set up a weekly reminder to mow the grass on Sundays", "seqlogical": "[IN:CREATE_REMINDER can you set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO mow the grass ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY on Sundays ] ] ] ] ] ]", "normalized_utterance": "CAN YOU SET UP A WEEKLY REMINDER TO MOW THE GRASS ON SUNDAYS", "normalized_seqlogical": "[IN:CREATE_REMINDER CAN YOU SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO MOW THE GRASS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY ON SUNDAYS ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO [IN:GET_TODO [SL:TODO MOW THE GRASS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY ON SUNDAYS ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "weekly", "todo": "mow the grass on Sundays"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00004908.wav", "split": "test", "intent": "[IN:DELETE_REMINDER cancel the reminder [SL:TODO [IN:GET_TODO with [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION brother ] ] ] ] ] [SL:DATE_TIME tomorrow afternoon ] ]", "parameters": {}, "sentence": "cancel the reminder with my brother tomorrow afternoon", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "CANCEL THE REMINDER WITH MY BROTHER TOMORROW AFTERNOON", "normalized_seqlogical": "[IN:DELETE_REMINDER CANCEL THE REMINDER [SL:TODO [IN:GET_TODO WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION BROTHER ] ] ] ] ] [SL:DATE_TIME TOMORROW AFTERNOON ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00004908.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "cancel the reminder with my brother tomorrow afternoon", "seqlogical": "[IN:DELETE_REMINDER cancel the reminder [SL:TODO [IN:GET_TODO with [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION brother ] ] ] ] ] [SL:DATE_TIME tomorrow afternoon ] ]", "normalized_utterance": "CANCEL THE REMINDER WITH MY BROTHER TOMORROW AFTERNOON", "normalized_seqlogical": "[IN:DELETE_REMINDER CANCEL THE REMINDER [SL:TODO [IN:GET_TODO WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION BROTHER ] ] ] ] ] [SL:DATE_TIME TOMORROW AFTERNOON ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_REMINDER [SL:TODO [IN:GET_TODO [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION BROTHER ] ] ] ] ] [SL:DATE_TIME TOMORROW AFTERNOON ] ]"}, "prediction": "", "function_calls": [{"name": "delete_reminder", "arguments": {"person_reminded": "my brother", "date_time": "tomorrow afternoon"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00003454.wav", "split": "test", "intent": "[IN:CREATE_REMINDER set up reminder to [SL:TODO [IN:GET_TODO [SL:TODO replenish pantry ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Saturday ] [SL:DATE_TIME for 8 weeks ] ] ] ] ] [SL:DATE_TIME starting today ] . ]", "parameters": {}, "sentence": "set up reminder to replenish pantry every Saturday for 8 weeks starting today.", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "SET UP REMINDER TO REPLENISH PANTRY EVERY SATURDAY FOR EIGHT WEEKS STARTING TODAY", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO REPLENISH PANTRY ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY SATURDAY ] [SL:DATE_TIME FOR EIGHT WEEKS ] ] ] ] ] [SL:DATE_TIME STARTING TODAY ] ]", "raw_data": {"file_id": "test_1/reminder_test/00003454.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "set up reminder to replenish pantry every Saturday for 8 weeks starting today.", "seqlogical": "[IN:CREATE_REMINDER set up reminder to [SL:TODO [IN:GET_TODO [SL:TODO replenish pantry ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Saturday ] [SL:DATE_TIME for 8 weeks ] ] ] ] ] [SL:DATE_TIME starting today ] . ]", "normalized_utterance": "SET UP REMINDER TO REPLENISH PANTRY EVERY SATURDAY FOR EIGHT WEEKS STARTING TODAY", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO REPLENISH PANTRY ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY SATURDAY ] [SL:DATE_TIME FOR EIGHT WEEKS ] ] ] ] ] [SL:DATE_TIME STARTING TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:TODO [IN:GET_TODO [SL:TODO REPLENISH PANTRY ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY SATURDAY ] [SL:DATE_TIME FOR EIGHT WEEKS ] ] ] ] ] [SL:DATE_TIME STARTING TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "every Saturday", "amount": 8, "todo": "replenish pantry", "date_time": "today"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00002388.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO feed the dogs ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every morning ] and [SL:FREQUENCY evening ] ] ] ] ] please . ]", "parameters": {}, "sentence": "Remind me to feed the dogs every morning and evening please.", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "REMIND ME TO FEED THE DOGS EVERY MORNING AND EVENING PLEASE", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO FEED THE DOGS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY MORNING ] AND [SL:FREQUENCY EVENING ] ] ] ] ] PLEASE ]", "raw_data": {"file_id": "test_1/reminder_test/00002388.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Remind me to feed the dogs every morning and evening please.", "seqlogical": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO feed the dogs ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every morning ] and [SL:FREQUENCY evening ] ] ] ] ] please . ]", "normalized_utterance": "REMIND ME TO FEED THE DOGS EVERY MORNING AND EVENING PLEASE", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO FEED THE DOGS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY MORNING ] AND [SL:FREQUENCY EVENING ] ] ] ] ] PLEASE ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:GET_TODO [SL:TODO FEED THE DOGS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY MORNING ] [SL:FREQUENCY EVENING ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "feed the dogs", "recurring_date_time": "every morning"}}, {"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "feed the dogs", "recurring_date_time": "every evening"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00000336.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO take out the trash ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Thursday ] [SL:DATE_TIME at 6 pm ] ] ] ] ] . ]", "parameters": {}, "sentence": "Set up a weekly reminder to take out the trash every Thursday at 6pm.", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "SET UP A WEEKLY REMINDER TO TAKE OUT THE TRASH EVERY THURSDAY AT SIX PM", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO TAKE OUT THE TRASH ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY THURSDAY ] [SL:DATE_TIME AT SIX PM ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00000336.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Set up a weekly reminder to take out the trash every Thursday at 6pm.", "seqlogical": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO take out the trash ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Thursday ] [SL:DATE_TIME at 6 pm ] ] ] ] ] . ]", "normalized_utterance": "SET UP A WEEKLY REMINDER TO TAKE OUT THE TRASH EVERY THURSDAY AT SIX PM", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO TAKE OUT THE TRASH ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY THURSDAY ] [SL:DATE_TIME AT SIX PM ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO [IN:GET_TODO [SL:TODO TAKE OUT THE TRASH ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY THURSDAY ] [SL:DATE_TIME AT SIX PM ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "every Thursday at 6 PM", "todo": "take out the trash"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00001374.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO check ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] ] ] on [SL:TODO the dates that we will have her dogs ] ] ] . ]", "parameters": {}, "sentence": "Remind me to check with my mom on the dates that we will have her dogs.", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "REMIND ME TO CHECK WITH MY MOM ON THE DATES THAT WE WILL HAVE HER DOGS", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO CHECK ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] ON [SL:TODO THE DATES THAT WE WILL HAVE HER DOGS ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00001374.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Remind me to check with my mom on the dates that we will have her dogs.", "seqlogical": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO check ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] ] ] on [SL:TODO the dates that we will have her dogs ] ] ] . ]", "normalized_utterance": "REMIND ME TO CHECK WITH MY MOM ON THE DATES THAT WE WILL HAVE HER DOGS", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO CHECK ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] ON [SL:TODO THE DATES THAT WE WILL HAVE HER DOGS ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:GET_TODO [SL:TODO CHECK ] [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] [SL:TODO THE DATES THAT WE WILL HAVE HER DOGS ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "check with my mom on the dates that we will have her dogs"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00002529.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE send an email to [SL:RECIPIENT the Safety Patrol ] ] ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Monday ] ] ] [SL:TODO with the schedule ] ] ] . ]", "parameters": {}, "sentence": "Remind me to send an email to the Safety Patrol every Monday with the schedule.", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "REMIND ME TO SEND AN EMAIL TO THE SAFETY PATROL EVERY MONDAY WITH THE SCHEDULE", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE SEND AN EMAIL TO [SL:RECIPIENT THE SAFETY PATROL ] ] ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY MONDAY ] ] ] [SL:TODO WITH THE SCHEDULE ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00002529.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Remind me to send an email to the Safety Patrol every Monday with the schedule.", "seqlogical": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE send an email to [SL:RECIPIENT the Safety Patrol ] ] ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Monday ] ] ] [SL:TODO with the schedule ] ] ] . ]", "normalized_utterance": "REMIND ME TO SEND AN EMAIL TO THE SAFETY PATROL EVERY MONDAY WITH THE SCHEDULE", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE SEND AN EMAIL TO [SL:RECIPIENT THE SAFETY PATROL ] ] ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY MONDAY ] ] ] [SL:TODO WITH THE SCHEDULE ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE [SL:RECIPIENT THE SAFETY PATROL ] ] ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY MONDAY ] ] ] [SL:TODO WITH THE SCHEDULE ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "every Monday", "todo": "send an email to the safety patrol with a schedule"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00003722.wav", "split": "test", "intent": "[IN:DELETE_REMINDER Can [SL:PERSON_REMINDED I ] remove the reminder to [SL:TODO [IN:GET_TODO [SL:TODO go shopping ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] ] ] [SL:DATE_TIME on Sunday ] ]", "parameters": {}, "sentence": "Can I remove the reminder to go shopping with mom on Sunday", "domain": "reminder", "gender": "Male", "native": "Unanswered", "normalized_utterance": "CAN I REMOVE THE REMINDER TO GO SHOPPING WITH MOM ON SUNDAY", "normalized_seqlogical": "[IN:DELETE_REMINDER CAN [SL:PERSON_REMINDED I ] REMOVE THE REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO GO SHOPPING ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] ] ] [SL:DATE_TIME ON SUNDAY ] ]", "raw_data": {"file_id": "test_1/reminder_test/00003722.wav", "domain": "reminder", "gender": "Male", "native": "Unanswered", "utterance": "Can I remove the reminder to go shopping with mom on Sunday", "seqlogical": "[IN:DELETE_REMINDER Can [SL:PERSON_REMINDED I ] remove the reminder to [SL:TODO [IN:GET_TODO [SL:TODO go shopping ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] ] ] [SL:DATE_TIME on Sunday ] ]", "normalized_utterance": "CAN I REMOVE THE REMINDER TO GO SHOPPING WITH MOM ON SUNDAY", "normalized_seqlogical": "[IN:DELETE_REMINDER CAN [SL:PERSON_REMINDED I ] REMOVE THE REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO GO SHOPPING ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] ] ] [SL:DATE_TIME ON SUNDAY ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_REMINDER [SL:PERSON_REMINDED I ] [SL:TODO [IN:GET_TODO [SL:TODO GO SHOPPING ] [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] ] ] [SL:DATE_TIME ON SUNDAY ] ]"}, "prediction": "", "function_calls": [{"name": "delete_reminder", "arguments": {"todo": "go shopping with my mom", "date_time": "Sunday"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00004908.wav", "split": "test", "intent": "[IN:DELETE_REMINDER cancel the reminder [SL:TODO [IN:GET_TODO with [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION brother ] ] ] ] ] [SL:DATE_TIME tomorrow afternoon ] ]", "parameters": {}, "sentence": "cancel the reminder with my brother tomorrow afternoon", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "CANCEL THE REMINDER WITH MY BROTHER TOMORROW AFTERNOON", "normalized_seqlogical": "[IN:DELETE_REMINDER CANCEL THE REMINDER [SL:TODO [IN:GET_TODO WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION BROTHER ] ] ] ] ] [SL:DATE_TIME TOMORROW AFTERNOON ] ]", "raw_data": {"file_id": "test_1/reminder_test/00004908.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "cancel the reminder with my brother tomorrow afternoon", "seqlogical": "[IN:DELETE_REMINDER cancel the reminder [SL:TODO [IN:GET_TODO with [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION brother ] ] ] ] ] [SL:DATE_TIME tomorrow afternoon ] ]", "normalized_utterance": "CANCEL THE REMINDER WITH MY BROTHER TOMORROW AFTERNOON", "normalized_seqlogical": "[IN:DELETE_REMINDER CANCEL THE REMINDER [SL:TODO [IN:GET_TODO WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION BROTHER ] ] ] ] ] [SL:DATE_TIME TOMORROW AFTERNOON ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_REMINDER [SL:TODO [IN:GET_TODO [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION BROTHER ] ] ] ] ] [SL:DATE_TIME TOMORROW AFTERNOON ] ]"}, "prediction": "", "function_calls": [{"name": "delete_reminder", "arguments": {"person_reminded": "my brother", "date_time": "tomorrow afternoon"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00001107.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO clean the bathrooms ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Saturday ] [SL:DATE_TIME at 2 : 00 pm ] ] ] ] ] . ]", "parameters": {}, "sentence": "Set up a weekly reminder to clean the bathrooms every Saturday at 2:00 pm.", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "SET UP A WEEKLY REMINDER TO CLEAN THE BATHROOMS EVERY SATURDAY AT TWO PM", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO CLEAN THE BATHROOMS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY SATURDAY ] [SL:DATE_TIME AT TWO PM ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00001107.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Set up a weekly reminder to clean the bathrooms every Saturday at 2:00 pm.", "seqlogical": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO clean the bathrooms ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Saturday ] [SL:DATE_TIME at 2 : 00 pm ] ] ] ] ] . ]", "normalized_utterance": "SET UP A WEEKLY REMINDER TO CLEAN THE BATHROOMS EVERY SATURDAY AT TWO PM", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO CLEAN THE BATHROOMS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY SATURDAY ] [SL:DATE_TIME AT TWO PM ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO [IN:GET_TODO [SL:TODO CLEAN THE BATHROOMS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY SATURDAY ] [SL:DATE_TIME AT TWO PM ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "every Saturday at 2pm", "todo": "clean the bathrooms"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00000417.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO submit my payment voucher ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME by noon ] [SL:FREQUENCY every Wednesday ] ] ] ] ] . ]", "parameters": {}, "sentence": "Set a weekly reminder to submit my payment voucher by noon every Wednesday.", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "SET A WEEKLY REMINDER TO SUBMIT MY PAYMENT VOUCHER BY NOON EVERY WEDNESDAY", "normalized_seqlogical": "[IN:CREATE_REMINDER SET A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO SUBMIT MY PAYMENT VOUCHER ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME BY NOON ] [SL:FREQUENCY EVERY WEDNESDAY ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00000417.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Set a weekly reminder to submit my payment voucher by noon every Wednesday.", "seqlogical": "[IN:CREATE_REMINDER Set a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO submit my payment voucher ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME by noon ] [SL:FREQUENCY every Wednesday ] ] ] ] ] . ]", "normalized_utterance": "SET A WEEKLY REMINDER TO SUBMIT MY PAYMENT VOUCHER BY NOON EVERY WEDNESDAY", "normalized_seqlogical": "[IN:CREATE_REMINDER SET A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO SUBMIT MY PAYMENT VOUCHER ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME BY NOON ] [SL:FREQUENCY EVERY WEDNESDAY ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO [IN:GET_TODO [SL:TODO SUBMIT MY PAYMENT VOUCHER ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME BY NOON ] [SL:FREQUENCY EVERY WEDNESDAY ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "every Wednesday", "todo": "submit my payment voucher", "date_time": "noon"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00001839.wav", "split": "test", "intent": "[IN:DELETE_REMINDER Delete [SL:AMOUNT all ] future reminders of [SL:TODO [IN:GET_TODO [SL:TODO credit card payments ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME on the 26th ] of [SL:FREQUENCY each month ] ] ] ] ] stating immediately . ]", "parameters": {}, "sentence": "Delete all future reminders of credit card payments on the 26th of each month stating immediately.", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "DELETE ALL FUTURE REMINDERS OF CREDIT CARD PAYMENTS ON THE TWENTY SIXTH OF EACH MONTH STATING IMMEDIATELY", "normalized_seqlogical": "[IN:DELETE_REMINDER DELETE [SL:AMOUNT ALL ] FUTURE REMINDERS OF [SL:TODO [IN:GET_TODO [SL:TODO CREDIT CARD PAYMENTS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME ON THE TWENTY SIXTH ] OF [SL:FREQUENCY EACH MONTH ] ] ] ] ] STATING IMMEDIATELY ]", "raw_data": {"file_id": "test_0/reminder_test_0/00001839.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Delete all future reminders of credit card payments on the 26th of each month stating immediately.", "seqlogical": "[IN:DELETE_REMINDER Delete [SL:AMOUNT all ] future reminders of [SL:TODO [IN:GET_TODO [SL:TODO credit card payments ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME on the 26th ] of [SL:FREQUENCY each month ] ] ] ] ] stating immediately . ]", "normalized_utterance": "DELETE ALL FUTURE REMINDERS OF CREDIT CARD PAYMENTS ON THE TWENTY SIXTH OF EACH MONTH STATING IMMEDIATELY", "normalized_seqlogical": "[IN:DELETE_REMINDER DELETE [SL:AMOUNT ALL ] FUTURE REMINDERS OF [SL:TODO [IN:GET_TODO [SL:TODO CREDIT CARD PAYMENTS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME ON THE TWENTY SIXTH ] OF [SL:FREQUENCY EACH MONTH ] ] ] ] ] STATING IMMEDIATELY ]", "decoupled_normalized_seqlogical": "[IN:DELETE_REMINDER [SL:AMOUNT ALL ] [SL:TODO [IN:GET_TODO [SL:TODO CREDIT CARD PAYMENTS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME ON THE TWENTY SIXTH ] [SL:FREQUENCY EACH MONTH ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_reminder", "arguments": {"todo": "credit card payments", "recurring_date_time": "26th of each month"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00001332.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO stop and rent a movie for movie night ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION friends ] ] ] ] ] [SL:DATE_TIME on Saturday ] . ]", "parameters": {}, "sentence": "Remind me to stop and rent a movie for movie night with friends on Saturday.", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "REMIND ME TO STOP AND RENT A MOVIE FOR MOVIE NIGHT WITH FRIENDS ON SATURDAY", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO STOP AND RENT A MOVIE FOR MOVIE NIGHT ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION FRIENDS ] ] ] ] ] [SL:DATE_TIME ON SATURDAY ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00001332.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Remind me to stop and rent a movie for movie night with friends on Saturday.", "seqlogical": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO stop and rent a movie for movie night ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION friends ] ] ] ] ] [SL:DATE_TIME on Saturday ] . ]", "normalized_utterance": "REMIND ME TO STOP AND RENT A MOVIE FOR MOVIE NIGHT WITH FRIENDS ON SATURDAY", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO STOP AND RENT A MOVIE FOR MOVIE NIGHT ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION FRIENDS ] ] ] ] ] [SL:DATE_TIME ON SATURDAY ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:GET_TODO [SL:TODO STOP AND RENT A MOVIE FOR MOVIE NIGHT ] [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION FRIENDS ] ] ] ] ] [SL:DATE_TIME ON SATURDAY ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "stop and rent a movie for movie night with friends", "date_time": "Saturday"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00003492.wav", "split": "test", "intent": "[IN:DELETE_REMINDER Dad isn't able to meet us for dinner tonight , so please delete [SL:PERSON_REMINDED our ] [SL:TODO [IN:GET_TODO [SL:TODO dinner ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION dad ] ] ] ] ] reminder . ]", "parameters": {}, "sentence": "Dad isn't able to meet us for dinner tonight, so please delete our dinner with dad reminder.", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "DAD ISN'T ABLE TO MEET US FOR DINNER TONIGHT SO PLEASE DELETE OUR DINNER WITH DAD REMINDER", "normalized_seqlogical": "[IN:DELETE_REMINDER DAD ISN'T ABLE TO MEET US FOR DINNER TONIGHT SO PLEASE DELETE [SL:PERSON_REMINDED OUR ] [SL:TODO [IN:GET_TODO [SL:TODO DINNER ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ] ] REMINDER ]", "raw_data": {"file_id": "test_1/reminder_test/00003492.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Dad isn't able to meet us for dinner tonight, so please delete our dinner with dad reminder.", "seqlogical": "[IN:DELETE_REMINDER Dad isn't able to meet us for dinner tonight , so please delete [SL:PERSON_REMINDED our ] [SL:TODO [IN:GET_TODO [SL:TODO dinner ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION dad ] ] ] ] ] reminder . ]", "normalized_utterance": "DAD ISN'T ABLE TO MEET US FOR DINNER TONIGHT SO PLEASE DELETE OUR DINNER WITH DAD REMINDER", "normalized_seqlogical": "[IN:DELETE_REMINDER DAD ISN'T ABLE TO MEET US FOR DINNER TONIGHT SO PLEASE DELETE [SL:PERSON_REMINDED OUR ] [SL:TODO [IN:GET_TODO [SL:TODO DINNER ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ] ] REMINDER ]", "decoupled_normalized_seqlogical": "[IN:DELETE_REMINDER [SL:PERSON_REMINDED OUR ] [SL:TODO [IN:GET_TODO [SL:TODO DINNER ] [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION DAD ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_reminder", "arguments": {"todo": "dinner with Dad"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00003598.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Setup a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder for [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO fertilize my plants ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME on Tuesday mornings ] ] ] ] ] ]", "parameters": {}, "sentence": "Setup a weekly reminder for me  to   fertilize my plants on Tuesday mornings", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "SETUP A WEEKLY REMINDER FOR ME TO FERTILIZE MY PLANTS ON TUESDAY MORNINGS", "normalized_seqlogical": "[IN:CREATE_REMINDER SETUP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER FOR [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO FERTILIZE MY PLANTS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME ON TUESDAY MORNINGS ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00003598.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Setup a weekly reminder for me  to   fertilize my plants on Tuesday mornings", "seqlogical": "[IN:CREATE_REMINDER Setup a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder for [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO fertilize my plants ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME on Tuesday mornings ] ] ] ] ] ]", "normalized_utterance": "SETUP A WEEKLY REMINDER FOR ME TO FERTILIZE MY PLANTS ON TUESDAY MORNINGS", "normalized_seqlogical": "[IN:CREATE_REMINDER SETUP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER FOR [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO FERTILIZE MY PLANTS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME ON TUESDAY MORNINGS ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:PERSON_REMINDED ME ] [SL:TODO [IN:GET_TODO [SL:TODO FERTILIZE MY PLANTS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME ON TUESDAY MORNINGS ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "weekly", "todo": "fertilize my plants", "date_time": "Tuesday morning"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00000401.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] of [SL:TODO [IN:GET_TODO [SL:TODO my lunch date ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] ] ] [SL:DATE_TIME next Saturday at 1 pm ] . ]", "parameters": {}, "sentence": "Remind me of my lunch date with mom next Saturday at 1pm.", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "REMIND ME OF MY LUNCH DATE WITH MOM NEXT SATURDAY AT ONE PM", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] OF [SL:TODO [IN:GET_TODO [SL:TODO MY LUNCH DATE ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] ] ] [SL:DATE_TIME NEXT SATURDAY AT ONE PM ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00000401.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Remind me of my lunch date with mom next Saturday at 1pm.", "seqlogical": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] of [SL:TODO [IN:GET_TODO [SL:TODO my lunch date ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] ] ] [SL:DATE_TIME next Saturday at 1 pm ] . ]", "normalized_utterance": "REMIND ME OF MY LUNCH DATE WITH MOM NEXT SATURDAY AT ONE PM", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] OF [SL:TODO [IN:GET_TODO [SL:TODO MY LUNCH DATE ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] ] ] [SL:DATE_TIME NEXT SATURDAY AT ONE PM ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:GET_TODO [SL:TODO MY LUNCH DATE ] [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] ] ] [SL:DATE_TIME NEXT SATURDAY AT ONE PM ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "lunch date with mom", "date_time": "next Saturday at 1pm"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00002381.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set a reminder for [SL:TODO [IN:GET_TODO [SL:TODO the party ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION friends ] ] ] ] ] [SL:DATE_TIME on Friday ] ]", "parameters": {}, "sentence": "Set a reminder for the party with my friends on Friday", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "SET A REMINDER FOR THE PARTY WITH MY FRIENDS ON FRIDAY", "normalized_seqlogical": "[IN:CREATE_REMINDER SET A REMINDER FOR [SL:TODO [IN:GET_TODO [SL:TODO THE PARTY ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION FRIENDS ] ] ] ] ] [SL:DATE_TIME ON FRIDAY ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00002381.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Set a reminder for the party with my friends on Friday", "seqlogical": "[IN:CREATE_REMINDER Set a reminder for [SL:TODO [IN:GET_TODO [SL:TODO the party ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION friends ] ] ] ] ] [SL:DATE_TIME on Friday ] ]", "normalized_utterance": "SET A REMINDER FOR THE PARTY WITH MY FRIENDS ON FRIDAY", "normalized_seqlogical": "[IN:CREATE_REMINDER SET A REMINDER FOR [SL:TODO [IN:GET_TODO [SL:TODO THE PARTY ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION FRIENDS ] ] ] ] ] [SL:DATE_TIME ON FRIDAY ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:TODO [IN:GET_TODO [SL:TODO THE PARTY ] [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION FRIENDS ] ] ] ] ] [SL:DATE_TIME ON FRIDAY ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "my friends", "todo": "party", "date_time": "Friday"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00000090.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:SEND_MESSAGE send an email to [SL:RECIPIENT Amy ] about [SL:CONTENT_EXACT [IN:GET_EVENT [SL:CATEGORY_EVENT the conference call ] ] ] ] ] [SL:DATE_TIME tomorrow afternoon ] . ]", "parameters": {}, "sentence": "Remind me to send an email to Amy about the conference call tomorrow afternoon.", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "REMIND ME TO SEND AN EMAIL TO AMY ABOUT THE CONFERENCE CALL TOMORROW AFTERNOON", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:SEND_MESSAGE SEND AN EMAIL TO [SL:RECIPIENT AMY ] ABOUT [SL:CONTENT_EXACT [IN:GET_EVENT [SL:CATEGORY_EVENT THE CONFERENCE CALL ] ] ] ] ] [SL:DATE_TIME TOMORROW AFTERNOON ] ]", "raw_data": {"file_id": "test_1/reminder_test/00000090.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Remind me to send an email to Amy about the conference call tomorrow afternoon.", "seqlogical": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:SEND_MESSAGE send an email to [SL:RECIPIENT Amy ] about [SL:CONTENT_EXACT [IN:GET_EVENT [SL:CATEGORY_EVENT the conference call ] ] ] ] ] [SL:DATE_TIME tomorrow afternoon ] . ]", "normalized_utterance": "REMIND ME TO SEND AN EMAIL TO AMY ABOUT THE CONFERENCE CALL TOMORROW AFTERNOON", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:SEND_MESSAGE SEND AN EMAIL TO [SL:RECIPIENT AMY ] ABOUT [SL:CONTENT_EXACT [IN:GET_EVENT [SL:CATEGORY_EVENT THE CONFERENCE CALL ] ] ] ] ] [SL:DATE_TIME TOMORROW AFTERNOON ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:SEND_MESSAGE [SL:RECIPIENT AMY ] [SL:CONTENT_EXACT [IN:GET_EVENT [SL:CATEGORY_EVENT THE CONFERENCE CALL ] ] ] ] ] [SL:DATE_TIME TOMORROW AFTERNOON ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "send an email to Amy about the conference call", "date_time": "tomorrow afternoon"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00001107.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO clean the bathrooms ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Saturday ] [SL:DATE_TIME at 2 : 00 pm ] ] ] ] ] . ]", "parameters": {}, "sentence": "Set up a weekly reminder to clean the bathrooms every Saturday at 2:00 pm.", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "SET UP A WEEKLY REMINDER TO CLEAN THE BATHROOMS EVERY SATURDAY AT TWO PM", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO CLEAN THE BATHROOMS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY SATURDAY ] [SL:DATE_TIME AT TWO PM ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00001107.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Set up a weekly reminder to clean the bathrooms every Saturday at 2:00 pm.", "seqlogical": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO clean the bathrooms ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Saturday ] [SL:DATE_TIME at 2 : 00 pm ] ] ] ] ] . ]", "normalized_utterance": "SET UP A WEEKLY REMINDER TO CLEAN THE BATHROOMS EVERY SATURDAY AT TWO PM", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO CLEAN THE BATHROOMS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY SATURDAY ] [SL:DATE_TIME AT TWO PM ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO [IN:GET_TODO [SL:TODO CLEAN THE BATHROOMS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY SATURDAY ] [SL:DATE_TIME AT TWO PM ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "every Saturday at 2 PM", "todo": "clean the bathrooms"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00002976.wav", "split": "test", "intent": "[IN:CREATE_REMINDER can you set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO mow the grass ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY on Sundays ] ] ] ] ] ]", "parameters": {}, "sentence": "can you set up a weekly reminder to mow the grass on Sundays", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "CAN YOU SET UP A WEEKLY REMINDER TO MOW THE GRASS ON SUNDAYS", "normalized_seqlogical": "[IN:CREATE_REMINDER CAN YOU SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO MOW THE GRASS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY ON SUNDAYS ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00002976.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "can you set up a weekly reminder to mow the grass on Sundays", "seqlogical": "[IN:CREATE_REMINDER can you set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO mow the grass ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY on Sundays ] ] ] ] ] ]", "normalized_utterance": "CAN YOU SET UP A WEEKLY REMINDER TO MOW THE GRASS ON SUNDAYS", "normalized_seqlogical": "[IN:CREATE_REMINDER CAN YOU SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO MOW THE GRASS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY ON SUNDAYS ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO [IN:GET_TODO [SL:TODO MOW THE GRASS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY ON SUNDAYS ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "weekly", "todo": "mow the grass on Sundays"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00000855.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set up a reminder for the [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] [SL:TODO volunteering sessions ] ] ] ]", "parameters": {}, "sentence": "Set up a reminder for the weekly volunteering sessions", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "SET UP A REMINDER FOR THE WEEKLY VOLUNTEERING SESSIONS", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A REMINDER FOR THE [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO VOLUNTEERING SESSIONS ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00000855.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Set up a reminder for the weekly volunteering sessions", "seqlogical": "[IN:CREATE_REMINDER Set up a reminder for the [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] [SL:TODO volunteering sessions ] ] ] ]", "normalized_utterance": "SET UP A REMINDER FOR THE WEEKLY VOLUNTEERING SESSIONS", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A REMINDER FOR THE [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO VOLUNTEERING SESSIONS ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO VOLUNTEERING SESSIONS ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "weekly volunteering sessions", "recurring_date_time": "weekly"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00001763.wav", "split": "test", "intent": "[IN:CREATE_REMINDER I need to [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE email [SL:RECIPIENT Peter ] ] ] [SL:DATE_TIME tommorw at 4 PM ] ] ] . Can you remind [SL:PERSON_REMINDED me ] [SL:DATE_TIME at 3 PM ] ? ]", "parameters": {}, "sentence": "I need to email Peter tommorw at 4PM. Can you remind me at 3PM?", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "I NEED TO EMAIL PETER TOMMORW AT FOUR PM CAN YOU REMIND ME AT THREE PM", "normalized_seqlogical": "[IN:CREATE_REMINDER I NEED TO [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE EMAIL [SL:RECIPIENT PETER ] ] ] [SL:DATE_TIME TOMMORW AT FOUR PM ] ] ] CAN YOU REMIND [SL:PERSON_REMINDED ME ] [SL:DATE_TIME AT THREE PM ] ]", "raw_data": {"file_id": "test_1/reminder_test/00001763.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "I need to email Peter tommorw at 4PM. Can you remind me at 3PM?", "seqlogical": "[IN:CREATE_REMINDER I need to [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE email [SL:RECIPIENT Peter ] ] ] [SL:DATE_TIME tommorw at 4 PM ] ] ] . Can you remind [SL:PERSON_REMINDED me ] [SL:DATE_TIME at 3 PM ] ? ]", "normalized_utterance": "I NEED TO EMAIL PETER TOMMORW AT FOUR PM CAN YOU REMIND ME AT THREE PM", "normalized_seqlogical": "[IN:CREATE_REMINDER I NEED TO [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE EMAIL [SL:RECIPIENT PETER ] ] ] [SL:DATE_TIME TOMMORW AT FOUR PM ] ] ] CAN YOU REMIND [SL:PERSON_REMINDED ME ] [SL:DATE_TIME AT THREE PM ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE [SL:RECIPIENT PETER ] ] ] [SL:DATE_TIME TOMMORW AT FOUR PM ] ] ] [SL:PERSON_REMINDED ME ] [SL:DATE_TIME AT THREE PM ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "email Peter", "date_time": "tomorrow at 3pm"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00000861.wav", "split": "test", "intent": "[IN:CREATE_REMINDER remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:SEND_MESSAGE text [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] ] ] [SL:DATE_TIME by 9 pm tonight ] ]", "parameters": {}, "sentence": "remind me to text mom by 9pm tonight", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "REMIND ME TO TEXT MOM BY NINE PM TONIGHT", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] ] ] [SL:DATE_TIME BY NINE PM TONIGHT ] ]", "raw_data": {"file_id": "test_1/reminder_test/00000861.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "remind me to text mom by 9pm tonight", "seqlogical": "[IN:CREATE_REMINDER remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:SEND_MESSAGE text [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] ] ] [SL:DATE_TIME by 9 pm tonight ] ]", "normalized_utterance": "REMIND ME TO TEXT MOM BY NINE PM TONIGHT", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:SEND_MESSAGE TEXT [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] ] ] [SL:DATE_TIME BY NINE PM TONIGHT ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] ] ] [SL:DATE_TIME BY NINE PM TONIGHT ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "text mom", "date_time": "today at 9pm"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00003671.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Please remind [SL:PERSON_REMINDED me ] [SL:DATE_TIME 45 minutes before ] [SL:TODO [IN:GET_TODO my [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] [SL:TODO dance class ] ] ] . ]", "parameters": {}, "sentence": "Please remind me 45 minutes before my weekly dance class.", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "PLEASE REMIND ME FORTY FIVE MINUTES BEFORE MY WEEKLY DANCE CLASS", "normalized_seqlogical": "[IN:CREATE_REMINDER PLEASE REMIND [SL:PERSON_REMINDED ME ] [SL:DATE_TIME FORTY FIVE MINUTES BEFORE ] [SL:TODO [IN:GET_TODO MY [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO DANCE CLASS ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00003671.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Please remind me 45 minutes before my weekly dance class.", "seqlogical": "[IN:CREATE_REMINDER Please remind [SL:PERSON_REMINDED me ] [SL:DATE_TIME 45 minutes before ] [SL:TODO [IN:GET_TODO my [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] [SL:TODO dance class ] ] ] . ]", "normalized_utterance": "PLEASE REMIND ME FORTY FIVE MINUTES BEFORE MY WEEKLY DANCE CLASS", "normalized_seqlogical": "[IN:CREATE_REMINDER PLEASE REMIND [SL:PERSON_REMINDED ME ] [SL:DATE_TIME FORTY FIVE MINUTES BEFORE ] [SL:TODO [IN:GET_TODO MY [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO DANCE CLASS ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:DATE_TIME FORTY FIVE MINUTES BEFORE ] [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO DANCE CLASS ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "weekly dance class", "date_time": "45 minutes before"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00003027.wav", "split": "test", "intent": "[IN:GET_REMINDER_LOCATION where is [SL:PERSON_REMINDED my ] [SL:ORDINAL next ] reminder [SL:TODO [IN:GET_TODO with [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION sister ] ] ] ] ] ]", "parameters": {}, "sentence": "where is my next reminder with my sister", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "WHERE IS MY NEXT REMINDER WITH MY SISTER", "normalized_seqlogical": "[IN:GET_REMINDER_LOCATION WHERE IS [SL:PERSON_REMINDED MY ] [SL:ORDINAL NEXT ] REMINDER [SL:TODO [IN:GET_TODO WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION SISTER ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00003027.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "where is my next reminder with my sister", "seqlogical": "[IN:GET_REMINDER_LOCATION where is [SL:PERSON_REMINDED my ] [SL:ORDINAL next ] reminder [SL:TODO [IN:GET_TODO with [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION sister ] ] ] ] ] ]", "normalized_utterance": "WHERE IS MY NEXT REMINDER WITH MY SISTER", "normalized_seqlogical": "[IN:GET_REMINDER_LOCATION WHERE IS [SL:PERSON_REMINDED MY ] [SL:ORDINAL NEXT ] REMINDER [SL:TODO [IN:GET_TODO WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION SISTER ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_REMINDER_LOCATION [SL:PERSON_REMINDED MY ] [SL:ORDINAL NEXT ] [SL:TODO [IN:GET_TODO [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION SISTER ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_reminder_location", "arguments": {"person_reminded": "sister", "todo": "next reminder"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00001332.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO stop and rent a movie for movie night ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION friends ] ] ] ] ] [SL:DATE_TIME on Saturday ] . ]", "parameters": {}, "sentence": "Remind me to stop and rent a movie for movie night with friends on Saturday.", "domain": "reminder", "gender": "Male", "native": "No", "normalized_utterance": "REMIND ME TO STOP AND RENT A MOVIE FOR MOVIE NIGHT WITH FRIENDS ON SATURDAY", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO STOP AND RENT A MOVIE FOR MOVIE NIGHT ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION FRIENDS ] ] ] ] ] [SL:DATE_TIME ON SATURDAY ] ]", "raw_data": {"file_id": "test_1/reminder_test/00001332.wav", "domain": "reminder", "gender": "Male", "native": "No", "utterance": "Remind me to stop and rent a movie for movie night with friends on Saturday.", "seqlogical": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO stop and rent a movie for movie night ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION friends ] ] ] ] ] [SL:DATE_TIME on Saturday ] . ]", "normalized_utterance": "REMIND ME TO STOP AND RENT A MOVIE FOR MOVIE NIGHT WITH FRIENDS ON SATURDAY", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO STOP AND RENT A MOVIE FOR MOVIE NIGHT ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION FRIENDS ] ] ] ] ] [SL:DATE_TIME ON SATURDAY ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:GET_TODO [SL:TODO STOP AND RENT A MOVIE FOR MOVIE NIGHT ] [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION FRIENDS ] ] ] ] ] [SL:DATE_TIME ON SATURDAY ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "stop and rent a movie for movie night with my friends", "date_time": "Saturday"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00000032.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Create [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder starting [SL:DATE_TIME Friday ] for [SL:TODO [IN:GET_TODO [SL:TODO theatre rehearsal ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every ] [SL:DATE_TIME Monday at 7 pm ] ] ] ] ] . ]", "parameters": {}, "sentence": "Create weekly reminder starting Friday for theatre rehearsal every Monday at 7pm.", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "CREATE WEEKLY REMINDER STARTING FRIDAY FOR THEATRE REHEARSAL EVERY MONDAY AT SEVEN PM", "normalized_seqlogical": "[IN:CREATE_REMINDER CREATE [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER STARTING [SL:DATE_TIME FRIDAY ] FOR [SL:TODO [IN:GET_TODO [SL:TODO THEATRE REHEARSAL ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY ] [SL:DATE_TIME MONDAY AT SEVEN PM ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00000032.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Create weekly reminder starting Friday for theatre rehearsal every Monday at 7pm.", "seqlogical": "[IN:CREATE_REMINDER Create [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder starting [SL:DATE_TIME Friday ] for [SL:TODO [IN:GET_TODO [SL:TODO theatre rehearsal ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every ] [SL:DATE_TIME Monday at 7 pm ] ] ] ] ] . ]", "normalized_utterance": "CREATE WEEKLY REMINDER STARTING FRIDAY FOR THEATRE REHEARSAL EVERY MONDAY AT SEVEN PM", "normalized_seqlogical": "[IN:CREATE_REMINDER CREATE [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER STARTING [SL:DATE_TIME FRIDAY ] FOR [SL:TODO [IN:GET_TODO [SL:TODO THEATRE REHEARSAL ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY ] [SL:DATE_TIME MONDAY AT SEVEN PM ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:DATE_TIME FRIDAY ] [SL:TODO [IN:GET_TODO [SL:TODO THEATRE REHEARSAL ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY ] [SL:DATE_TIME MONDAY AT SEVEN PM ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "every Monday at 7pm", "todo": "theater rehearsal", "date_time": "starting Friday"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00002790.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Please set up a reminder of [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] [SL:TODO office meeting ] ] ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every monday ] [SL:DATE_TIME at 8 : 00 am ] ] ] ]", "parameters": {}, "sentence": "Please set up a reminder of weekly office meeting every monday at 8:00 am", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "PLEASE SET UP A REMINDER OF WEEKLY OFFICE MEETING EVERY MONDAY AT EIGHT AM", "normalized_seqlogical": "[IN:CREATE_REMINDER PLEASE SET UP A REMINDER OF [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO OFFICE MEETING ] ] ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY MONDAY ] [SL:DATE_TIME AT EIGHT AM ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00002790.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Please set up a reminder of weekly office meeting every monday at 8:00 am", "seqlogical": "[IN:CREATE_REMINDER Please set up a reminder of [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] [SL:TODO office meeting ] ] ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every monday ] [SL:DATE_TIME at 8 : 00 am ] ] ] ]", "normalized_utterance": "PLEASE SET UP A REMINDER OF WEEKLY OFFICE MEETING EVERY MONDAY AT EIGHT AM", "normalized_seqlogical": "[IN:CREATE_REMINDER PLEASE SET UP A REMINDER OF [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO OFFICE MEETING ] ] ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY MONDAY ] [SL:DATE_TIME AT EIGHT AM ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO OFFICE MEETING ] ] ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY MONDAY ] [SL:DATE_TIME AT EIGHT AM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "every Monday at 8 AM", "todo": "weekly office meeting"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00000890.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO take the trash out ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Wednesday night ] ] ] ] ] . ]", "parameters": {}, "sentence": "Set up a weekly reminder to take the trash out every Wednesday night.", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "SET UP A WEEKLY REMINDER TO TAKE THE TRASH OUT EVERY WEDNESDAY NIGHT", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO TAKE THE TRASH OUT ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY WEDNESDAY NIGHT ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00000890.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Set up a weekly reminder to take the trash out every Wednesday night.", "seqlogical": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO take the trash out ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Wednesday night ] ] ] ] ] . ]", "normalized_utterance": "SET UP A WEEKLY REMINDER TO TAKE THE TRASH OUT EVERY WEDNESDAY NIGHT", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO TAKE THE TRASH OUT ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY WEDNESDAY NIGHT ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO [IN:GET_TODO [SL:TODO TAKE THE TRASH OUT ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY WEDNESDAY NIGHT ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "every Wednesday night", "todo": "take the trash out"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00000515.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set up [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO pick up Jill ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME on Tuesday mornings ] ] ] ] ] ]", "parameters": {}, "sentence": "Set up weekly reminder to pick up Jill on Tuesday mornings", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "SET UP WEEKLY REMINDER TO PICK UP JILL ON TUESDAY MORNINGS", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO PICK UP JILL ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME ON TUESDAY MORNINGS ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00000515.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Set up weekly reminder to pick up Jill on Tuesday mornings", "seqlogical": "[IN:CREATE_REMINDER Set up [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO pick up Jill ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME on Tuesday mornings ] ] ] ] ] ]", "normalized_utterance": "SET UP WEEKLY REMINDER TO PICK UP JILL ON TUESDAY MORNINGS", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO PICK UP JILL ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME ON TUESDAY MORNINGS ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO [IN:GET_TODO [SL:TODO PICK UP JILL ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME ON TUESDAY MORNINGS ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "weekly", "todo": "pick up Jill", "date_time": "Tuesday mornings"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00003595.wav", "split": "test", "intent": "[IN:GET_REMINDER find [SL:AMOUNT all ] reminders that [SL:PERSON_REMINDED I ] set [SL:TODO [IN:GET_TODO [SL:TODO appointments ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION brother ] [SL:CONTACT Charles ] ] ] ] ] ]", "parameters": {}, "sentence": "find all reminders that I set appointments with my brother Charles", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "FIND ALL REMINDERS THAT I SET APPOINTMENTS WITH MY BROTHER CHARLES", "normalized_seqlogical": "[IN:GET_REMINDER FIND [SL:AMOUNT ALL ] REMINDERS THAT [SL:PERSON_REMINDED I ] SET [SL:TODO [IN:GET_TODO [SL:TODO APPOINTMENTS ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION BROTHER ] [SL:CONTACT CHARLES ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00003595.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "find all reminders that I set appointments with my brother Charles", "seqlogical": "[IN:GET_REMINDER find [SL:AMOUNT all ] reminders that [SL:PERSON_REMINDED I ] set [SL:TODO [IN:GET_TODO [SL:TODO appointments ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION brother ] [SL:CONTACT Charles ] ] ] ] ] ]", "normalized_utterance": "FIND ALL REMINDERS THAT I SET APPOINTMENTS WITH MY BROTHER CHARLES", "normalized_seqlogical": "[IN:GET_REMINDER FIND [SL:AMOUNT ALL ] REMINDERS THAT [SL:PERSON_REMINDED I ] SET [SL:TODO [IN:GET_TODO [SL:TODO APPOINTMENTS ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION BROTHER ] [SL:CONTACT CHARLES ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_REMINDER [SL:AMOUNT ALL ] [SL:PERSON_REMINDED I ] [SL:TODO [IN:GET_TODO [SL:TODO APPOINTMENTS ] [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION BROTHER ] [SL:CONTACT CHARLES ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_reminder", "arguments": {"person_reminded": "Charles", "todo": "appointments"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00003600.wav", "split": "test", "intent": "[IN:GET_REMINDER_DATE_TIME When is [SL:PERSON_REMINDED my ] [SL:ORDINAL next ] alert for [SL:TODO [IN:GET_TODO [SL:TODO my lunch gathering ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:MUTUAL_EMPLOYER work ] [SL:TYPE_RELATION friends ] ] ] ] ] ? ]", "parameters": {}, "sentence": "When is my next alert for my lunch gathering with my work friends?", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "WHEN IS MY NEXT ALERT FOR MY LUNCH GATHERING WITH MY WORK FRIENDS", "normalized_seqlogical": "[IN:GET_REMINDER_DATE_TIME WHEN IS [SL:PERSON_REMINDED MY ] [SL:ORDINAL NEXT ] ALERT FOR [SL:TODO [IN:GET_TODO [SL:TODO MY LUNCH GATHERING ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:MUTUAL_EMPLOYER WORK ] [SL:TYPE_RELATION FRIENDS ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00003600.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "When is my next alert for my lunch gathering with my work friends?", "seqlogical": "[IN:GET_REMINDER_DATE_TIME When is [SL:PERSON_REMINDED my ] [SL:ORDINAL next ] alert for [SL:TODO [IN:GET_TODO [SL:TODO my lunch gathering ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:MUTUAL_EMPLOYER work ] [SL:TYPE_RELATION friends ] ] ] ] ] ? ]", "normalized_utterance": "WHEN IS MY NEXT ALERT FOR MY LUNCH GATHERING WITH MY WORK FRIENDS", "normalized_seqlogical": "[IN:GET_REMINDER_DATE_TIME WHEN IS [SL:PERSON_REMINDED MY ] [SL:ORDINAL NEXT ] ALERT FOR [SL:TODO [IN:GET_TODO [SL:TODO MY LUNCH GATHERING ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:MUTUAL_EMPLOYER WORK ] [SL:TYPE_RELATION FRIENDS ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_REMINDER_DATE_TIME [SL:PERSON_REMINDED MY ] [SL:ORDINAL NEXT ] [SL:TODO [IN:GET_TODO [SL:TODO MY LUNCH GATHERING ] [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:MUTUAL_EMPLOYER WORK ] [SL:TYPE_RELATION FRIENDS ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_reminder_date_time", "arguments": {"todo": "lunch gathering with my work friends"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00002226.wav", "split": "test", "intent": "[IN:CREATE_REMINDER remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO set up ] a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] [SL:TODO exercise schedule ] ] ] ]", "parameters": {}, "sentence": "remind me to set up a weekly exercise schedule", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "REMIND ME TO SET UP A WEEKLY EXERCISE SCHEDULE", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO SET UP ] A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO EXERCISE SCHEDULE ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00002226.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "remind me to set up a weekly exercise schedule", "seqlogical": "[IN:CREATE_REMINDER remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO set up ] a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] [SL:TODO exercise schedule ] ] ] ]", "normalized_utterance": "REMIND ME TO SET UP A WEEKLY EXERCISE SCHEDULE", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO SET UP ] A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO EXERCISE SCHEDULE ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:GET_TODO [SL:TODO SET UP ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO EXERCISE SCHEDULE ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "set up a weekly exercise schedule"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00000363.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO turn off the air conditioning ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every night ] ] ] [SL:TODO before going to bed ] ] ] . ]", "parameters": {}, "sentence": "Remind me to turn off the air conditioning every night before going to bed.", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "REMIND ME TO TURN OFF THE AIR CONDITIONING EVERY NIGHT BEFORE GOING TO BED", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO TURN OFF THE AIR CONDITIONING ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY NIGHT ] ] ] [SL:TODO BEFORE GOING TO BED ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00000363.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Remind me to turn off the air conditioning every night before going to bed.", "seqlogical": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO turn off the air conditioning ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every night ] ] ] [SL:TODO before going to bed ] ] ] . ]", "normalized_utterance": "REMIND ME TO TURN OFF THE AIR CONDITIONING EVERY NIGHT BEFORE GOING TO BED", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO TURN OFF THE AIR CONDITIONING ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY NIGHT ] ] ] [SL:TODO BEFORE GOING TO BED ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:GET_TODO [SL:TODO TURN OFF THE AIR CONDITIONING ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY NIGHT ] ] ] [SL:TODO BEFORE GOING TO BED ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "turn off the air conditioning every night before going to bed", "recurring_date_time": "every night"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00000491.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Create a reminder to [SL:TODO [IN:GET_TODO [SL:TODO exercise ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY daily ] [SL:DATE_TIME at 6 am ] ] ] ] ] , [SL:DATE_TIME 30 minutes before ] ]", "parameters": {}, "sentence": "Create a reminder to exercise daily at 6am, 30 minutes before", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "CREATE A REMINDER TO EXERCISE DAILY AT SIX AM THIRTY MINUTES BEFORE", "normalized_seqlogical": "[IN:CREATE_REMINDER CREATE A REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO EXERCISE ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY DAILY ] [SL:DATE_TIME AT SIX AM ] ] ] ] ] [SL:DATE_TIME THIRTY MINUTES BEFORE ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00000491.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Create a reminder to exercise daily at 6am, 30 minutes before", "seqlogical": "[IN:CREATE_REMINDER Create a reminder to [SL:TODO [IN:GET_TODO [SL:TODO exercise ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY daily ] [SL:DATE_TIME at 6 am ] ] ] ] ] , [SL:DATE_TIME 30 minutes before ] ]", "normalized_utterance": "CREATE A REMINDER TO EXERCISE DAILY AT SIX AM THIRTY MINUTES BEFORE", "normalized_seqlogical": "[IN:CREATE_REMINDER CREATE A REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO EXERCISE ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY DAILY ] [SL:DATE_TIME AT SIX AM ] ] ] ] ] [SL:DATE_TIME THIRTY MINUTES BEFORE ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:TODO [IN:GET_TODO [SL:TODO EXERCISE ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY DAILY ] [SL:DATE_TIME AT SIX AM ] ] ] ] ] [SL:DATE_TIME THIRTY MINUTES BEFORE ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "exercise", "date_time": "daily at 6am"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00000430.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:SEND_MESSAGE send an email to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION aunt ] [SL:CONTACT Lisa ] ] ] about [SL:CONTENT_EXACT her work ] ] ] [SL:DATE_TIME tonight before 7 pm ] . ]", "parameters": {}, "sentence": "Remind me to send an email to my aunt Lisa about her work tonight before 7 pm.", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "REMIND ME TO SEND AN EMAIL TO MY AUNT LISA ABOUT HER WORK TONIGHT BEFORE SEVEN PM", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:SEND_MESSAGE SEND AN EMAIL TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION AUNT ] [SL:CONTACT LISA ] ] ] ABOUT [SL:CONTENT_EXACT HER WORK ] ] ] [SL:DATE_TIME TONIGHT BEFORE SEVEN PM ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00000430.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Remind me to send an email to my aunt Lisa about her work tonight before 7 pm.", "seqlogical": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:SEND_MESSAGE send an email to [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION aunt ] [SL:CONTACT Lisa ] ] ] about [SL:CONTENT_EXACT her work ] ] ] [SL:DATE_TIME tonight before 7 pm ] . ]", "normalized_utterance": "REMIND ME TO SEND AN EMAIL TO MY AUNT LISA ABOUT HER WORK TONIGHT BEFORE SEVEN PM", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:SEND_MESSAGE SEND AN EMAIL TO [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION AUNT ] [SL:CONTACT LISA ] ] ] ABOUT [SL:CONTENT_EXACT HER WORK ] ] ] [SL:DATE_TIME TONIGHT BEFORE SEVEN PM ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:SEND_MESSAGE [SL:RECIPIENT [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION AUNT ] [SL:CONTACT LISA ] ] ] [SL:CONTENT_EXACT HER WORK ] ] ] [SL:DATE_TIME TONIGHT BEFORE SEVEN PM ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "my M Lisa", "todo": "send an email about her work", "date_time": "tonight before 7 PM"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00001572.wav", "split": "test", "intent": "[IN:CREATE_REMINDER remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE text [SL:RECIPIENT JT ] ] ] [SL:DATE_TIME tomorrow morning ] about [SL:TODO dinner plans ] ] ] ]", "parameters": {}, "sentence": "remind me to text JT tomorrow morning about dinner plans", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "REMIND ME TO TEXT JT TOMORROW MORNING ABOUT DINNER PLANS", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE TEXT [SL:RECIPIENT JT ] ] ] [SL:DATE_TIME TOMORROW MORNING ] ABOUT [SL:TODO DINNER PLANS ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00001572.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "remind me to text JT tomorrow morning about dinner plans", "seqlogical": "[IN:CREATE_REMINDER remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE text [SL:RECIPIENT JT ] ] ] [SL:DATE_TIME tomorrow morning ] about [SL:TODO dinner plans ] ] ] ]", "normalized_utterance": "REMIND ME TO TEXT JT TOMORROW MORNING ABOUT DINNER PLANS", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE TEXT [SL:RECIPIENT JT ] ] ] [SL:DATE_TIME TOMORROW MORNING ] ABOUT [SL:TODO DINNER PLANS ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE [SL:RECIPIENT JT ] ] ] [SL:DATE_TIME TOMORROW MORNING ] [SL:TODO DINNER PLANS ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "text JT about dinner plans", "date_time": "tomorrow morning"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00000515.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set up [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO pick up Jill ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME on Tuesday mornings ] ] ] ] ] ]", "parameters": {}, "sentence": "Set up weekly reminder to pick up Jill on Tuesday mornings", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "SET UP WEEKLY REMINDER TO PICK UP JILL ON TUESDAY MORNINGS", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO PICK UP JILL ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME ON TUESDAY MORNINGS ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00000515.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Set up weekly reminder to pick up Jill on Tuesday mornings", "seqlogical": "[IN:CREATE_REMINDER Set up [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO pick up Jill ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME on Tuesday mornings ] ] ] ] ] ]", "normalized_utterance": "SET UP WEEKLY REMINDER TO PICK UP JILL ON TUESDAY MORNINGS", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO PICK UP JILL ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME ON TUESDAY MORNINGS ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO [IN:GET_TODO [SL:TODO PICK UP JILL ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME ON TUESDAY MORNINGS ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "weekly", "todo": "pick up Jill", "date_time": "Tuesday mornings"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00001572.wav", "split": "test", "intent": "[IN:CREATE_REMINDER remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE text [SL:RECIPIENT JT ] ] ] [SL:DATE_TIME tomorrow morning ] about [SL:TODO dinner plans ] ] ] ]", "parameters": {}, "sentence": "remind me to text JT tomorrow morning about dinner plans", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "REMIND ME TO TEXT JT TOMORROW MORNING ABOUT DINNER PLANS", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE TEXT [SL:RECIPIENT JT ] ] ] [SL:DATE_TIME TOMORROW MORNING ] ABOUT [SL:TODO DINNER PLANS ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00001572.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "remind me to text JT tomorrow morning about dinner plans", "seqlogical": "[IN:CREATE_REMINDER remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE text [SL:RECIPIENT JT ] ] ] [SL:DATE_TIME tomorrow morning ] about [SL:TODO dinner plans ] ] ] ]", "normalized_utterance": "REMIND ME TO TEXT JT TOMORROW MORNING ABOUT DINNER PLANS", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE TEXT [SL:RECIPIENT JT ] ] ] [SL:DATE_TIME TOMORROW MORNING ] ABOUT [SL:TODO DINNER PLANS ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:GET_TODO [SL:TODO [IN:SEND_MESSAGE [SL:RECIPIENT JT ] ] ] [SL:DATE_TIME TOMORROW MORNING ] [SL:TODO DINNER PLANS ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "text JT about dinner plans", "date_time": "tomorrow morning"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00000336.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO take out the trash ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Thursday ] [SL:DATE_TIME at 6 pm ] ] ] ] ] . ]", "parameters": {}, "sentence": "Set up a weekly reminder to take out the trash every Thursday at 6pm.", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "SET UP A WEEKLY REMINDER TO TAKE OUT THE TRASH EVERY THURSDAY AT SIX PM", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO TAKE OUT THE TRASH ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY THURSDAY ] [SL:DATE_TIME AT SIX PM ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00000336.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Set up a weekly reminder to take out the trash every Thursday at 6pm.", "seqlogical": "[IN:CREATE_REMINDER Set up a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY weekly ] ] ] reminder to [SL:TODO [IN:GET_TODO [SL:TODO take out the trash ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every Thursday ] [SL:DATE_TIME at 6 pm ] ] ] ] ] . ]", "normalized_utterance": "SET UP A WEEKLY REMINDER TO TAKE OUT THE TRASH EVERY THURSDAY AT SIX PM", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] REMINDER TO [SL:TODO [IN:GET_TODO [SL:TODO TAKE OUT THE TRASH ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY THURSDAY ] [SL:DATE_TIME AT SIX PM ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY WEEKLY ] ] ] [SL:TODO [IN:GET_TODO [SL:TODO TAKE OUT THE TRASH ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY THURSDAY ] [SL:DATE_TIME AT SIX PM ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "every Thursday", "todo": "take out the trash", "date_time": "6 PM"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00003887.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Set a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY daily ] ] ] reminder for [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO set out my clothes ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every night ] [SL:DATE_TIME at 7 pm ] ] ] ] ] . ]", "parameters": {}, "sentence": "Set a daily reminder for me to set out my clothes every night at 7 pm.", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "SET A DAILY REMINDER FOR ME TO SET OUT MY CLOTHES EVERY NIGHT AT SEVEN PM", "normalized_seqlogical": "[IN:CREATE_REMINDER SET A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY DAILY ] ] ] REMINDER FOR [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO SET OUT MY CLOTHES ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY NIGHT ] [SL:DATE_TIME AT SEVEN PM ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00003887.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Set a daily reminder for me to set out my clothes every night at 7 pm.", "seqlogical": "[IN:CREATE_REMINDER Set a [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY daily ] ] ] reminder for [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO set out my clothes ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every night ] [SL:DATE_TIME at 7 pm ] ] ] ] ] . ]", "normalized_utterance": "SET A DAILY REMINDER FOR ME TO SET OUT MY CLOTHES EVERY NIGHT AT SEVEN PM", "normalized_seqlogical": "[IN:CREATE_REMINDER SET A [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY DAILY ] ] ] REMINDER FOR [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO SET OUT MY CLOTHES ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY NIGHT ] [SL:DATE_TIME AT SEVEN PM ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY DAILY ] ] ] [SL:PERSON_REMINDED ME ] [SL:TODO [IN:GET_TODO [SL:TODO SET OUT MY CLOTHES ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY NIGHT ] [SL:DATE_TIME AT SEVEN PM ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "set out my clothes every night", "date_time": "7pm", "recurring_date_time": "daily"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00000401.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] of [SL:TODO [IN:GET_TODO [SL:TODO my lunch date ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] ] ] [SL:DATE_TIME next Saturday at 1 pm ] . ]", "parameters": {}, "sentence": "Remind me of my lunch date with mom next Saturday at 1pm.", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "REMIND ME OF MY LUNCH DATE WITH MOM NEXT SATURDAY AT ONE PM", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] OF [SL:TODO [IN:GET_TODO [SL:TODO MY LUNCH DATE ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] ] ] [SL:DATE_TIME NEXT SATURDAY AT ONE PM ] ]", "raw_data": {"file_id": "test_1/reminder_test/00000401.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Remind me of my lunch date with mom next Saturday at 1pm.", "seqlogical": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] of [SL:TODO [IN:GET_TODO [SL:TODO my lunch date ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION mom ] ] ] ] ] [SL:DATE_TIME next Saturday at 1 pm ] . ]", "normalized_utterance": "REMIND ME OF MY LUNCH DATE WITH MOM NEXT SATURDAY AT ONE PM", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] OF [SL:TODO [IN:GET_TODO [SL:TODO MY LUNCH DATE ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] ] ] [SL:DATE_TIME NEXT SATURDAY AT ONE PM ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:GET_TODO [SL:TODO MY LUNCH DATE ] [SL:ATTENDEE [IN:GET_CONTACT [SL:TYPE_RELATION MOM ] ] ] ] ] [SL:DATE_TIME NEXT SATURDAY AT ONE PM ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "lunch date with mom", "date_time": "next Saturday at 1 PM"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00002424.wav", "split": "test", "intent": "[IN:GET_REMINDER [SL:METHOD_RETRIEVAL_REMINDER Show ] [SL:PERSON_REMINDED my ] [SL:TODO spa ] reminders [SL:TODO [IN:GET_TODO with [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] ] ] ] ] [SL:DATE_TIME next month ] . ]", "parameters": {}, "sentence": "Show my spa reminders with my mom next month.", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "SHOW MY SPA REMINDERS WITH MY MOM NEXT MONTH", "normalized_seqlogical": "[IN:GET_REMINDER [SL:METHOD_RETRIEVAL_REMINDER SHOW ] [SL:PERSON_REMINDED MY ] [SL:TODO SPA ] REMINDERS [SL:TODO [IN:GET_TODO WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] ] ] [SL:DATE_TIME NEXT MONTH ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00002424.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Show my spa reminders with my mom next month.", "seqlogical": "[IN:GET_REMINDER [SL:METHOD_RETRIEVAL_REMINDER Show ] [SL:PERSON_REMINDED my ] [SL:TODO spa ] reminders [SL:TODO [IN:GET_TODO with [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION mom ] ] ] ] ] [SL:DATE_TIME next month ] . ]", "normalized_utterance": "SHOW MY SPA REMINDERS WITH MY MOM NEXT MONTH", "normalized_seqlogical": "[IN:GET_REMINDER [SL:METHOD_RETRIEVAL_REMINDER SHOW ] [SL:PERSON_REMINDED MY ] [SL:TODO SPA ] REMINDERS [SL:TODO [IN:GET_TODO WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] ] ] [SL:DATE_TIME NEXT MONTH ] ]", "decoupled_normalized_seqlogical": "[IN:GET_REMINDER [SL:METHOD_RETRIEVAL_REMINDER SHOW ] [SL:PERSON_REMINDED MY ] [SL:TODO SPA ] [SL:TODO [IN:GET_TODO [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOM ] ] ] ] ] [SL:DATE_TIME NEXT MONTH ] ]"}, "prediction": "", "function_calls": [{"name": "get_reminder", "arguments": {"person_reminded": "mom", "todo": "spa", "date_time": "next month"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00002413.wav", "split": "test", "intent": "[IN:CREATE_REMINDER set up a reminder for [SL:TODO [IN:GET_TODO the [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY monthly ] ] ] [SL:TODO budget conference call ] ] ] ]", "parameters": {}, "sentence": "set up a reminder for the monthly budget conference call", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "SET UP A REMINDER FOR THE MONTHLY BUDGET CONFERENCE CALL", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A REMINDER FOR [SL:TODO [IN:GET_TODO THE [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY MONTHLY ] ] ] [SL:TODO BUDGET CONFERENCE CALL ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00002413.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "set up a reminder for the monthly budget conference call", "seqlogical": "[IN:CREATE_REMINDER set up a reminder for [SL:TODO [IN:GET_TODO the [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY monthly ] ] ] [SL:TODO budget conference call ] ] ] ]", "normalized_utterance": "SET UP A REMINDER FOR THE MONTHLY BUDGET CONFERENCE CALL", "normalized_seqlogical": "[IN:CREATE_REMINDER SET UP A REMINDER FOR [SL:TODO [IN:GET_TODO THE [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY MONTHLY ] ] ] [SL:TODO BUDGET CONFERENCE CALL ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:TODO [IN:GET_TODO [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY MONTHLY ] ] ] [SL:TODO BUDGET CONFERENCE CALL ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "monthly budget conference call"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00003600.wav", "split": "test", "intent": "[IN:GET_REMINDER_DATE_TIME When is [SL:PERSON_REMINDED my ] [SL:ORDINAL next ] alert for [SL:TODO [IN:GET_TODO [SL:TODO my lunch gathering ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:MUTUAL_EMPLOYER work ] [SL:TYPE_RELATION friends ] ] ] ] ] ? ]", "parameters": {}, "sentence": "When is my next alert for my lunch gathering with my work friends?", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "WHEN IS MY NEXT ALERT FOR MY LUNCH GATHERING WITH MY WORK FRIENDS", "normalized_seqlogical": "[IN:GET_REMINDER_DATE_TIME WHEN IS [SL:PERSON_REMINDED MY ] [SL:ORDINAL NEXT ] ALERT FOR [SL:TODO [IN:GET_TODO [SL:TODO MY LUNCH GATHERING ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:MUTUAL_EMPLOYER WORK ] [SL:TYPE_RELATION FRIENDS ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00003600.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "When is my next alert for my lunch gathering with my work friends?", "seqlogical": "[IN:GET_REMINDER_DATE_TIME When is [SL:PERSON_REMINDED my ] [SL:ORDINAL next ] alert for [SL:TODO [IN:GET_TODO [SL:TODO my lunch gathering ] with [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED my ] [SL:MUTUAL_EMPLOYER work ] [SL:TYPE_RELATION friends ] ] ] ] ] ? ]", "normalized_utterance": "WHEN IS MY NEXT ALERT FOR MY LUNCH GATHERING WITH MY WORK FRIENDS", "normalized_seqlogical": "[IN:GET_REMINDER_DATE_TIME WHEN IS [SL:PERSON_REMINDED MY ] [SL:ORDINAL NEXT ] ALERT FOR [SL:TODO [IN:GET_TODO [SL:TODO MY LUNCH GATHERING ] WITH [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:MUTUAL_EMPLOYER WORK ] [SL:TYPE_RELATION FRIENDS ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_REMINDER_DATE_TIME [SL:PERSON_REMINDED MY ] [SL:ORDINAL NEXT ] [SL:TODO [IN:GET_TODO [SL:TODO MY LUNCH GATHERING ] [SL:ATTENDEE [IN:GET_CONTACT [SL:CONTACT_RELATED MY ] [SL:MUTUAL_EMPLOYER WORK ] [SL:TYPE_RELATION FRIENDS ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_reminder_date_time", "arguments": {"todo": "lunch gathering with my work friends"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00001839.wav", "split": "test", "intent": "[IN:DELETE_REMINDER Delete [SL:AMOUNT all ] future reminders of [SL:TODO [IN:GET_TODO [SL:TODO credit card payments ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME on the 26th ] of [SL:FREQUENCY each month ] ] ] ] ] stating immediately . ]", "parameters": {}, "sentence": "Delete all future reminders of credit card payments on the 26th of each month stating immediately.", "domain": "reminder", "gender": "Male", "native": "No", "normalized_utterance": "DELETE ALL FUTURE REMINDERS OF CREDIT CARD PAYMENTS ON THE TWENTY SIXTH OF EACH MONTH STATING IMMEDIATELY", "normalized_seqlogical": "[IN:DELETE_REMINDER DELETE [SL:AMOUNT ALL ] FUTURE REMINDERS OF [SL:TODO [IN:GET_TODO [SL:TODO CREDIT CARD PAYMENTS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME ON THE TWENTY SIXTH ] OF [SL:FREQUENCY EACH MONTH ] ] ] ] ] STATING IMMEDIATELY ]", "raw_data": {"file_id": "test_1/reminder_test/00001839.wav", "domain": "reminder", "gender": "Male", "native": "No", "utterance": "Delete all future reminders of credit card payments on the 26th of each month stating immediately.", "seqlogical": "[IN:DELETE_REMINDER Delete [SL:AMOUNT all ] future reminders of [SL:TODO [IN:GET_TODO [SL:TODO credit card payments ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME on the 26th ] of [SL:FREQUENCY each month ] ] ] ] ] stating immediately . ]", "normalized_utterance": "DELETE ALL FUTURE REMINDERS OF CREDIT CARD PAYMENTS ON THE TWENTY SIXTH OF EACH MONTH STATING IMMEDIATELY", "normalized_seqlogical": "[IN:DELETE_REMINDER DELETE [SL:AMOUNT ALL ] FUTURE REMINDERS OF [SL:TODO [IN:GET_TODO [SL:TODO CREDIT CARD PAYMENTS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME ON THE TWENTY SIXTH ] OF [SL:FREQUENCY EACH MONTH ] ] ] ] ] STATING IMMEDIATELY ]", "decoupled_normalized_seqlogical": "[IN:DELETE_REMINDER [SL:AMOUNT ALL ] [SL:TODO [IN:GET_TODO [SL:TODO CREDIT CARD PAYMENTS ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:DATE_TIME ON THE TWENTY SIXTH ] [SL:FREQUENCY EACH MONTH ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_reminder", "arguments": {"recurring_date_time": "26th of each month", "todo": "credit card payments"}}]}
{"filename": "stop_data/stop/test_0/reminder_test/00002141.wav", "split": "test", "intent": "[IN:CREATE_REMINDER remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO take recycling out ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every other monday ] [SL:DATE_TIME starting today ] ] ] ] ] ]", "parameters": {}, "sentence": "remind me to take recycling out every other monday starting today", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "REMIND ME TO TAKE RECYCLING OUT EVERY OTHER MONDAY STARTING TODAY", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO TAKE RECYCLING OUT ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY OTHER MONDAY ] [SL:DATE_TIME STARTING TODAY ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/reminder_test_0/00002141.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "remind me to take recycling out every other monday starting today", "seqlogical": "[IN:CREATE_REMINDER remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO take recycling out ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every other monday ] [SL:DATE_TIME starting today ] ] ] ] ] ]", "normalized_utterance": "REMIND ME TO TAKE RECYCLING OUT EVERY OTHER MONDAY STARTING TODAY", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO TAKE RECYCLING OUT ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY OTHER MONDAY ] [SL:DATE_TIME STARTING TODAY ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:GET_TODO [SL:TODO TAKE RECYCLING OUT ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY OTHER MONDAY ] [SL:DATE_TIME STARTING TODAY ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "recurring_date_time": "every other Monday", "todo": "take recycling out", "date_time": "today"}}]}
{"filename": "stop_data/stop/test_1/reminder_test/00000363.wav", "split": "test", "intent": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO turn off the air conditioning ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every night ] ] ] [SL:TODO before going to bed ] ] ] . ]", "parameters": {}, "sentence": "Remind me to turn off the air conditioning every night before going to bed.", "domain": "reminder", "gender": "Male", "native": "Yes", "normalized_utterance": "REMIND ME TO TURN OFF THE AIR CONDITIONING EVERY NIGHT BEFORE GOING TO BED", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO TURN OFF THE AIR CONDITIONING ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY NIGHT ] ] ] [SL:TODO BEFORE GOING TO BED ] ] ] ]", "raw_data": {"file_id": "test_1/reminder_test/00000363.wav", "domain": "reminder", "gender": "Male", "native": "Yes", "utterance": "Remind me to turn off the air conditioning every night before going to bed.", "seqlogical": "[IN:CREATE_REMINDER Remind [SL:PERSON_REMINDED me ] to [SL:TODO [IN:GET_TODO [SL:TODO turn off the air conditioning ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY every night ] ] ] [SL:TODO before going to bed ] ] ] . ]", "normalized_utterance": "REMIND ME TO TURN OFF THE AIR CONDITIONING EVERY NIGHT BEFORE GOING TO BED", "normalized_seqlogical": "[IN:CREATE_REMINDER REMIND [SL:PERSON_REMINDED ME ] TO [SL:TODO [IN:GET_TODO [SL:TODO TURN OFF THE AIR CONDITIONING ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY NIGHT ] ] ] [SL:TODO BEFORE GOING TO BED ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:CREATE_REMINDER [SL:PERSON_REMINDED ME ] [SL:TODO [IN:GET_TODO [SL:TODO TURN OFF THE AIR CONDITIONING ] [SL:RECURRING_DATE_TIME [IN:GET_RECURRING_DATE_TIME [SL:FREQUENCY EVERY NIGHT ] ] ] [SL:TODO BEFORE GOING TO BED ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_reminder", "arguments": {"person_reminded": "me", "todo": "turn off the air conditioning every night before going to bed", "recurring_date_time": "every night"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00000209.wav", "split": "test", "intent": "[IN:GET_DIRECTIONS directions to [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT sally ] 's house [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS next to ] [SL:LOCATION [IN:GET_LOCATION the [SL:LOCATION_MODIFIER local ] [SL:CATEGORY_LOCATION farmers market ] ] ] ] ] ] ] ]", "parameters": {}, "sentence": "directions to sally's house next to the local farmers market", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "DIRECTIONS TO SALLY 'S HOUSE NEXT TO THE LOCAL FARMERS MARKET", "normalized_seqlogical": "[IN:GET_DIRECTIONS DIRECTIONS TO [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT SALLY ] 'S HOUSE [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEXT TO ] [SL:LOCATION [IN:GET_LOCATION THE [SL:LOCATION_MODIFIER LOCAL ] [SL:CATEGORY_LOCATION FARMERS MARKET ] ] ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00000209.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "directions to sally's house next to the local farmers market", "seqlogical": "[IN:GET_DIRECTIONS directions to [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT sally ] 's house [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS next to ] [SL:LOCATION [IN:GET_LOCATION the [SL:LOCATION_MODIFIER local ] [SL:CATEGORY_LOCATION farmers market ] ] ] ] ] ] ] ]", "normalized_utterance": "DIRECTIONS TO SALLY 'S HOUSE NEXT TO THE LOCAL FARMERS MARKET", "normalized_seqlogical": "[IN:GET_DIRECTIONS DIRECTIONS TO [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT SALLY ] 'S HOUSE [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEXT TO ] [SL:LOCATION [IN:GET_LOCATION THE [SL:LOCATION_MODIFIER LOCAL ] [SL:CATEGORY_LOCATION FARMERS MARKET ] ] ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_DIRECTIONS [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT SALLY ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEXT TO ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER LOCAL ] [SL:CATEGORY_LOCATION FARMERS MARKET ] ] ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "local farmer's market"}}, {"name": "get_directions", "arguments": {"destination": "Sally's house", "location": "local farmer's market"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00001360.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC traffic [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS by ] [SL:LOCATION [IN:GET_LOCATION_WORK [SL:CONTACT my ] office ] ] ] ] ] ] ]", "parameters": {}, "sentence": "traffic by my office", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "TRAFFIC BY MY OFFICE", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS BY ] [SL:LOCATION [IN:GET_LOCATION_WORK [SL:CONTACT MY ] OFFICE ] ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00001360.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "traffic by my office", "seqlogical": "[IN:GET_INFO_TRAFFIC traffic [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS by ] [SL:LOCATION [IN:GET_LOCATION_WORK [SL:CONTACT my ] office ] ] ] ] ] ] ]", "normalized_utterance": "TRAFFIC BY MY OFFICE", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS BY ] [SL:LOCATION [IN:GET_LOCATION_WORK [SL:CONTACT MY ] OFFICE ] ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS BY ] [SL:LOCATION [IN:GET_LOCATION_WORK [SL:CONTACT MY ] ] ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "my office"}}, {"name": "get_info_traffic", "arguments": {"location": "MOCK_RESPONSE(get_location)"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00002624.wav", "split": "test", "intent": "[IN:GET_DIRECTIONS Get me directions to [SL:DESTINATION [IN:GET_LOCATION the [SL:LOCATION_MODIFIER closest ] [SL:POINT_ON_MAP Walgreen 's ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT my ] home ] ] ] ] ] ] . ]", "parameters": {}, "sentence": "Get me directions to the closest Walgreen's near my home.", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "GET ME DIRECTIONS TO THE CLOSEST WALGREEN 'S NEAR MY HOME", "normalized_seqlogical": "[IN:GET_DIRECTIONS GET ME DIRECTIONS TO [SL:DESTINATION [IN:GET_LOCATION THE [SL:LOCATION_MODIFIER CLOSEST ] [SL:POINT_ON_MAP WALGREEN 'S ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT MY ] HOME ] ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00002624.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "Get me directions to the closest Walgreen's near my home.", "seqlogical": "[IN:GET_DIRECTIONS Get me directions to [SL:DESTINATION [IN:GET_LOCATION the [SL:LOCATION_MODIFIER closest ] [SL:POINT_ON_MAP Walgreen 's ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT my ] home ] ] ] ] ] ] . ]", "normalized_utterance": "GET ME DIRECTIONS TO THE CLOSEST WALGREEN 'S NEAR MY HOME", "normalized_seqlogical": "[IN:GET_DIRECTIONS GET ME DIRECTIONS TO [SL:DESTINATION [IN:GET_LOCATION THE [SL:LOCATION_MODIFIER CLOSEST ] [SL:POINT_ON_MAP WALGREEN 'S ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT MY ] HOME ] ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_DIRECTIONS [SL:DESTINATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER CLOSEST ] [SL:POINT_ON_MAP WALGREEN 'S ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT MY ] ] ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "closest Walgreens", "location_user": "my home"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00003538.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_DEPARTURE What time should I leave [SL:SOURCE [IN:GET_LOCATION_HOME [SL:CONTACT my ] house ] ] to get to [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION moms ] house in [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER Grants pass ] ] ] ] ] [SL:DATE_TIME_ARRIVAL by 7PM tomorrow ] ? ]", "parameters": {}, "sentence": "What time should I leave my house to get to my moms house in Grants pass by 7PM tomorrow?", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT TIME SHOULD I LEAVE MY HOUSE TO GET TO MY MOMS HOUSE IN GRANTS PASS BY SEVEN PM TOMORROW", "normalized_seqlogical": "[IN:GET_ESTIMATED_DEPARTURE WHAT TIME SHOULD I LEAVE [SL:SOURCE [IN:GET_LOCATION_HOME [SL:CONTACT MY ] HOUSE ] ] TO GET TO [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOMS ] HOUSE IN [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER GRANTS PASS ] ] ] ] ] [SL:DATE_TIME_ARRIVAL BY SEVEN PM TOMORROW ] ]", "raw_data": {"file_id": "test_1/navigation_test/00003538.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "What time should I leave my house to get to my moms house in Grants pass by 7PM tomorrow?", "seqlogical": "[IN:GET_ESTIMATED_DEPARTURE What time should I leave [SL:SOURCE [IN:GET_LOCATION_HOME [SL:CONTACT my ] house ] ] to get to [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION moms ] house in [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER Grants pass ] ] ] ] ] [SL:DATE_TIME_ARRIVAL by 7PM tomorrow ] ? ]", "normalized_utterance": "WHAT TIME SHOULD I LEAVE MY HOUSE TO GET TO MY MOMS HOUSE IN GRANTS PASS BY SEVEN PM TOMORROW", "normalized_seqlogical": "[IN:GET_ESTIMATED_DEPARTURE WHAT TIME SHOULD I LEAVE [SL:SOURCE [IN:GET_LOCATION_HOME [SL:CONTACT MY ] HOUSE ] ] TO GET TO [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOMS ] HOUSE IN [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER GRANTS PASS ] ] ] ] ] [SL:DATE_TIME_ARRIVAL BY SEVEN PM TOMORROW ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_DEPARTURE [SL:SOURCE [IN:GET_LOCATION_HOME [SL:CONTACT MY ] ] ] [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION MOMS ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER GRANTS PASS ] ] ] ] ] [SL:DATE_TIME_ARRIVAL BY SEVEN PM TOMORROW ] ]"}, "prediction": "", "function_calls": [{"name": "get_estimated_departure", "arguments": {"destination": "Grants Pass", "date_time_arrival": "tomorrow at 7 PM"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00005648.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC Are there any delays on the way to see [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT the fireworks ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Times Square ] ] ] ] ] ? ]", "parameters": {}, "sentence": "Are there any delays on the way to see the fireworks at Times Square?", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "ARE THERE ANY DELAYS ON THE WAY TO SEE THE FIREWORKS AT TIMES SQUARE", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC ARE THERE ANY DELAYS ON THE WAY TO SEE [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE FIREWORKS ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP TIMES SQUARE ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00005648.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "Are there any delays on the way to see the fireworks at Times Square?", "seqlogical": "[IN:GET_INFO_TRAFFIC Are there any delays on the way to see [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT the fireworks ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Times Square ] ] ] ] ] ? ]", "normalized_utterance": "ARE THERE ANY DELAYS ON THE WAY TO SEE THE FIREWORKS AT TIMES SQUARE", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC ARE THERE ANY DELAYS ON THE WAY TO SEE [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE FIREWORKS ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP TIMES SQUARE ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE FIREWORKS ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP TIMES SQUARE ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "Times Square"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00003193.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_DURATION How long will it take for me to [SL:METHOD_TRAVEL drive ] to [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION sisters ] on [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER 5th avenue ] ] ] ] ] from [SL:SOURCE [IN:GET_LOCATION [SL:LOCATION_USER here ] ] ] ? ]", "parameters": {}, "sentence": "How long will it take for me to drive to my sisters on 5th avenue from here?", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "HOW LONG WILL IT TAKE FOR ME TO DRIVE TO MY SISTERS ON FIFTH AVENUE FROM HERE", "normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION HOW LONG WILL IT TAKE FOR ME TO [SL:METHOD_TRAVEL DRIVE ] TO [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION SISTERS ] ON [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER FIFTH AVENUE ] ] ] ] ] FROM [SL:SOURCE [IN:GET_LOCATION [SL:LOCATION_USER HERE ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00003193.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "How long will it take for me to drive to my sisters on 5th avenue from here?", "seqlogical": "[IN:GET_ESTIMATED_DURATION How long will it take for me to [SL:METHOD_TRAVEL drive ] to [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION sisters ] on [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER 5th avenue ] ] ] ] ] from [SL:SOURCE [IN:GET_LOCATION [SL:LOCATION_USER here ] ] ] ? ]", "normalized_utterance": "HOW LONG WILL IT TAKE FOR ME TO DRIVE TO MY SISTERS ON FIFTH AVENUE FROM HERE", "normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION HOW LONG WILL IT TAKE FOR ME TO [SL:METHOD_TRAVEL DRIVE ] TO [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION SISTERS ] ON [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER FIFTH AVENUE ] ] ] ] ] FROM [SL:SOURCE [IN:GET_LOCATION [SL:LOCATION_USER HERE ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION [SL:METHOD_TRAVEL DRIVE ] [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION SISTERS ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER FIFTH AVENUE ] ] ] ] ] [SL:SOURCE [IN:GET_LOCATION [SL:LOCATION_USER HERE ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "here"}}, {"name": "get_estimated_duration", "arguments": {"source": "current location", "destination": "Fifth Avenue"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00000649.wav", "split": "test", "intent": "[IN:GET_DIRECTIONS i need to get to [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT Fireworks show ] at [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the park ] ] ] ] ] , how can I from [SL:SOURCE [IN:GET_LOCATION [SL:LOCATION_USER my location ] ] ] ]", "parameters": {}, "sentence": "i need to get to Fireworks show at the park, how can I from my location", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "I NEED TO GET TO FIREWORKS SHOW AT THE PARK HOW CAN I FROM MY LOCATION", "normalized_seqlogical": "[IN:GET_DIRECTIONS I NEED TO GET TO [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT FIREWORKS SHOW ] AT [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE PARK ] ] ] ] ] HOW CAN I FROM [SL:SOURCE [IN:GET_LOCATION [SL:LOCATION_USER MY LOCATION ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00000649.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "i need to get to Fireworks show at the park, how can I from my location", "seqlogical": "[IN:GET_DIRECTIONS i need to get to [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT Fireworks show ] at [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the park ] ] ] ] ] , how can I from [SL:SOURCE [IN:GET_LOCATION [SL:LOCATION_USER my location ] ] ] ]", "normalized_utterance": "I NEED TO GET TO FIREWORKS SHOW AT THE PARK HOW CAN I FROM MY LOCATION", "normalized_seqlogical": "[IN:GET_DIRECTIONS I NEED TO GET TO [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT FIREWORKS SHOW ] AT [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE PARK ] ] ] ] ] HOW CAN I FROM [SL:SOURCE [IN:GET_LOCATION [SL:LOCATION_USER MY LOCATION ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_DIRECTIONS [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT FIREWORKS SHOW ] [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE PARK ] ] ] ] ] [SL:SOURCE [IN:GET_LOCATION [SL:LOCATION_USER MY LOCATION ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "my location"}}, {"name": "get_directions", "arguments": {"source": "MOCK_RESPONSE(get_location)", "destination": "fireworks show at the park"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00004793.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC are there any accidents [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS 20 miles from ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT my ] home ] ] ] ] ]", "parameters": {}, "sentence": "are there any accidents 20 miles from my home", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "ARE THERE ANY ACCIDENTS TWENTY MILES FROM MY HOME", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC ARE THERE ANY ACCIDENTS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS TWENTY MILES FROM ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT MY ] HOME ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00004793.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "are there any accidents 20 miles from my home", "seqlogical": "[IN:GET_INFO_TRAFFIC are there any accidents [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS 20 miles from ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT my ] home ] ] ] ] ]", "normalized_utterance": "ARE THERE ANY ACCIDENTS TWENTY MILES FROM MY HOME", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC ARE THERE ANY ACCIDENTS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS TWENTY MILES FROM ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT MY ] HOME ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS TWENTY MILES FROM ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT MY ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "my home"}}, {"name": "get_info_traffic", "arguments": {"location": "20 miles from my home"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00000591.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC How is traffic [SL:DATE_TIME today ] on [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION I - 5 ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS by ] [SL:LOCATION Bellevue ] ] ] ] ] ]", "parameters": {}, "sentence": "How is traffic today on I-5 by Bellevue", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "HOW IS TRAFFIC TODAY ON I FIVE BY BELLEVUE", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW IS TRAFFIC [SL:DATE_TIME TODAY ] ON [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION I FIVE ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS BY ] [SL:LOCATION BELLEVUE ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00000591.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "How is traffic today on I-5 by Bellevue", "seqlogical": "[IN:GET_INFO_TRAFFIC How is traffic [SL:DATE_TIME today ] on [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION I - 5 ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS by ] [SL:LOCATION Bellevue ] ] ] ] ] ]", "normalized_utterance": "HOW IS TRAFFIC TODAY ON I FIVE BY BELLEVUE", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW IS TRAFFIC [SL:DATE_TIME TODAY ] ON [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION I FIVE ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS BY ] [SL:LOCATION BELLEVUE ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:DATE_TIME TODAY ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION I FIVE ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS BY ] [SL:LOCATION BELLEVUE ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "I-5 by Bellevue"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00003973.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC Is there heavy traffic [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:POINT_ON_MAP the Staples Center ] ] ] ] ] ]", "parameters": {}, "sentence": "Is there heavy traffic around the Staples Center", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "IS THERE HEAVY TRAFFIC AROUND THE STAPLES CENTER", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC IS THERE HEAVY TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:POINT_ON_MAP THE STAPLES CENTER ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00003973.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "Is there heavy traffic around the Staples Center", "seqlogical": "[IN:GET_INFO_TRAFFIC Is there heavy traffic [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:POINT_ON_MAP the Staples Center ] ] ] ] ] ]", "normalized_utterance": "IS THERE HEAVY TRAFFIC AROUND THE STAPLES CENTER", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC IS THERE HEAVY TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:POINT_ON_MAP THE STAPLES CENTER ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:POINT_ON_MAP THE STAPLES CENTER ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "Staples Center"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00004561.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_DEPARTURE When do I need to leave [SL:SOURCE [IN:GET_LOCATION_HOME home ] ] to arrive in time for [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT my ] [SL:DATE_TIME 7 am ] [SL:CATEGORY_EVENT flight ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP MSP airport ] ] ] ] ] ? ]", "parameters": {}, "sentence": "When do I need to leave home to arrive in time for my 7am flight at MSP airport?", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "WHEN DO I NEED TO LEAVE HOME TO ARRIVE IN TIME FOR MY SEVEN AM FLIGHT AT MSP AIRPORT", "normalized_seqlogical": "[IN:GET_ESTIMATED_DEPARTURE WHEN DO I NEED TO LEAVE [SL:SOURCE [IN:GET_LOCATION_HOME HOME ] ] TO ARRIVE IN TIME FOR [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT MY ] [SL:DATE_TIME SEVEN AM ] [SL:CATEGORY_EVENT FLIGHT ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP MSP AIRPORT ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00004561.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "When do I need to leave home to arrive in time for my 7am flight at MSP airport?", "seqlogical": "[IN:GET_ESTIMATED_DEPARTURE When do I need to leave [SL:SOURCE [IN:GET_LOCATION_HOME home ] ] to arrive in time for [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT my ] [SL:DATE_TIME 7 am ] [SL:CATEGORY_EVENT flight ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP MSP airport ] ] ] ] ] ? ]", "normalized_utterance": "WHEN DO I NEED TO LEAVE HOME TO ARRIVE IN TIME FOR MY SEVEN AM FLIGHT AT MSP AIRPORT", "normalized_seqlogical": "[IN:GET_ESTIMATED_DEPARTURE WHEN DO I NEED TO LEAVE [SL:SOURCE [IN:GET_LOCATION_HOME HOME ] ] TO ARRIVE IN TIME FOR [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT MY ] [SL:DATE_TIME SEVEN AM ] [SL:CATEGORY_EVENT FLIGHT ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP MSP AIRPORT ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_DEPARTURE [SL:SOURCE [IN:GET_LOCATION_HOME ] ] [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT MY ] [SL:DATE_TIME SEVEN AM ] [SL:CATEGORY_EVENT FLIGHT ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP MSP AIRPORT ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_estimated_departure", "arguments": {"destination": "MSP airport", "date_time_arrival": "7am"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00003157.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC What is the traffic conditions like [SL:DATE_TIME right now ] at [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the Home and Garden show ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the I X center ] in [SL:LOCATION_MODIFIER Cleveland ] ] ] ] ] ]", "parameters": {}, "sentence": "What is the traffic conditions like right now at the Home and Garden show at the I X center in Cleveland", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT IS THE TRAFFIC CONDITIONS LIKE RIGHT NOW AT THE HOME AND GARDEN SHOW AT THE I X CENTER IN CLEVELAND", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC WHAT IS THE TRAFFIC CONDITIONS LIKE [SL:DATE_TIME RIGHT NOW ] AT [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE HOME AND GARDEN SHOW ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE I X CENTER ] IN [SL:LOCATION_MODIFIER CLEVELAND ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00003157.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "What is the traffic conditions like right now at the Home and Garden show at the I X center in Cleveland", "seqlogical": "[IN:GET_INFO_TRAFFIC What is the traffic conditions like [SL:DATE_TIME right now ] at [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the Home and Garden show ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the I X center ] in [SL:LOCATION_MODIFIER Cleveland ] ] ] ] ] ]", "normalized_utterance": "WHAT IS THE TRAFFIC CONDITIONS LIKE RIGHT NOW AT THE HOME AND GARDEN SHOW AT THE I X CENTER IN CLEVELAND", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC WHAT IS THE TRAFFIC CONDITIONS LIKE [SL:DATE_TIME RIGHT NOW ] AT [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE HOME AND GARDEN SHOW ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE I X CENTER ] IN [SL:LOCATION_MODIFIER CLEVELAND ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:DATE_TIME RIGHT NOW ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE HOME AND GARDEN SHOW ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE I X CENTER ] [SL:LOCATION_MODIFIER CLEVELAND ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "IX Center, Cleveland"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00002328.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_DURATION How long to get to [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the movies ] at [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:CATEGORY_LOCATION the mall ] ] ] ] ] ]", "parameters": {}, "sentence": "How long to get to the movies at the mall", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "HOW LONG TO GET TO THE MOVIES AT THE MALL", "normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION HOW LONG TO GET TO [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE MOVIES ] AT [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE MALL ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00002328.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "How long to get to the movies at the mall", "seqlogical": "[IN:GET_ESTIMATED_DURATION How long to get to [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the movies ] at [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:CATEGORY_LOCATION the mall ] ] ] ] ] ]", "normalized_utterance": "HOW LONG TO GET TO THE MOVIES AT THE MALL", "normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION HOW LONG TO GET TO [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE MOVIES ] AT [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE MALL ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE MOVIES ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE MALL ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "the mall"}}, {"name": "get_estimated_duration", "arguments": {"destination": "the movies at the mall"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00004796.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC How backed up is [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION I - 90 ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION Orlando ] ] ] ] ] ]", "parameters": {}, "sentence": "How backed up is I-90 near Orlando", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "HOW BACKED UP IS I NINETY NEAR ORLANDO", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW BACKED UP IS [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION I NINETY ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION ORLANDO ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00004796.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "How backed up is I-90 near Orlando", "seqlogical": "[IN:GET_INFO_TRAFFIC How backed up is [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION I - 90 ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION Orlando ] ] ] ] ] ]", "normalized_utterance": "HOW BACKED UP IS I NINETY NEAR ORLANDO", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW BACKED UP IS [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION I NINETY ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION ORLANDO ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION I NINETY ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION ORLANDO ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "I-90 near Aurora"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00001478.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_ARRIVAL under current traffic conditions , will I arrive to [SL:DESTINATION [IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Metlife Stadium ] ] ] for [SL:NAME_EVENT the Met 's ] [SL:CATEGORY_EVENT game ] ] ] [SL:DATE_TIME_ARRIVAL by 6 pm ] ]", "parameters": {}, "sentence": "under current traffic conditions, will I arrive to Metlife Stadium for the Met's game by 6pm", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "UNDER CURRENT TRAFFIC CONDITIONS WILL I ARRIVE TO METLIFE STADIUM FOR THE MET 'S GAME BY SIX PM", "normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL UNDER CURRENT TRAFFIC CONDITIONS WILL I ARRIVE TO [SL:DESTINATION [IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP METLIFE STADIUM ] ] ] FOR [SL:NAME_EVENT THE MET 'S ] [SL:CATEGORY_EVENT GAME ] ] ] [SL:DATE_TIME_ARRIVAL BY SIX PM ] ]", "raw_data": {"file_id": "test_1/navigation_test/00001478.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "under current traffic conditions, will I arrive to Metlife Stadium for the Met's game by 6pm", "seqlogical": "[IN:GET_ESTIMATED_ARRIVAL under current traffic conditions , will I arrive to [SL:DESTINATION [IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Metlife Stadium ] ] ] for [SL:NAME_EVENT the Met 's ] [SL:CATEGORY_EVENT game ] ] ] [SL:DATE_TIME_ARRIVAL by 6 pm ] ]", "normalized_utterance": "UNDER CURRENT TRAFFIC CONDITIONS WILL I ARRIVE TO METLIFE STADIUM FOR THE MET 'S GAME BY SIX PM", "normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL UNDER CURRENT TRAFFIC CONDITIONS WILL I ARRIVE TO [SL:DESTINATION [IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP METLIFE STADIUM ] ] ] FOR [SL:NAME_EVENT THE MET 'S ] [SL:CATEGORY_EVENT GAME ] ] ] [SL:DATE_TIME_ARRIVAL BY SIX PM ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL [SL:DESTINATION [IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP METLIFE STADIUM ] ] ] [SL:NAME_EVENT THE MET 'S ] [SL:CATEGORY_EVENT GAME ] ] ] [SL:DATE_TIME_ARRIVAL BY SIX PM ] ]"}, "prediction": "", "function_calls": [{"name": "get_estimated_arrival", "arguments": {"destination": "MetLife Stadium", "date_time_arrival": "6 PM"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00004492.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC What are the roads like [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_EVENT the [SL:NAME_EVENT Bulls ] [SL:CATEGORY_EVENT Rally ] ] ] ] ] ? ]", "parameters": {}, "sentence": "What are the roads like around the Bulls Rally?", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT ARE THE ROADS LIKE AROUND THE BULLS RALLY", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC WHAT ARE THE ROADS LIKE [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT THE [SL:NAME_EVENT BULLS ] [SL:CATEGORY_EVENT RALLY ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00004492.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "What are the roads like around the Bulls Rally?", "seqlogical": "[IN:GET_INFO_TRAFFIC What are the roads like [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_EVENT the [SL:NAME_EVENT Bulls ] [SL:CATEGORY_EVENT Rally ] ] ] ] ] ? ]", "normalized_utterance": "WHAT ARE THE ROADS LIKE AROUND THE BULLS RALLY", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC WHAT ARE THE ROADS LIKE [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT THE [SL:NAME_EVENT BULLS ] [SL:CATEGORY_EVENT RALLY ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:NAME_EVENT BULLS ] [SL:CATEGORY_EVENT RALLY ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "Bulls Rally"}}, {"name": "get_info_road_condition", "arguments": {"location": "Bulls Rally", "road_condition": "road conditions"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00005583.wav", "split": "test", "intent": "[IN:GET_DIRECTIONS Find the directions to [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the $ 10 parking ] at [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:CATEGORY_LOCATION the airport ] ] ] ] ] . ]", "parameters": {}, "sentence": "Find the directions to the $10 parking at the airport.", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "FIND THE DIRECTIONS TO THE TEN CENT PARKING AT THE AIRPORT", "normalized_seqlogical": "[IN:GET_DIRECTIONS FIND THE DIRECTIONS TO [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE TEN CENT PARKING ] AT [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE AIRPORT ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00005583.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "Find the directions to the $10 parking at the airport.", "seqlogical": "[IN:GET_DIRECTIONS Find the directions to [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the $ 10 parking ] at [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:CATEGORY_LOCATION the airport ] ] ] ] ] . ]", "normalized_utterance": "FIND THE DIRECTIONS TO THE TEN CENT PARKING AT THE AIRPORT", "normalized_seqlogical": "[IN:GET_DIRECTIONS FIND THE DIRECTIONS TO [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE TEN CENT PARKING ] AT [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE AIRPORT ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_DIRECTIONS [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE TEN CENT PARKING ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE AIRPORT ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "$10 parking at the airport"}}, {"name": "get_directions", "arguments": {"destination": "$10 parking at the airport"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00004443.wav", "split": "test", "intent": "[IN:GET_DIRECTIONS Whats the [SL:METHOD_TRAVEL driving ] directions to [SL:DESTINATION [IN:GET_LOCATION [SL:POINT_ON_MAP the Walmart ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION downtown ] ] ] ] ] ]", "parameters": {}, "sentence": "Whats the driving directions to the Walmart near downtown", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "WHATS THE DRIVING DIRECTIONS TO THE WALMART NEAR DOWNTOWN", "normalized_seqlogical": "[IN:GET_DIRECTIONS WHATS THE [SL:METHOD_TRAVEL DRIVING ] DIRECTIONS TO [SL:DESTINATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE WALMART ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION DOWNTOWN ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00004443.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "Whats the driving directions to the Walmart near downtown", "seqlogical": "[IN:GET_DIRECTIONS Whats the [SL:METHOD_TRAVEL driving ] directions to [SL:DESTINATION [IN:GET_LOCATION [SL:POINT_ON_MAP the Walmart ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION downtown ] ] ] ] ] ]", "normalized_utterance": "WHATS THE DRIVING DIRECTIONS TO THE WALMART NEAR DOWNTOWN", "normalized_seqlogical": "[IN:GET_DIRECTIONS WHATS THE [SL:METHOD_TRAVEL DRIVING ] DIRECTIONS TO [SL:DESTINATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE WALMART ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION DOWNTOWN ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_DIRECTIONS [SL:METHOD_TRAVEL DRIVING ] [SL:DESTINATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE WALMART ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION DOWNTOWN ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "Walmart", "location_user": "downtown"}}, {"name": "get_directions", "arguments": {"destination": "Walmart near downtown"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00002994.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC Are there any traffic accidents [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION_USER me ] ] ] ] ] ]", "parameters": {}, "sentence": "Are there any traffic accidents around me", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "ARE THERE ANY TRAFFIC ACCIDENTS AROUND ME", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC ARE THERE ANY TRAFFIC ACCIDENTS [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION_USER ME ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00002994.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "Are there any traffic accidents around me", "seqlogical": "[IN:GET_INFO_TRAFFIC Are there any traffic accidents [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION_USER me ] ] ] ] ] ]", "normalized_utterance": "ARE THERE ANY TRAFFIC ACCIDENTS AROUND ME", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC ARE THERE ANY TRAFFIC ACCIDENTS [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION_USER ME ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION_USER ME ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "around me"}}, {"name": "get_info_traffic", "arguments": {"location": "MOCK_RESPONSE(get_location)"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00003910.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_ARRIVAL What 's the arrival time if I leave [SL:SOURCE [IN:GET_LOCATION_HOME [SL:CONTACT my ] house from [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER Syracuse ] ] ] ] ] to [SL:DESTINATION New York City ] ? ]", "parameters": {}, "sentence": "What's the arrival time if I leave my house from Syracuse to New York City?", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT 'S THE ARRIVAL TIME IF I LEAVE MY HOUSE FROM SYRACUSE TO NEW YORK CITY", "normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL WHAT 'S THE ARRIVAL TIME IF I LEAVE [SL:SOURCE [IN:GET_LOCATION_HOME [SL:CONTACT MY ] HOUSE FROM [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER SYRACUSE ] ] ] ] ] TO [SL:DESTINATION NEW YORK CITY ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00003910.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "What's the arrival time if I leave my house from Syracuse to New York City?", "seqlogical": "[IN:GET_ESTIMATED_ARRIVAL What 's the arrival time if I leave [SL:SOURCE [IN:GET_LOCATION_HOME [SL:CONTACT my ] house from [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER Syracuse ] ] ] ] ] to [SL:DESTINATION New York City ] ? ]", "normalized_utterance": "WHAT 'S THE ARRIVAL TIME IF I LEAVE MY HOUSE FROM SYRACUSE TO NEW YORK CITY", "normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL WHAT 'S THE ARRIVAL TIME IF I LEAVE [SL:SOURCE [IN:GET_LOCATION_HOME [SL:CONTACT MY ] HOUSE FROM [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER SYRACUSE ] ] ] ] ] TO [SL:DESTINATION NEW YORK CITY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL [SL:SOURCE [IN:GET_LOCATION_HOME [SL:CONTACT MY ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER SYRACUSE ] ] ] ] ] [SL:DESTINATION NEW YORK CITY ] ]"}, "prediction": "", "function_calls": [{"name": "get_estimated_arrival", "arguments": {"source": "Syracuse", "destination": "New York City"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00002885.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC how fast is the traffic [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ] ] moving ]", "parameters": {}, "sentence": "how fast is the traffic near me moving", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "HOW FAST IS THE TRAFFIC NEAR ME MOVING", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW FAST IS THE TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ] ] MOVING ]", "raw_data": {"file_id": "test_1/navigation_test/00002885.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "how fast is the traffic near me moving", "seqlogical": "[IN:GET_INFO_TRAFFIC how fast is the traffic [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ] ] moving ]", "normalized_utterance": "HOW FAST IS THE TRAFFIC NEAR ME MOVING", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW FAST IS THE TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ] ] MOVING ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_info_traffic", "arguments": {"location": "MOCK_RESPONSE(get_location)"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00002123.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_ARRIVAL If I leave [SL:DATE_TIME_DEPARTURE right now ] can I make it for a [SL:DESTINATION [IN:GET_EVENT [SL:DATE_TIME 2 : 00 pm ] [SL:CATEGORY_EVENT meeting ] at [SL:LOCATION [IN:GET_LOCATION_SCHOOL [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION son ] 's school ] ] ] ] ? ]", "parameters": {}, "sentence": "If I leave right now can I make it for a 2:00pm meeting at my son's school?", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "IF I LEAVE RIGHT NOW CAN I MAKE IT FOR A TWO PM MEETING AT MY SON 'S SCHOOL", "normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL IF I LEAVE [SL:DATE_TIME_DEPARTURE RIGHT NOW ] CAN I MAKE IT FOR A [SL:DESTINATION [IN:GET_EVENT [SL:DATE_TIME TWO PM ] [SL:CATEGORY_EVENT MEETING ] AT [SL:LOCATION [IN:GET_LOCATION_SCHOOL [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION SON ] 'S SCHOOL ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00002123.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "If I leave right now can I make it for a 2:00pm meeting at my son's school?", "seqlogical": "[IN:GET_ESTIMATED_ARRIVAL If I leave [SL:DATE_TIME_DEPARTURE right now ] can I make it for a [SL:DESTINATION [IN:GET_EVENT [SL:DATE_TIME 2 : 00 pm ] [SL:CATEGORY_EVENT meeting ] at [SL:LOCATION [IN:GET_LOCATION_SCHOOL [SL:CONTACT_RELATED my ] [SL:TYPE_RELATION son ] 's school ] ] ] ] ? ]", "normalized_utterance": "IF I LEAVE RIGHT NOW CAN I MAKE IT FOR A TWO PM MEETING AT MY SON 'S SCHOOL", "normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL IF I LEAVE [SL:DATE_TIME_DEPARTURE RIGHT NOW ] CAN I MAKE IT FOR A [SL:DESTINATION [IN:GET_EVENT [SL:DATE_TIME TWO PM ] [SL:CATEGORY_EVENT MEETING ] AT [SL:LOCATION [IN:GET_LOCATION_SCHOOL [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION SON ] 'S SCHOOL ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL [SL:DATE_TIME_DEPARTURE RIGHT NOW ] [SL:DESTINATION [IN:GET_EVENT [SL:DATE_TIME TWO PM ] [SL:CATEGORY_EVENT MEETING ] [SL:LOCATION [IN:GET_LOCATION_SCHOOL [SL:CONTACT_RELATED MY ] [SL:TYPE_RELATION SON ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_estimated_departure", "arguments": {"destination": "my son's school", "date_time_arrival": "2 pm"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00002353.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC Will I run into construction on my way to [SL:DESTINATION [IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the MODA center ] ] ] for the [SL:NAME_EVENT Slipknot ] [SL:CATEGORY_EVENT concert ] ] ] ? ]", "parameters": {}, "sentence": "Will I run into construction on my way to the MODA center for the Slipknot concert?", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "WILL I RUN INTO CONSTRUCTION ON MY WAY TO THE MODA CENTER FOR THE SLIPKNOT CONCERT", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC WILL I RUN INTO CONSTRUCTION ON MY WAY TO [SL:DESTINATION [IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE MODA CENTER ] ] ] FOR THE [SL:NAME_EVENT SLIPKNOT ] [SL:CATEGORY_EVENT CONCERT ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00002353.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "Will I run into construction on my way to the MODA center for the Slipknot concert?", "seqlogical": "[IN:GET_INFO_TRAFFIC Will I run into construction on my way to [SL:DESTINATION [IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the MODA center ] ] ] for the [SL:NAME_EVENT Slipknot ] [SL:CATEGORY_EVENT concert ] ] ] ? ]", "normalized_utterance": "WILL I RUN INTO CONSTRUCTION ON MY WAY TO THE MODA CENTER FOR THE SLIPKNOT CONCERT", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC WILL I RUN INTO CONSTRUCTION ON MY WAY TO [SL:DESTINATION [IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE MODA CENTER ] ] ] FOR THE [SL:NAME_EVENT SLIPKNOT ] [SL:CATEGORY_EVENT CONCERT ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:DESTINATION [IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE MODA CENTER ] ] ] [SL:NAME_EVENT SLIPKNOT ] [SL:CATEGORY_EVENT CONCERT ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "MODA center"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00002924.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC Why is there so much traffic on [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION US 127 S ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION Hudson ] ] ] ] ] ]", "parameters": {}, "sentence": "Why is there so much traffic on US 127 S near Hudson", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "WHY IS THERE SO MUCH TRAFFIC ON US A HUNDRED TWENTY SEVEN S NEAR HUDSON", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC WHY IS THERE SO MUCH TRAFFIC ON [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION US A HUNDRED TWENTY SEVEN S ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION HUDSON ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00002924.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "Why is there so much traffic on US 127 S near Hudson", "seqlogical": "[IN:GET_INFO_TRAFFIC Why is there so much traffic on [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION US 127 S ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION Hudson ] ] ] ] ] ]", "normalized_utterance": "WHY IS THERE SO MUCH TRAFFIC ON US A HUNDRED TWENTY SEVEN S NEAR HUDSON", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC WHY IS THERE SO MUCH TRAFFIC ON [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION US A HUNDRED TWENTY SEVEN S ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION HUDSON ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION US A HUNDRED TWENTY SEVEN S ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION HUDSON ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "US 127 S near Hudson"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00003383.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_DURATION With construction , how long will it take me to get to [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT my ] [SL:CATEGORY_EVENT manicure ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Nails Inc ] ] ] ] ] ? ]", "parameters": {}, "sentence": "With construction, how long will it take me to get to my manicure at Nails Inc?", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "WITH CONSTRUCTION HOW LONG WILL IT TAKE ME TO GET TO MY MANICURE AT NAILS INC", "normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION WITH CONSTRUCTION HOW LONG WILL IT TAKE ME TO GET TO [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT MY ] [SL:CATEGORY_EVENT MANICURE ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP NAILS INC ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00003383.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "With construction, how long will it take me to get to my manicure at Nails Inc?", "seqlogical": "[IN:GET_ESTIMATED_DURATION With construction , how long will it take me to get to [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT my ] [SL:CATEGORY_EVENT manicure ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Nails Inc ] ] ] ] ] ? ]", "normalized_utterance": "WITH CONSTRUCTION HOW LONG WILL IT TAKE ME TO GET TO MY MANICURE AT NAILS INC", "normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION WITH CONSTRUCTION HOW LONG WILL IT TAKE ME TO GET TO [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT MY ] [SL:CATEGORY_EVENT MANICURE ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP NAILS INC ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT MY ] [SL:CATEGORY_EVENT MANICURE ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP NAILS INC ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "Nails Inc."}}, {"name": "get_estimated_duration", "arguments": {"destination": "Nails Inc.", "road_condition": "construction"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00002634.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC traffic [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION snedigar ] ] ] ] ] ]", "parameters": {}, "sentence": "traffic near snedigar", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "TRAFFIC NEAR SNEDIGAR", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION SNEDIGAR ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00002634.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "traffic near snedigar", "seqlogical": "[IN:GET_INFO_TRAFFIC traffic [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION snedigar ] ] ] ] ] ]", "normalized_utterance": "TRAFFIC NEAR SNEDIGAR", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION SNEDIGAR ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION SNEDIGAR ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "Snedeker"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00003304.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC How 's traffic [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the Music Festival ] in [SL:LOCATION Orlando ] ] ] ] ] ]", "parameters": {}, "sentence": "How's traffic around the Music Festival in Orlando", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "HOW 'S TRAFFIC AROUND THE MUSIC FESTIVAL IN ORLANDO", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW 'S TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE MUSIC FESTIVAL ] IN [SL:LOCATION ORLANDO ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00003304.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "How's traffic around the Music Festival in Orlando", "seqlogical": "[IN:GET_INFO_TRAFFIC How 's traffic [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the Music Festival ] in [SL:LOCATION Orlando ] ] ] ] ] ]", "normalized_utterance": "HOW 'S TRAFFIC AROUND THE MUSIC FESTIVAL IN ORLANDO", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW 'S TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE MUSIC FESTIVAL ] IN [SL:LOCATION ORLANDO ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE MUSIC FESTIVAL ] [SL:LOCATION ORLANDO ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "Orlando"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00004495.wav", "split": "test", "intent": "[IN:GET_LOCATION is there a [SL:CATEGORY_LOCATION bus stop ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION [IN:GET_LOCATION_WORK [SL:CONTACT my ] new office ] ] ] ] ]", "parameters": {}, "sentence": "is there a bus stop near my new office", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "IS THERE A BUS STOP NEAR MY NEW OFFICE", "normalized_seqlogical": "[IN:GET_LOCATION IS THERE A [SL:CATEGORY_LOCATION BUS STOP ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_WORK [SL:CONTACT MY ] NEW OFFICE ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00004495.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "is there a bus stop near my new office", "seqlogical": "[IN:GET_LOCATION is there a [SL:CATEGORY_LOCATION bus stop ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION [IN:GET_LOCATION_WORK [SL:CONTACT my ] new office ] ] ] ] ]", "normalized_utterance": "IS THERE A BUS STOP NEAR MY NEW OFFICE", "normalized_seqlogical": "[IN:GET_LOCATION IS THERE A [SL:CATEGORY_LOCATION BUS STOP ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_WORK [SL:CONTACT MY ] NEW OFFICE ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_LOCATION [SL:CATEGORY_LOCATION BUS STOP ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_WORK [SL:CONTACT MY ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "my new office"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00000972.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_ARRIVAL if i leave [SL:DATE_TIME_DEPARTURE now ] can i make it to [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT my ] [SL:DATE_TIME 4 pm ] [SL:CATEGORY_EVENT meeting ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Harley Davidson headquarters ] ] ] ] ] ]", "parameters": {}, "sentence": "if i leave now can i make it to my 4pm meeting at Harley Davidson headquarters", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "IF I LEAVE NOW CAN I MAKE IT TO MY FOUR PM MEETING AT HARLEY DAVIDSON HEADQUARTERS", "normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL IF I LEAVE [SL:DATE_TIME_DEPARTURE NOW ] CAN I MAKE IT TO [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT MY ] [SL:DATE_TIME FOUR PM ] [SL:CATEGORY_EVENT MEETING ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP HARLEY DAVIDSON HEADQUARTERS ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00000972.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "if i leave now can i make it to my 4pm meeting at Harley Davidson headquarters", "seqlogical": "[IN:GET_ESTIMATED_ARRIVAL if i leave [SL:DATE_TIME_DEPARTURE now ] can i make it to [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT my ] [SL:DATE_TIME 4 pm ] [SL:CATEGORY_EVENT meeting ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Harley Davidson headquarters ] ] ] ] ] ]", "normalized_utterance": "IF I LEAVE NOW CAN I MAKE IT TO MY FOUR PM MEETING AT HARLEY DAVIDSON HEADQUARTERS", "normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL IF I LEAVE [SL:DATE_TIME_DEPARTURE NOW ] CAN I MAKE IT TO [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT MY ] [SL:DATE_TIME FOUR PM ] [SL:CATEGORY_EVENT MEETING ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP HARLEY DAVIDSON HEADQUARTERS ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL [SL:DATE_TIME_DEPARTURE NOW ] [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT MY ] [SL:DATE_TIME FOUR PM ] [SL:CATEGORY_EVENT MEETING ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP HARLEY DAVIDSON HEADQUARTERS ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_estimated_departure", "arguments": {"destination": "Harley-Davidson headquarters", "date_time_arrival": "today at 4pm"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00004178.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC Read me update on traffic [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION I40 ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS west of ] [SL:LOCATION Albuquerque ] ] ] ] ] ]", "parameters": {}, "sentence": "Read me update on traffic I40 west of Albuquerque", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "READ ME UPDATE ON TRAFFIC IFOUR OH WEST OF ALBUQUERQUE", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC READ ME UPDATE ON TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION IFOUR OH ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS WEST OF ] [SL:LOCATION ALBUQUERQUE ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00004178.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "Read me update on traffic I40 west of Albuquerque", "seqlogical": "[IN:GET_INFO_TRAFFIC Read me update on traffic [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION I40 ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS west of ] [SL:LOCATION Albuquerque ] ] ] ] ] ]", "normalized_utterance": "READ ME UPDATE ON TRAFFIC IFOUR OH WEST OF ALBUQUERQUE", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC READ ME UPDATE ON TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION IFOUR OH ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS WEST OF ] [SL:LOCATION ALBUQUERQUE ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION IFOUR OH ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS WEST OF ] [SL:LOCATION ALBUQUERQUE ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "I-40 west of Albuquerque"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00003922.wav", "split": "test", "intent": "[IN:GET_INFO_ROAD_CONDITION Is there any [SL:ROAD_CONDITION icy ] roads [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION [IN:GET_LOCATION_WORK [SL:CONTACT my ] work ] ] ] ] [SL:DATE_TIME this morning ] ? ]", "parameters": {}, "sentence": "Is there any icy roads near my work this morning?", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "IS THERE ANY ICY ROADS NEAR MY WORK THIS MORNING", "normalized_seqlogical": "[IN:GET_INFO_ROAD_CONDITION IS THERE ANY [SL:ROAD_CONDITION ICY ] ROADS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_WORK [SL:CONTACT MY ] WORK ] ] ] ] [SL:DATE_TIME THIS MORNING ] ]", "raw_data": {"file_id": "test_1/navigation_test/00003922.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "Is there any icy roads near my work this morning?", "seqlogical": "[IN:GET_INFO_ROAD_CONDITION Is there any [SL:ROAD_CONDITION icy ] roads [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION [IN:GET_LOCATION_WORK [SL:CONTACT my ] work ] ] ] ] [SL:DATE_TIME this morning ] ? ]", "normalized_utterance": "IS THERE ANY ICY ROADS NEAR MY WORK THIS MORNING", "normalized_seqlogical": "[IN:GET_INFO_ROAD_CONDITION IS THERE ANY [SL:ROAD_CONDITION ICY ] ROADS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_WORK [SL:CONTACT MY ] WORK ] ] ] ] [SL:DATE_TIME THIS MORNING ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_ROAD_CONDITION [SL:ROAD_CONDITION ICY ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION_WORK [SL:CONTACT MY ] ] ] ] ] [SL:DATE_TIME THIS MORNING ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "my work"}}, {"name": "get_info_road_condition", "arguments": {"location": "MOCK_RESPONSE(get_location)", "road_condition": "icy", "date_time": "this morning"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00000326.wav", "split": "test", "intent": "[IN:GET_DIRECTIONS show me the shortest route to reach [SL:DESTINATION [IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Smithwick Theater ] ] ] for [SL:CATEGORY_EVENT art exhibition ] ] ] . ]", "parameters": {}, "sentence": "show me the shortest route to reach Smithwick Theater for art exhibition.", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "SHOW ME THE SHORTEST ROUTE TO REACH SMITHWICK THEATER FOR ART EXHIBITION", "normalized_seqlogical": "[IN:GET_DIRECTIONS SHOW ME THE SHORTEST ROUTE TO REACH [SL:DESTINATION [IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP SMITHWICK THEATER ] ] ] FOR [SL:CATEGORY_EVENT ART EXHIBITION ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00000326.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "show me the shortest route to reach Smithwick Theater for art exhibition.", "seqlogical": "[IN:GET_DIRECTIONS show me the shortest route to reach [SL:DESTINATION [IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Smithwick Theater ] ] ] for [SL:CATEGORY_EVENT art exhibition ] ] ] . ]", "normalized_utterance": "SHOW ME THE SHORTEST ROUTE TO REACH SMITHWICK THEATER FOR ART EXHIBITION", "normalized_seqlogical": "[IN:GET_DIRECTIONS SHOW ME THE SHORTEST ROUTE TO REACH [SL:DESTINATION [IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP SMITHWICK THEATER ] ] ] FOR [SL:CATEGORY_EVENT ART EXHIBITION ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_DIRECTIONS [SL:DESTINATION [IN:GET_EVENT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP SMITHWICK THEATER ] ] ] [SL:CATEGORY_EVENT ART EXHIBITION ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "Smithwick Theater"}}, {"name": "get_directions", "arguments": {"destination": "Smithwick Theater", "path": "shortest"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00002852.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC How 's the traffic [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the soccer game ] in [SL:LOCATION Hixson , Tennessee ] [SL:DATE_TIME tonight ] ] ] ] ] ? ]", "parameters": {}, "sentence": "How's the traffic around the soccer game in Hixson, Tennessee tonight?", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "HOW 'S THE TRAFFIC AROUND THE SOCCER GAME IN HIXSON TENNESSEE TONIGHT", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW 'S THE TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE SOCCER GAME ] IN [SL:LOCATION HIXSON TENNESSEE ] [SL:DATE_TIME TONIGHT ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00002852.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "How's the traffic around the soccer game in Hixson, Tennessee tonight?", "seqlogical": "[IN:GET_INFO_TRAFFIC How 's the traffic [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the soccer game ] in [SL:LOCATION Hixson , Tennessee ] [SL:DATE_TIME tonight ] ] ] ] ] ? ]", "normalized_utterance": "HOW 'S THE TRAFFIC AROUND THE SOCCER GAME IN HIXSON TENNESSEE TONIGHT", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW 'S THE TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE SOCCER GAME ] IN [SL:LOCATION HIXSON TENNESSEE ] [SL:DATE_TIME TONIGHT ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE SOCCER GAME ] [SL:LOCATION HIXSON TENNESSEE ] [SL:DATE_TIME TONIGHT ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "Hixson, Tennessee", "date_time": "tonight"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00001668.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_ARRIVAL If I [SL:SOURCE [IN:GET_EVENT [SL:CATEGORY_EVENT the concert ] ] ] gets over [SL:DATE_TIME_DEPARTURE at 11 pm ] , what time will I get [SL:DESTINATION [IN:GET_LOCATION_HOME home in [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER Newport ] ] ] ] ] ? ]", "parameters": {}, "sentence": "If I the concert gets over at 11 pm, what time will I get home in Newport?", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "IF I THE CONCERT GETS OVER AT ELEVEN PM WHAT TIME WILL I GET HOME IN NEWPORT", "normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL IF I [SL:SOURCE [IN:GET_EVENT [SL:CATEGORY_EVENT THE CONCERT ] ] ] GETS OVER [SL:DATE_TIME_DEPARTURE AT ELEVEN PM ] WHAT TIME WILL I GET [SL:DESTINATION [IN:GET_LOCATION_HOME HOME IN [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER NEWPORT ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00001668.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "If I the concert gets over at 11 pm, what time will I get home in Newport?", "seqlogical": "[IN:GET_ESTIMATED_ARRIVAL If I [SL:SOURCE [IN:GET_EVENT [SL:CATEGORY_EVENT the concert ] ] ] gets over [SL:DATE_TIME_DEPARTURE at 11 pm ] , what time will I get [SL:DESTINATION [IN:GET_LOCATION_HOME home in [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER Newport ] ] ] ] ] ? ]", "normalized_utterance": "IF I THE CONCERT GETS OVER AT ELEVEN PM WHAT TIME WILL I GET HOME IN NEWPORT", "normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL IF I [SL:SOURCE [IN:GET_EVENT [SL:CATEGORY_EVENT THE CONCERT ] ] ] GETS OVER [SL:DATE_TIME_DEPARTURE AT ELEVEN PM ] WHAT TIME WILL I GET [SL:DESTINATION [IN:GET_LOCATION_HOME HOME IN [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER NEWPORT ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL [SL:SOURCE [IN:GET_EVENT [SL:CATEGORY_EVENT THE CONCERT ] ] ] [SL:DATE_TIME_DEPARTURE AT ELEVEN PM ] [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER NEWPORT ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_estimated_arrival", "arguments": {"destination": "Newport", "date_time_departure": "11pm"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00005627.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_DURATION How long will it take to [SL:METHOD_TRAVEL drive ] from [SL:SOURCE [IN:GET_LOCATION_HOME [SL:TYPE_RELATION Mom ] 's house ] ] to [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT JazzFest ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP The Landing ] [SL:LOCATION_MODIFIER downtown ] ] ] ] ] ? ]", "parameters": {}, "sentence": "How long will it take to drive from Mom's house to JazzFest at The Landing downtown?", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "HOW LONG WILL IT TAKE TO DRIVE FROM MOM 'S HOUSE TO JAZZFEST AT THE LANDING DOWNTOWN", "normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION HOW LONG WILL IT TAKE TO [SL:METHOD_TRAVEL DRIVE ] FROM [SL:SOURCE [IN:GET_LOCATION_HOME [SL:TYPE_RELATION MOM ] 'S HOUSE ] ] TO [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT JAZZFEST ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE LANDING ] [SL:LOCATION_MODIFIER DOWNTOWN ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00005627.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "How long will it take to drive from Mom's house to JazzFest at The Landing downtown?", "seqlogical": "[IN:GET_ESTIMATED_DURATION How long will it take to [SL:METHOD_TRAVEL drive ] from [SL:SOURCE [IN:GET_LOCATION_HOME [SL:TYPE_RELATION Mom ] 's house ] ] to [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT JazzFest ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP The Landing ] [SL:LOCATION_MODIFIER downtown ] ] ] ] ] ? ]", "normalized_utterance": "HOW LONG WILL IT TAKE TO DRIVE FROM MOM 'S HOUSE TO JAZZFEST AT THE LANDING DOWNTOWN", "normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION HOW LONG WILL IT TAKE TO [SL:METHOD_TRAVEL DRIVE ] FROM [SL:SOURCE [IN:GET_LOCATION_HOME [SL:TYPE_RELATION MOM ] 'S HOUSE ] ] TO [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT JAZZFEST ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE LANDING ] [SL:LOCATION_MODIFIER DOWNTOWN ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION [SL:METHOD_TRAVEL DRIVE ] [SL:SOURCE [IN:GET_LOCATION_HOME [SL:TYPE_RELATION MOM ] ] ] [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT JAZZFEST ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE LANDING ] [SL:LOCATION_MODIFIER DOWNTOWN ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "Mom's house"}}, {"name": "get_location", "arguments": {"location_modifier": "Jazz Fest at the Landing downtown"}}, {"name": "get_estimated_duration", "arguments": {"source": "Mom's house", "destination": "Jazz Fest at the Landing downtown"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00002328.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_DURATION How long to get to [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the movies ] at [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:CATEGORY_LOCATION the mall ] ] ] ] ] ]", "parameters": {}, "sentence": "How long to get to the movies at the mall", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "HOW LONG TO GET TO THE MOVIES AT THE MALL", "normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION HOW LONG TO GET TO [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE MOVIES ] AT [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE MALL ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00002328.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "How long to get to the movies at the mall", "seqlogical": "[IN:GET_ESTIMATED_DURATION How long to get to [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the movies ] at [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:CATEGORY_LOCATION the mall ] ] ] ] ] ]", "normalized_utterance": "HOW LONG TO GET TO THE MOVIES AT THE MALL", "normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION HOW LONG TO GET TO [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE MOVIES ] AT [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE MALL ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION [SL:DESTINATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE MOVIES ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE MALL ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "the mall"}}, {"name": "get_estimated_duration", "arguments": {"destination": "the movies at the mall"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00000795.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC What time is [SL:DATE_TIME rush hour ] on [SL:LOCATION I - 75 ] [SL:DATE_TIME in the evening ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION Tampa ] ] ] ] ] ]", "parameters": {}, "sentence": "What time is rush hour on I-75 in the evening around Tampa", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT TIME IS RUSH HOUR ON I SEVENTY FIVE IN THE EVENING AROUND TAMPA", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC WHAT TIME IS [SL:DATE_TIME RUSH HOUR ] ON [SL:LOCATION I SEVENTY FIVE ] [SL:DATE_TIME IN THE EVENING ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION TAMPA ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00000795.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "What time is rush hour on I-75 in the evening around Tampa", "seqlogical": "[IN:GET_INFO_TRAFFIC What time is [SL:DATE_TIME rush hour ] on [SL:LOCATION I - 75 ] [SL:DATE_TIME in the evening ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION Tampa ] ] ] ] ] ]", "normalized_utterance": "WHAT TIME IS RUSH HOUR ON I SEVENTY FIVE IN THE EVENING AROUND TAMPA", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC WHAT TIME IS [SL:DATE_TIME RUSH HOUR ] ON [SL:LOCATION I SEVENTY FIVE ] [SL:DATE_TIME IN THE EVENING ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION TAMPA ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:DATE_TIME RUSH HOUR ] [SL:LOCATION I SEVENTY FIVE ] [SL:DATE_TIME IN THE EVENING ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION TAMPA ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "I-75", "date_time": "evening", "path": "I-75"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00000269.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC update on accident [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS close to ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT my ] house ] ] ] ] ]", "parameters": {}, "sentence": "update on accident close to my house", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "UPDATE ON ACCIDENT CLOSE TO MY HOUSE", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC UPDATE ON ACCIDENT [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS CLOSE TO ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT MY ] HOUSE ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00000269.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "update on accident close to my house", "seqlogical": "[IN:GET_INFO_TRAFFIC update on accident [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS close to ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT my ] house ] ] ] ] ]", "normalized_utterance": "UPDATE ON ACCIDENT CLOSE TO MY HOUSE", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC UPDATE ON ACCIDENT [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS CLOSE TO ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT MY ] HOUSE ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS CLOSE TO ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT MY ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "my house"}}, {"name": "get_info_traffic", "arguments": {"location": "my house"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00004342.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC Is the traffic moving normally on [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION I - 95 South ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION Melbourne , Florida ] ] ] ] ] ]", "parameters": {}, "sentence": "Is the traffic moving normally on I-95 South near Melbourne, Florida", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "IS THE TRAFFIC MOVING NORMALLY ON I NINETY FIVE SOUTH NEAR MELBOURNE FLORIDA", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC IS THE TRAFFIC MOVING NORMALLY ON [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION I NINETY FIVE SOUTH ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION MELBOURNE FLORIDA ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00004342.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "Is the traffic moving normally on I-95 South near Melbourne, Florida", "seqlogical": "[IN:GET_INFO_TRAFFIC Is the traffic moving normally on [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION I - 95 South ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION Melbourne , Florida ] ] ] ] ] ]", "normalized_utterance": "IS THE TRAFFIC MOVING NORMALLY ON I NINETY FIVE SOUTH NEAR MELBOURNE FLORIDA", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC IS THE TRAFFIC MOVING NORMALLY ON [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION I NINETY FIVE SOUTH ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION MELBOURNE FLORIDA ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION I NINETY FIVE SOUTH ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION MELBOURNE FLORIDA ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "I-95 South near Melbourne, Florida"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00002155.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC Are there any delays going into [SL:DESTINATION Ann Arbor ] from [SL:SOURCE [IN:GET_LOCATION the [SL:LOCATION Plymouth ] area [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:POINT_ON_MAP the U of M hospital ] ] ] ] ] ]", "parameters": {}, "sentence": "Are there any delays going into Ann Arbor from the Plymouth area near the U of M hospital", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "ARE THERE ANY DELAYS GOING INTO ANN ARBOR FROM THE PLYMOUTH AREA NEAR THE U OF M HOSPITAL", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC ARE THERE ANY DELAYS GOING INTO [SL:DESTINATION ANN ARBOR ] FROM [SL:SOURCE [IN:GET_LOCATION THE [SL:LOCATION PLYMOUTH ] AREA [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:POINT_ON_MAP THE U OF M HOSPITAL ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00002155.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "Are there any delays going into Ann Arbor from the Plymouth area near the U of M hospital", "seqlogical": "[IN:GET_INFO_TRAFFIC Are there any delays going into [SL:DESTINATION Ann Arbor ] from [SL:SOURCE [IN:GET_LOCATION the [SL:LOCATION Plymouth ] area [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:POINT_ON_MAP the U of M hospital ] ] ] ] ] ]", "normalized_utterance": "ARE THERE ANY DELAYS GOING INTO ANN ARBOR FROM THE PLYMOUTH AREA NEAR THE U OF M HOSPITAL", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC ARE THERE ANY DELAYS GOING INTO [SL:DESTINATION ANN ARBOR ] FROM [SL:SOURCE [IN:GET_LOCATION THE [SL:LOCATION PLYMOUTH ] AREA [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:POINT_ON_MAP THE U OF M HOSPITAL ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:DESTINATION ANN ARBOR ] [SL:SOURCE [IN:GET_LOCATION [SL:LOCATION PLYMOUTH ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:POINT_ON_MAP THE U OF M HOSPITAL ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "Ann Arbor", "source": "Plymouth", "destination": "U of M Hospital"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00000269.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC update on accident [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS close to ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT my ] house ] ] ] ] ]", "parameters": {}, "sentence": "update on accident close to my house", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "UPDATE ON ACCIDENT CLOSE TO MY HOUSE", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC UPDATE ON ACCIDENT [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS CLOSE TO ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT MY ] HOUSE ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00000269.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "update on accident close to my house", "seqlogical": "[IN:GET_INFO_TRAFFIC update on accident [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS close to ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT my ] house ] ] ] ] ]", "normalized_utterance": "UPDATE ON ACCIDENT CLOSE TO MY HOUSE", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC UPDATE ON ACCIDENT [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS CLOSE TO ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT MY ] HOUSE ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS CLOSE TO ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT MY ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "my house"}}, {"name": "get_info_traffic", "arguments": {"location": "MOCK_RESPONSE(get_location)"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00000857.wav", "split": "test", "intent": "[IN:GET_DIRECTIONS Whats the [SL:METHOD_TRAVEL driving ] directions to [SL:DESTINATION [IN:GET_LOCATION [SL:POINT_ON_MAP the Champs ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION downtown ] ] ] ] ] ]", "parameters": {}, "sentence": "Whats the driving directions to the Champs near downtown", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "WHATS THE DRIVING DIRECTIONS TO THE CHAMPS NEAR DOWNTOWN", "normalized_seqlogical": "[IN:GET_DIRECTIONS WHATS THE [SL:METHOD_TRAVEL DRIVING ] DIRECTIONS TO [SL:DESTINATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE CHAMPS ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION DOWNTOWN ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00000857.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "Whats the driving directions to the Champs near downtown", "seqlogical": "[IN:GET_DIRECTIONS Whats the [SL:METHOD_TRAVEL driving ] directions to [SL:DESTINATION [IN:GET_LOCATION [SL:POINT_ON_MAP the Champs ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION downtown ] ] ] ] ] ]", "normalized_utterance": "WHATS THE DRIVING DIRECTIONS TO THE CHAMPS NEAR DOWNTOWN", "normalized_seqlogical": "[IN:GET_DIRECTIONS WHATS THE [SL:METHOD_TRAVEL DRIVING ] DIRECTIONS TO [SL:DESTINATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE CHAMPS ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION DOWNTOWN ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_DIRECTIONS [SL:METHOD_TRAVEL DRIVING ] [SL:DESTINATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE CHAMPS ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION DOWNTOWN ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near downtown", "location": "Champs"}}, {"name": "get_directions", "arguments": {"destination": "Champs near downtown"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00003391.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC Are there any car accidents [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the Flambear Parade ] ] ] ] ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS off of ] [SL:LOCATION Houston street ] ] ] ? ]", "parameters": {}, "sentence": "Are there any car accidents near the Flambear Parade off of Houston street?", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "ARE THERE ANY CAR ACCIDENTS NEAR THE FLAMBEAR PARADE OFF OF HOUSTON STREET", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC ARE THERE ANY CAR ACCIDENTS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE FLAMBEAR PARADE ] ] ] ] ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS OFF OF ] [SL:LOCATION HOUSTON STREET ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00003391.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "Are there any car accidents near the Flambear Parade off of Houston street?", "seqlogical": "[IN:GET_INFO_TRAFFIC Are there any car accidents [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the Flambear Parade ] ] ] ] ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS off of ] [SL:LOCATION Houston street ] ] ] ? ]", "normalized_utterance": "ARE THERE ANY CAR ACCIDENTS NEAR THE FLAMBEAR PARADE OFF OF HOUSTON STREET", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC ARE THERE ANY CAR ACCIDENTS [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE FLAMBEAR PARADE ] ] ] ] ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS OFF OF ] [SL:LOCATION HOUSTON STREET ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE FLAMBEAR PARADE ] ] ] ] ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS OFF OF ] [SL:LOCATION HOUSTON STREET ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "Houston Street"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00004062.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC Is there an accident [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS in front of ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the carnival ] ] ] ] ] [SL:DATE_TIME right now ] ? ]", "parameters": {}, "sentence": "Is there an accident in front of the carnival right now?", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "IS THERE AN ACCIDENT IN FRONT OF THE CARNIVAL RIGHT NOW", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC IS THERE AN ACCIDENT [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS IN FRONT OF ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE CARNIVAL ] ] ] ] ] [SL:DATE_TIME RIGHT NOW ] ]", "raw_data": {"file_id": "test_1/navigation_test/00004062.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "Is there an accident in front of the carnival right now?", "seqlogical": "[IN:GET_INFO_TRAFFIC Is there an accident [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS in front of ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the carnival ] ] ] ] ] [SL:DATE_TIME right now ] ? ]", "normalized_utterance": "IS THERE AN ACCIDENT IN FRONT OF THE CARNIVAL RIGHT NOW", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC IS THERE AN ACCIDENT [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS IN FRONT OF ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE CARNIVAL ] ] ] ] ] [SL:DATE_TIME RIGHT NOW ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS IN FRONT OF ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE CARNIVAL ] ] ] ] ] [SL:DATE_TIME RIGHT NOW ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "carnival"}}, {"name": "get_info_traffic", "arguments": {"location": "carnival"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00001419.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC How 's traffic [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the Jazz Music Festival ] in [SL:LOCATION Cairo ] ] ] ] ] ? ]", "parameters": {}, "sentence": "How's traffic around the Jazz Music Festival in Cairo?", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "HOW 'S TRAFFIC AROUND THE JAZZ MUSIC FESTIVAL IN CAIRO", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW 'S TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE JAZZ MUSIC FESTIVAL ] IN [SL:LOCATION CAIRO ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00001419.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "How's traffic around the Jazz Music Festival in Cairo?", "seqlogical": "[IN:GET_INFO_TRAFFIC How 's traffic [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the Jazz Music Festival ] in [SL:LOCATION Cairo ] ] ] ] ] ? ]", "normalized_utterance": "HOW 'S TRAFFIC AROUND THE JAZZ MUSIC FESTIVAL IN CAIRO", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW 'S TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE JAZZ MUSIC FESTIVAL ] IN [SL:LOCATION CAIRO ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE JAZZ MUSIC FESTIVAL ] [SL:LOCATION CAIRO ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "Cairo"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00001154.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_ARRIVAL If i leave [SL:DATE_TIME_DEPARTURE now ] will I make it to [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT my ] [SL:CATEGORY_EVENT appointment ] at [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the dentist ] on [SL:LOCATION_MODIFIER Hwy 74 ] in [SL:LOCATION_MODIFIER Windsor ] ] ] [SL:DATE_TIME at 3 ] ] ] ]", "parameters": {}, "sentence": "If i leave now will I make it to my appointment at the dentist on Hwy 74 in Windsor at 3", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "IF I LEAVE NOW WILL I MAKE IT TO MY APPOINTMENT AT THE DENTIST ON HIGHWAY SEVENTY FOUR IN WINDSOR AT THREE", "normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL IF I LEAVE [SL:DATE_TIME_DEPARTURE NOW ] WILL I MAKE IT TO [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT MY ] [SL:CATEGORY_EVENT APPOINTMENT ] AT [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE DENTIST ] ON [SL:LOCATION_MODIFIER HIGHWAY SEVENTY FOUR ] IN [SL:LOCATION_MODIFIER WINDSOR ] ] ] [SL:DATE_TIME AT THREE ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00001154.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "If i leave now will I make it to my appointment at the dentist on Hwy 74 in Windsor at 3", "seqlogical": "[IN:GET_ESTIMATED_ARRIVAL If i leave [SL:DATE_TIME_DEPARTURE now ] will I make it to [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT my ] [SL:CATEGORY_EVENT appointment ] at [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the dentist ] on [SL:LOCATION_MODIFIER Hwy 74 ] in [SL:LOCATION_MODIFIER Windsor ] ] ] [SL:DATE_TIME at 3 ] ] ] ]", "normalized_utterance": "IF I LEAVE NOW WILL I MAKE IT TO MY APPOINTMENT AT THE DENTIST ON HIGHWAY SEVENTY FOUR IN WINDSOR AT THREE", "normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL IF I LEAVE [SL:DATE_TIME_DEPARTURE NOW ] WILL I MAKE IT TO [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT MY ] [SL:CATEGORY_EVENT APPOINTMENT ] AT [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE DENTIST ] ON [SL:LOCATION_MODIFIER HIGHWAY SEVENTY FOUR ] IN [SL:LOCATION_MODIFIER WINDSOR ] ] ] [SL:DATE_TIME AT THREE ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL [SL:DATE_TIME_DEPARTURE NOW ] [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT MY ] [SL:CATEGORY_EVENT APPOINTMENT ] [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE DENTIST ] [SL:LOCATION_MODIFIER HIGHWAY SEVENTY FOUR ] [SL:LOCATION_MODIFIER WINDSOR ] ] ] [SL:DATE_TIME AT THREE ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_estimated_departure", "arguments": {"destination": "Highway 74, Windsor", "date_time_arrival": "today at 3pm"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00004128.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC hows the traffic on [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the bridges ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ] ] ]", "parameters": {}, "sentence": "hows the traffic on the bridges near me", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "HOWS THE TRAFFIC ON THE BRIDGES NEAR ME", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOWS THE TRAFFIC ON [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE BRIDGES ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00004128.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "hows the traffic on the bridges near me", "seqlogical": "[IN:GET_INFO_TRAFFIC hows the traffic on [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the bridges ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION_USER me ] ] ] ] ] ]", "normalized_utterance": "HOWS THE TRAFFIC ON THE BRIDGES NEAR ME", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOWS THE TRAFFIC ON [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE BRIDGES ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE BRIDGES ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION_USER ME ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "near me"}}, {"name": "get_info_traffic", "arguments": {"location": "bridges near your location"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00004247.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC how is [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the freeway ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS by ] [SL:LOCATION_USER me ] ] ] ] ] ]", "parameters": {}, "sentence": "how is the freeway by me", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "HOW IS THE FREEWAY BY ME", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW IS [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE FREEWAY ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS BY ] [SL:LOCATION_USER ME ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00004247.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "how is the freeway by me", "seqlogical": "[IN:GET_INFO_TRAFFIC how is [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the freeway ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS by ] [SL:LOCATION_USER me ] ] ] ] ] ]", "normalized_utterance": "HOW IS THE FREEWAY BY ME", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW IS [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE FREEWAY ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS BY ] [SL:LOCATION_USER ME ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE FREEWAY ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS BY ] [SL:LOCATION_USER ME ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "freeway"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00004044.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC Are there construction zones [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the Wyndham Hotel ] in [SL:LOCATION_MODIFIER St . Louis ] ] ] ] ] ? ]", "parameters": {}, "sentence": "Are there construction zones near the Wyndham Hotel in St. Louis?", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "ARE THERE CONSTRUCTION ZONES NEAR THE WYNDHAM HOTEL IN SAINT LOUIS", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC ARE THERE CONSTRUCTION ZONES [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE WYNDHAM HOTEL ] IN [SL:LOCATION_MODIFIER SAINT LOUIS ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00004044.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "Are there construction zones near the Wyndham Hotel in St. Louis?", "seqlogical": "[IN:GET_INFO_TRAFFIC Are there construction zones [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the Wyndham Hotel ] in [SL:LOCATION_MODIFIER St . Louis ] ] ] ] ] ? ]", "normalized_utterance": "ARE THERE CONSTRUCTION ZONES NEAR THE WYNDHAM HOTEL IN SAINT LOUIS", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC ARE THERE CONSTRUCTION ZONES [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE WYNDHAM HOTEL ] IN [SL:LOCATION_MODIFIER SAINT LOUIS ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE WYNDHAM HOTEL ] [SL:LOCATION_MODIFIER SAINT LOUIS ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "Windham Hotel, St. Louis", "road_condition": "construction zones"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00003134.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC How 's traffic [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the Asian Games final ] in [SL:LOCATION Gelora Bung Karno , Jakarta ] ] ] ] ] ? ]", "parameters": {}, "sentence": "How's traffic around the Asian Games final in Gelora Bung Karno, Jakarta?", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "HOW 'S TRAFFIC AROUND THE ASIAN GAMES FINAL IN GELORA BUNG KARNO JAKARTA", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW 'S TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE ASIAN GAMES FINAL ] IN [SL:LOCATION GELORA BUNG KARNO JAKARTA ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00003134.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "How's traffic around the Asian Games final in Gelora Bung Karno, Jakarta?", "seqlogical": "[IN:GET_INFO_TRAFFIC How 's traffic [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the Asian Games final ] in [SL:LOCATION Gelora Bung Karno , Jakarta ] ] ] ] ] ? ]", "normalized_utterance": "HOW 'S TRAFFIC AROUND THE ASIAN GAMES FINAL IN GELORA BUNG KARNO JAKARTA", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW 'S TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE ASIAN GAMES FINAL ] IN [SL:LOCATION GELORA BUNG KARNO JAKARTA ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE ASIAN GAMES FINAL ] [SL:LOCATION GELORA BUNG KARNO JAKARTA ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "Gelora Bung Karno, Jakarta"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00000532.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_DURATION How long will it take to get to [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT my ] [SL:CATEGORY_EVENT appointment ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Dr . Blackwell 's office ] ] ] ] ] ]", "parameters": {}, "sentence": "How long will it take to get to my appointment at Dr. Blackwell's office", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "HOW LONG WILL IT TAKE TO GET TO MY APPOINTMENT AT DR BLACKWELL 'S OFFICE", "normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION HOW LONG WILL IT TAKE TO GET TO [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT MY ] [SL:CATEGORY_EVENT APPOINTMENT ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP DR BLACKWELL 'S OFFICE ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00000532.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "How long will it take to get to my appointment at Dr. Blackwell's office", "seqlogical": "[IN:GET_ESTIMATED_DURATION How long will it take to get to [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT my ] [SL:CATEGORY_EVENT appointment ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Dr . Blackwell 's office ] ] ] ] ] ]", "normalized_utterance": "HOW LONG WILL IT TAKE TO GET TO MY APPOINTMENT AT DR BLACKWELL 'S OFFICE", "normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION HOW LONG WILL IT TAKE TO GET TO [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT MY ] [SL:CATEGORY_EVENT APPOINTMENT ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP DR BLACKWELL 'S OFFICE ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT MY ] [SL:CATEGORY_EVENT APPOINTMENT ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP DR BLACKWELL 'S OFFICE ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "Dr. Blackwell's office"}}, {"name": "get_estimated_duration", "arguments": {"destination": "Dr. Blackwell's office"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00001309.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_DEPARTURE What time should i leave if i want to make it to [SL:DESTINATION [IN:GET_EVENT the [SL:DATE_TIME 7 pm ] [SL:NAME_EVENT R Kelly ] [SL:CATEGORY_EVENT concert ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the Blaisdell Center ] ] ] ] ] coming from [SL:SOURCE [IN:GET_LOCATION [SL:POINT_ON_MAP Punchbowl ] ] ] ]", "parameters": {}, "sentence": "What time should i leave if i want to make it to the 7pm R Kelly concert at the Blaisdell Center coming from Punchbowl", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT TIME SHOULD I LEAVE IF I WANT TO MAKE IT TO THE SEVEN PM R KELLY CONCERT AT THE BLAISDELL CENTER COMING FROM PUNCHBOWL", "normalized_seqlogical": "[IN:GET_ESTIMATED_DEPARTURE WHAT TIME SHOULD I LEAVE IF I WANT TO MAKE IT TO [SL:DESTINATION [IN:GET_EVENT THE [SL:DATE_TIME SEVEN PM ] [SL:NAME_EVENT R KELLY ] [SL:CATEGORY_EVENT CONCERT ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE BLAISDELL CENTER ] ] ] ] ] COMING FROM [SL:SOURCE [IN:GET_LOCATION [SL:POINT_ON_MAP PUNCHBOWL ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00001309.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "What time should i leave if i want to make it to the 7pm R Kelly concert at the Blaisdell Center coming from Punchbowl", "seqlogical": "[IN:GET_ESTIMATED_DEPARTURE What time should i leave if i want to make it to [SL:DESTINATION [IN:GET_EVENT the [SL:DATE_TIME 7 pm ] [SL:NAME_EVENT R Kelly ] [SL:CATEGORY_EVENT concert ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the Blaisdell Center ] ] ] ] ] coming from [SL:SOURCE [IN:GET_LOCATION [SL:POINT_ON_MAP Punchbowl ] ] ] ]", "normalized_utterance": "WHAT TIME SHOULD I LEAVE IF I WANT TO MAKE IT TO THE SEVEN PM R KELLY CONCERT AT THE BLAISDELL CENTER COMING FROM PUNCHBOWL", "normalized_seqlogical": "[IN:GET_ESTIMATED_DEPARTURE WHAT TIME SHOULD I LEAVE IF I WANT TO MAKE IT TO [SL:DESTINATION [IN:GET_EVENT THE [SL:DATE_TIME SEVEN PM ] [SL:NAME_EVENT R KELLY ] [SL:CATEGORY_EVENT CONCERT ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE BLAISDELL CENTER ] ] ] ] ] COMING FROM [SL:SOURCE [IN:GET_LOCATION [SL:POINT_ON_MAP PUNCHBOWL ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_DEPARTURE [SL:DESTINATION [IN:GET_EVENT [SL:DATE_TIME SEVEN PM ] [SL:NAME_EVENT R KELLY ] [SL:CATEGORY_EVENT CONCERT ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE BLAISDELL CENTER ] ] ] ] ] [SL:SOURCE [IN:GET_LOCATION [SL:POINT_ON_MAP PUNCHBOWL ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_estimated_departure", "arguments": {"source": "Punchbowl", "destination": "Blaisdell Center", "date_time_arrival": "today at 7pm"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00000924.wav", "split": "test", "intent": "[IN:GET_INFO_ROAD_CONDITION Is there [SL:ROAD_CONDITION any flooding ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT my ] house ] ] ] ] [SL:DATE_TIME this morning ] ? ]", "parameters": {}, "sentence": "Is there any flooding around my house this morning?", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "IS THERE ANY FLOODING AROUND MY HOUSE THIS MORNING", "normalized_seqlogical": "[IN:GET_INFO_ROAD_CONDITION IS THERE [SL:ROAD_CONDITION ANY FLOODING ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT MY ] HOUSE ] ] ] ] [SL:DATE_TIME THIS MORNING ] ]", "raw_data": {"file_id": "test_1/navigation_test/00000924.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "Is there any flooding around my house this morning?", "seqlogical": "[IN:GET_INFO_ROAD_CONDITION Is there [SL:ROAD_CONDITION any flooding ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT my ] house ] ] ] ] [SL:DATE_TIME this morning ] ? ]", "normalized_utterance": "IS THERE ANY FLOODING AROUND MY HOUSE THIS MORNING", "normalized_seqlogical": "[IN:GET_INFO_ROAD_CONDITION IS THERE [SL:ROAD_CONDITION ANY FLOODING ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT MY ] HOUSE ] ] ] ] [SL:DATE_TIME THIS MORNING ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_ROAD_CONDITION [SL:ROAD_CONDITION ANY FLOODING ] [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_LOCATION_HOME [SL:CONTACT MY ] ] ] ] ] [SL:DATE_TIME THIS MORNING ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "my house"}}, {"name": "get_info_road_condition", "arguments": {"location": "MOCK_RESPONSE(get_location)", "road_condition": "flooding", "date_time": "this morning"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00003532.wav", "split": "test", "intent": "[IN:GET_DIRECTIONS Is there a way to get to [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT the garage sale ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP thr Green Valley Ranch ] ] ] ] ] with no heavy [SL:OBSTRUCTION_AVOID traffic ] ? ]", "parameters": {}, "sentence": "Is there a way to get to the garage sale at thr Green Valley Ranch with no heavy traffic?", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "IS THERE A WAY TO GET TO THE GARAGE SALE AT THR GREEN VALLEY RANCH WITH NO HEAVY TRAFFIC", "normalized_seqlogical": "[IN:GET_DIRECTIONS IS THERE A WAY TO GET TO [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE GARAGE SALE ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THR GREEN VALLEY RANCH ] ] ] ] ] WITH NO HEAVY [SL:OBSTRUCTION_AVOID TRAFFIC ] ]", "raw_data": {"file_id": "test_1/navigation_test/00003532.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "Is there a way to get to the garage sale at thr Green Valley Ranch with no heavy traffic?", "seqlogical": "[IN:GET_DIRECTIONS Is there a way to get to [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT the garage sale ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP thr Green Valley Ranch ] ] ] ] ] with no heavy [SL:OBSTRUCTION_AVOID traffic ] ? ]", "normalized_utterance": "IS THERE A WAY TO GET TO THE GARAGE SALE AT THR GREEN VALLEY RANCH WITH NO HEAVY TRAFFIC", "normalized_seqlogical": "[IN:GET_DIRECTIONS IS THERE A WAY TO GET TO [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE GARAGE SALE ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THR GREEN VALLEY RANCH ] ] ] ] ] WITH NO HEAVY [SL:OBSTRUCTION_AVOID TRAFFIC ] ]", "decoupled_normalized_seqlogical": "[IN:GET_DIRECTIONS [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE GARAGE SALE ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THR GREEN VALLEY RANCH ] ] ] ] ] [SL:OBSTRUCTION_AVOID TRAFFIC ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "Green Valley Ranch"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00000263.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_ARRIVAL Will I make it to [SL:DESTINATION [IN:GET_EVENT the [SL:DATE_TIME 7 pm ] [SL:CATEGORY_EVENT movie ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Amstar ] ] ] ] ] if I leave [SL:DATE_TIME_DEPARTURE now ] and take [SL:PATH Highway 21 ] ? ]", "parameters": {}, "sentence": "Will I make it to the 7 pm movie at Amstar if I leave now and take Highway 21?", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "WILL I MAKE IT TO THE SEVEN PM MOVIE AT AMSTAR IF I LEAVE NOW AND TAKE HIGHWAY TWENTY ONE", "normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL WILL I MAKE IT TO [SL:DESTINATION [IN:GET_EVENT THE [SL:DATE_TIME SEVEN PM ] [SL:CATEGORY_EVENT MOVIE ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP AMSTAR ] ] ] ] ] IF I LEAVE [SL:DATE_TIME_DEPARTURE NOW ] AND TAKE [SL:PATH HIGHWAY TWENTY ONE ] ]", "raw_data": {"file_id": "test_1/navigation_test/00000263.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "Will I make it to the 7 pm movie at Amstar if I leave now and take Highway 21?", "seqlogical": "[IN:GET_ESTIMATED_ARRIVAL Will I make it to [SL:DESTINATION [IN:GET_EVENT the [SL:DATE_TIME 7 pm ] [SL:CATEGORY_EVENT movie ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Amstar ] ] ] ] ] if I leave [SL:DATE_TIME_DEPARTURE now ] and take [SL:PATH Highway 21 ] ? ]", "normalized_utterance": "WILL I MAKE IT TO THE SEVEN PM MOVIE AT AMSTAR IF I LEAVE NOW AND TAKE HIGHWAY TWENTY ONE", "normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL WILL I MAKE IT TO [SL:DESTINATION [IN:GET_EVENT THE [SL:DATE_TIME SEVEN PM ] [SL:CATEGORY_EVENT MOVIE ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP AMSTAR ] ] ] ] ] IF I LEAVE [SL:DATE_TIME_DEPARTURE NOW ] AND TAKE [SL:PATH HIGHWAY TWENTY ONE ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL [SL:DESTINATION [IN:GET_EVENT [SL:DATE_TIME SEVEN PM ] [SL:CATEGORY_EVENT MOVIE ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP AMSTAR ] ] ] ] ] [SL:DATE_TIME_DEPARTURE NOW ] [SL:PATH HIGHWAY TWENTY ONE ] ]"}, "prediction": "", "function_calls": [{"name": "get_estimated_arrival", "arguments": {"source": "current location", "destination": "MStar", "method_travel": "driving", "path": "Highway 21", "date_time_departure": "now"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00000972.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_ARRIVAL if i leave [SL:DATE_TIME_DEPARTURE now ] can i make it to [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT my ] [SL:DATE_TIME 4 pm ] [SL:CATEGORY_EVENT meeting ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Harley Davidson headquarters ] ] ] ] ] ]", "parameters": {}, "sentence": "if i leave now can i make it to my 4pm meeting at Harley Davidson headquarters", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "IF I LEAVE NOW CAN I MAKE IT TO MY FOUR PM MEETING AT HARLEY DAVIDSON HEADQUARTERS", "normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL IF I LEAVE [SL:DATE_TIME_DEPARTURE NOW ] CAN I MAKE IT TO [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT MY ] [SL:DATE_TIME FOUR PM ] [SL:CATEGORY_EVENT MEETING ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP HARLEY DAVIDSON HEADQUARTERS ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00000972.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "if i leave now can i make it to my 4pm meeting at Harley Davidson headquarters", "seqlogical": "[IN:GET_ESTIMATED_ARRIVAL if i leave [SL:DATE_TIME_DEPARTURE now ] can i make it to [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT my ] [SL:DATE_TIME 4 pm ] [SL:CATEGORY_EVENT meeting ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP Harley Davidson headquarters ] ] ] ] ] ]", "normalized_utterance": "IF I LEAVE NOW CAN I MAKE IT TO MY FOUR PM MEETING AT HARLEY DAVIDSON HEADQUARTERS", "normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL IF I LEAVE [SL:DATE_TIME_DEPARTURE NOW ] CAN I MAKE IT TO [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT MY ] [SL:DATE_TIME FOUR PM ] [SL:CATEGORY_EVENT MEETING ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP HARLEY DAVIDSON HEADQUARTERS ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL [SL:DATE_TIME_DEPARTURE NOW ] [SL:DESTINATION [IN:GET_EVENT [SL:ORGANIZER_EVENT MY ] [SL:DATE_TIME FOUR PM ] [SL:CATEGORY_EVENT MEETING ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP HARLEY DAVIDSON HEADQUARTERS ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "Harley Davidson headquarters"}}, {"name": "get_estimated_arrival", "arguments": {"destination": "Harley Davidson headquarters"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00003431.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_DURATION How long will it take me to get to [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT Rob ] 's house in [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER Rye Brook ] ] ] ] ] if I leave [SL:DATE_TIME_DEPARTURE at 8 am ] ? ]", "parameters": {}, "sentence": "How long will it take me to get to Rob's house in Rye Brook if I leave at 8am?", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "HOW LONG WILL IT TAKE ME TO GET TO ROB 'S HOUSE IN RYE BROOK IF I LEAVE AT EIGHT AM", "normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION HOW LONG WILL IT TAKE ME TO GET TO [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT ROB ] 'S HOUSE IN [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER RYE BROOK ] ] ] ] ] IF I LEAVE [SL:DATE_TIME_DEPARTURE AT EIGHT AM ] ]", "raw_data": {"file_id": "test_1/navigation_test/00003431.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "How long will it take me to get to Rob's house in Rye Brook if I leave at 8am?", "seqlogical": "[IN:GET_ESTIMATED_DURATION How long will it take me to get to [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT Rob ] 's house in [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER Rye Brook ] ] ] ] ] if I leave [SL:DATE_TIME_DEPARTURE at 8 am ] ? ]", "normalized_utterance": "HOW LONG WILL IT TAKE ME TO GET TO ROB 'S HOUSE IN RYE BROOK IF I LEAVE AT EIGHT AM", "normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION HOW LONG WILL IT TAKE ME TO GET TO [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT ROB ] 'S HOUSE IN [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER RYE BROOK ] ] ] ] ] IF I LEAVE [SL:DATE_TIME_DEPARTURE AT EIGHT AM ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT ROB ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER RYE BROOK ] ] ] ] ] [SL:DATE_TIME_DEPARTURE AT EIGHT AM ] ]"}, "prediction": "", "function_calls": [{"name": "get_estimated_duration", "arguments": {"source": "current location", "destination": "Rob's house in Rye Brook", "date_time_departure": "8am"}}]}
{"filename": "stop_data/stop/test_1/navigation_test/00003054.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC How 's traffic [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the Essence Music Festival ] in [SL:LOCATION Los Angeles ] ] ] ] ] ? ]", "parameters": {}, "sentence": "How's traffic around the Essence Music Festival in Los Angeles?", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "HOW 'S TRAFFIC AROUND THE ESSENCE MUSIC FESTIVAL IN LOS ANGELES", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW 'S TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE ESSENCE MUSIC FESTIVAL ] IN [SL:LOCATION LOS ANGELES ] ] ] ] ] ]", "raw_data": {"file_id": "test_1/navigation_test/00003054.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "How's traffic around the Essence Music Festival in Los Angeles?", "seqlogical": "[IN:GET_INFO_TRAFFIC How 's traffic [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS around ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT the Essence Music Festival ] in [SL:LOCATION Los Angeles ] ] ] ] ] ? ]", "normalized_utterance": "HOW 'S TRAFFIC AROUND THE ESSENCE MUSIC FESTIVAL IN LOS ANGELES", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW 'S TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE ESSENCE MUSIC FESTIVAL ] IN [SL:LOCATION LOS ANGELES ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:SEARCH_RADIUS AROUND ] [SL:LOCATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE ESSENCE MUSIC FESTIVAL ] [SL:LOCATION LOS ANGELES ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "Essence Music Festival, Los Angeles"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00000863.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_DURATION If I leave [SL:SOURCE [IN:GET_LOCATION_HOME [SL:CONTACT my ] house ] ] [SL:DATE_TIME_DEPARTURE at 8 pm ] how long will it take me to get to [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT Stephanie ] 's house in [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER Dublin ] ] ] ] ] ? ]", "parameters": {}, "sentence": "If I leave my house at 8pm how long will it take me to get to Stephanie's house in Dublin?", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "IF I LEAVE MY HOUSE AT EIGHT PM HOW LONG WILL IT TAKE ME TO GET TO STEPHANIE 'S HOUSE IN DUBLIN", "normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION IF I LEAVE [SL:SOURCE [IN:GET_LOCATION_HOME [SL:CONTACT MY ] HOUSE ] ] [SL:DATE_TIME_DEPARTURE AT EIGHT PM ] HOW LONG WILL IT TAKE ME TO GET TO [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT STEPHANIE ] 'S HOUSE IN [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER DUBLIN ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00000863.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "If I leave my house at 8pm how long will it take me to get to Stephanie's house in Dublin?", "seqlogical": "[IN:GET_ESTIMATED_DURATION If I leave [SL:SOURCE [IN:GET_LOCATION_HOME [SL:CONTACT my ] house ] ] [SL:DATE_TIME_DEPARTURE at 8 pm ] how long will it take me to get to [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT Stephanie ] 's house in [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER Dublin ] ] ] ] ] ? ]", "normalized_utterance": "IF I LEAVE MY HOUSE AT EIGHT PM HOW LONG WILL IT TAKE ME TO GET TO STEPHANIE 'S HOUSE IN DUBLIN", "normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION IF I LEAVE [SL:SOURCE [IN:GET_LOCATION_HOME [SL:CONTACT MY ] HOUSE ] ] [SL:DATE_TIME_DEPARTURE AT EIGHT PM ] HOW LONG WILL IT TAKE ME TO GET TO [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT STEPHANIE ] 'S HOUSE IN [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER DUBLIN ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_DURATION [SL:SOURCE [IN:GET_LOCATION_HOME [SL:CONTACT MY ] ] ] [SL:DATE_TIME_DEPARTURE AT EIGHT PM ] [SL:DESTINATION [IN:GET_LOCATION_HOME [SL:CONTACT STEPHANIE ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER DUBLIN ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_location", "arguments": {"location_modifier": "my house"}}, {"name": "get_estimated_duration", "arguments": {"source": "MOCK_RESPONSE(get_location)", "destination": "Stephanie's house in Dublin", "date_time_departure": "today at 8pm"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00001309.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_DEPARTURE What time should i leave if i want to make it to [SL:DESTINATION [IN:GET_EVENT the [SL:DATE_TIME 7 pm ] [SL:NAME_EVENT R Kelly ] [SL:CATEGORY_EVENT concert ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the Blaisdell Center ] ] ] ] ] coming from [SL:SOURCE [IN:GET_LOCATION [SL:POINT_ON_MAP Punchbowl ] ] ] ]", "parameters": {}, "sentence": "What time should i leave if i want to make it to the 7pm R Kelly concert at the Blaisdell Center coming from Punchbowl", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT TIME SHOULD I LEAVE IF I WANT TO MAKE IT TO THE SEVEN PM R KELLY CONCERT AT THE BLAISDELL CENTER COMING FROM PUNCHBOWL", "normalized_seqlogical": "[IN:GET_ESTIMATED_DEPARTURE WHAT TIME SHOULD I LEAVE IF I WANT TO MAKE IT TO [SL:DESTINATION [IN:GET_EVENT THE [SL:DATE_TIME SEVEN PM ] [SL:NAME_EVENT R KELLY ] [SL:CATEGORY_EVENT CONCERT ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE BLAISDELL CENTER ] ] ] ] ] COMING FROM [SL:SOURCE [IN:GET_LOCATION [SL:POINT_ON_MAP PUNCHBOWL ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00001309.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "What time should i leave if i want to make it to the 7pm R Kelly concert at the Blaisdell Center coming from Punchbowl", "seqlogical": "[IN:GET_ESTIMATED_DEPARTURE What time should i leave if i want to make it to [SL:DESTINATION [IN:GET_EVENT the [SL:DATE_TIME 7 pm ] [SL:NAME_EVENT R Kelly ] [SL:CATEGORY_EVENT concert ] at [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP the Blaisdell Center ] ] ] ] ] coming from [SL:SOURCE [IN:GET_LOCATION [SL:POINT_ON_MAP Punchbowl ] ] ] ]", "normalized_utterance": "WHAT TIME SHOULD I LEAVE IF I WANT TO MAKE IT TO THE SEVEN PM R KELLY CONCERT AT THE BLAISDELL CENTER COMING FROM PUNCHBOWL", "normalized_seqlogical": "[IN:GET_ESTIMATED_DEPARTURE WHAT TIME SHOULD I LEAVE IF I WANT TO MAKE IT TO [SL:DESTINATION [IN:GET_EVENT THE [SL:DATE_TIME SEVEN PM ] [SL:NAME_EVENT R KELLY ] [SL:CATEGORY_EVENT CONCERT ] AT [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE BLAISDELL CENTER ] ] ] ] ] COMING FROM [SL:SOURCE [IN:GET_LOCATION [SL:POINT_ON_MAP PUNCHBOWL ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_DEPARTURE [SL:DESTINATION [IN:GET_EVENT [SL:DATE_TIME SEVEN PM ] [SL:NAME_EVENT R KELLY ] [SL:CATEGORY_EVENT CONCERT ] [SL:LOCATION [IN:GET_LOCATION [SL:POINT_ON_MAP THE BLAISDELL CENTER ] ] ] ] ] [SL:SOURCE [IN:GET_LOCATION [SL:POINT_ON_MAP PUNCHBOWL ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_estimated_departure", "arguments": {"source": "Punchbowl", "destination": "Blaisdell Center", "date_time_arrival": "today at 7pm"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00004258.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC Is there traffic [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION downtown Fernandina ] ] ] ] ] [SL:DATE_TIME today ] ]", "parameters": {}, "sentence": "Is there traffic near downtown Fernandina today", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "IS THERE TRAFFIC NEAR DOWNTOWN FERNANDINA TODAY", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC IS THERE TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION DOWNTOWN FERNANDINA ] ] ] ] ] [SL:DATE_TIME TODAY ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00004258.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "Is there traffic near downtown Fernandina today", "seqlogical": "[IN:GET_INFO_TRAFFIC Is there traffic [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS near ] [SL:LOCATION downtown Fernandina ] ] ] ] ] [SL:DATE_TIME today ] ]", "normalized_utterance": "IS THERE TRAFFIC NEAR DOWNTOWN FERNANDINA TODAY", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC IS THERE TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION DOWNTOWN FERNANDINA ] ] ] ] ] [SL:DATE_TIME TODAY ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS NEAR ] [SL:LOCATION DOWNTOWN FERNANDINA ] ] ] ] ] [SL:DATE_TIME TODAY ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "downtown Fernandina"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00000591.wav", "split": "test", "intent": "[IN:GET_INFO_TRAFFIC How is traffic [SL:DATE_TIME today ] on [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION I - 5 ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS by ] [SL:LOCATION Bellevue ] ] ] ] ] ]", "parameters": {}, "sentence": "How is traffic today on I-5 by Bellevue", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "HOW IS TRAFFIC TODAY ON I FIVE BY BELLEVUE", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW IS TRAFFIC [SL:DATE_TIME TODAY ] ON [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION I FIVE ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS BY ] [SL:LOCATION BELLEVUE ] ] ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00000591.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "How is traffic today on I-5 by Bellevue", "seqlogical": "[IN:GET_INFO_TRAFFIC How is traffic [SL:DATE_TIME today ] on [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION I - 5 ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS by ] [SL:LOCATION Bellevue ] ] ] ] ] ]", "normalized_utterance": "HOW IS TRAFFIC TODAY ON I FIVE BY BELLEVUE", "normalized_seqlogical": "[IN:GET_INFO_TRAFFIC HOW IS TRAFFIC [SL:DATE_TIME TODAY ] ON [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION I FIVE ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS BY ] [SL:LOCATION BELLEVUE ] ] ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_INFO_TRAFFIC [SL:DATE_TIME TODAY ] [SL:LOCATION [IN:GET_LOCATION [SL:LOCATION I FIVE ] [SL:LOCATION_MODIFIER [IN:GET_LOCATION [SL:SEARCH_RADIUS BY ] [SL:LOCATION BELLEVUE ] ] ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "Bellevue", "path": "I-5"}}]}
{"filename": "stop_data/stop/test_0/navigation_test/00000917.wav", "split": "test", "intent": "[IN:GET_ESTIMATED_ARRIVAL Will the construction on I285 make me late for [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT the art show ] at [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the park ] ] ] [SL:DATE_TIME tonight ] ] ] ? ]", "parameters": {}, "sentence": "Will the construction on I285 make me late for the art show at the park tonight?", "domain": "navigation", "gender": "Female", "native": "Yes", "normalized_utterance": "WILL THE CONSTRUCTION ON ITWO HUNDRED EIGHTY FIVE MAKE ME LATE FOR THE ART SHOW AT THE PARK TONIGHT", "normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL WILL THE CONSTRUCTION ON ITWO HUNDRED EIGHTY FIVE MAKE ME LATE FOR [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE ART SHOW ] AT [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE PARK ] ] ] [SL:DATE_TIME TONIGHT ] ] ] ]", "raw_data": {"file_id": "test_0/navigation_test_0/00000917.wav", "domain": "navigation", "gender": "Female", "native": "Yes", "utterance": "Will the construction on I285 make me late for the art show at the park tonight?", "seqlogical": "[IN:GET_ESTIMATED_ARRIVAL Will the construction on I285 make me late for [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT the art show ] at [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION the park ] ] ] [SL:DATE_TIME tonight ] ] ] ? ]", "normalized_utterance": "WILL THE CONSTRUCTION ON ITWO HUNDRED EIGHTY FIVE MAKE ME LATE FOR THE ART SHOW AT THE PARK TONIGHT", "normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL WILL THE CONSTRUCTION ON ITWO HUNDRED EIGHTY FIVE MAKE ME LATE FOR [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE ART SHOW ] AT [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE PARK ] ] ] [SL:DATE_TIME TONIGHT ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_ESTIMATED_ARRIVAL [SL:DESTINATION [IN:GET_EVENT [SL:CATEGORY_EVENT THE ART SHOW ] [SL:LOCATION [IN:GET_LOCATION [SL:CATEGORY_LOCATION THE PARK ] ] ] [SL:DATE_TIME TONIGHT ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_info_traffic", "arguments": {"location": "I-285", "date_time": "tonight"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00003957.wav", "split": "test", "intent": "[IN:PAUSE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME Two minute ] ] ] [SL:METHOD_TIMER timer ] , can you pause ]", "parameters": {}, "sentence": "Two minute timer, can you pause", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "TWO MINUTE TIMER CAN YOU PAUSE", "normalized_seqlogical": "[IN:PAUSE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWO MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] CAN YOU PAUSE ]", "raw_data": {"file_id": "test_1/timer_test/00003957.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Two minute timer, can you pause", "seqlogical": "[IN:PAUSE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME Two minute ] ] ] [SL:METHOD_TIMER timer ] , can you pause ]", "normalized_utterance": "TWO MINUTE TIMER CAN YOU PAUSE", "normalized_seqlogical": "[IN:PAUSE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWO MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] CAN YOU PAUSE ]", "decoupled_normalized_seqlogical": "[IN:PAUSE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWO MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "pause_timer", "arguments": {"method_timer": "pause"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00004241.wav", "split": "test", "intent": "[IN:UPDATE_TIMER The [SL:METHOD_TIMER timer ] needs to be changed [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from two minutes ] ] ] [SL:DATE_TIME to three ] ]", "parameters": {}, "sentence": "The timer needs to be changed from two minutes to three", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "THE TIMER NEEDS TO BE CHANGED FROM TWO MINUTES TO THREE", "normalized_seqlogical": "[IN:UPDATE_TIMER THE [SL:METHOD_TIMER TIMER ] NEEDS TO BE CHANGED [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM TWO MINUTES ] ] ] [SL:DATE_TIME TO THREE ] ]", "raw_data": {"file_id": "test_1/timer_test/00004241.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "The timer needs to be changed from two minutes to three", "seqlogical": "[IN:UPDATE_TIMER The [SL:METHOD_TIMER timer ] needs to be changed [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from two minutes ] ] ] [SL:DATE_TIME to three ] ]", "normalized_utterance": "THE TIMER NEEDS TO BE CHANGED FROM TWO MINUTES TO THREE", "normalized_seqlogical": "[IN:UPDATE_TIMER THE [SL:METHOD_TIMER TIMER ] NEEDS TO BE CHANGED [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM TWO MINUTES ] ] ] [SL:DATE_TIME TO THREE ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM TWO MINUTES ] ] ] [SL:DATE_TIME TO THREE ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"timer_name": "timer", "amount": 3, "method_timer": "minutes"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00002238.wav", "split": "test", "intent": "[IN:GET_TIMER Let me know when [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME one hour ] ] ] has elapsed ]", "parameters": {}, "sentence": "Let me know when one hour has elapsed", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "LET ME KNOW WHEN ONE HOUR HAS ELAPSED", "normalized_seqlogical": "[IN:GET_TIMER LET ME KNOW WHEN [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME ONE HOUR ] ] ] HAS ELAPSED ]", "raw_data": {"file_id": "test_1/timer_test/00002238.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Let me know when one hour has elapsed", "seqlogical": "[IN:GET_TIMER Let me know when [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME one hour ] ] ] has elapsed ]", "normalized_utterance": "LET ME KNOW WHEN ONE HOUR HAS ELAPSED", "normalized_seqlogical": "[IN:GET_TIMER LET ME KNOW WHEN [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME ONE HOUR ] ] ] HAS ELAPSED ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME ONE HOUR ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_timer", "arguments": {"method_timer": "timer", "amount": 1, "date_time": "1 hour"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00003311.wav", "split": "test", "intent": "[IN:UPDATE_TIMER Change the [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from 30 seconds ] ] ] [SL:DATE_TIME to two minutes ] ]", "parameters": {}, "sentence": "Change the timer from 30 seconds to two minutes", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "CHANGE THE TIMER FROM THIRTY SECONDS TO TWO MINUTES", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE THE [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM THIRTY SECONDS ] ] ] [SL:DATE_TIME TO TWO MINUTES ] ]", "raw_data": {"file_id": "test_1/timer_test/00003311.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Change the timer from 30 seconds to two minutes", "seqlogical": "[IN:UPDATE_TIMER Change the [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from 30 seconds ] ] ] [SL:DATE_TIME to two minutes ] ]", "normalized_utterance": "CHANGE THE TIMER FROM THIRTY SECONDS TO TWO MINUTES", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE THE [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM THIRTY SECONDS ] ] ] [SL:DATE_TIME TO TWO MINUTES ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM THIRTY SECONDS ] ] ] [SL:DATE_TIME TO TWO MINUTES ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"timer_name": "timer", "amount": 2, "method_timer": "minutes"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00004175.wav", "split": "test", "intent": "[IN:UPDATE_TIMER I have a [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME half hour ] ] ] [SL:METHOD_TIMER timer ] , please change it ]", "parameters": {}, "sentence": "I have a half hour timer, please change it", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "I HAVE A HALF HOUR TIMER PLEASE CHANGE IT", "normalized_seqlogical": "[IN:UPDATE_TIMER I HAVE A [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME HALF HOUR ] ] ] [SL:METHOD_TIMER TIMER ] PLEASE CHANGE IT ]", "raw_data": {"file_id": "test_0/timer_test_0/00004175.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "I have a half hour timer, please change it", "seqlogical": "[IN:UPDATE_TIMER I have a [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME half hour ] ] ] [SL:METHOD_TIMER timer ] , please change it ]", "normalized_utterance": "I HAVE A HALF HOUR TIMER PLEASE CHANGE IT", "normalized_seqlogical": "[IN:UPDATE_TIMER I HAVE A [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME HALF HOUR ] ] ] [SL:METHOD_TIMER TIMER ] PLEASE CHANGE IT ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME HALF HOUR ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"method_timer": "timer", "amount": 30}}]}
{"filename": "stop_data/stop/test_0/timer_test/00003741.wav", "split": "test", "intent": "[IN:DELETE_TIMER I have a [SL:METHOD_TIMER timer ] named [SL:TIMER_NAME generator ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for eight hours ] ] ] , can you cancel that ? ]", "parameters": {}, "sentence": "I have a timer named generator for eight hours, can you cancel that?", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "I HAVE A TIMER NAMED GENERATOR FOR EIGHT HOURS CAN YOU CANCEL THAT", "normalized_seqlogical": "[IN:DELETE_TIMER I HAVE A [SL:METHOD_TIMER TIMER ] NAMED [SL:TIMER_NAME GENERATOR ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR EIGHT HOURS ] ] ] CAN YOU CANCEL THAT ]", "raw_data": {"file_id": "test_0/timer_test_0/00003741.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "I have a timer named generator for eight hours, can you cancel that?", "seqlogical": "[IN:DELETE_TIMER I have a [SL:METHOD_TIMER timer ] named [SL:TIMER_NAME generator ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for eight hours ] ] ] , can you cancel that ? ]", "normalized_utterance": "I HAVE A TIMER NAMED GENERATOR FOR EIGHT HOURS CAN YOU CANCEL THAT", "normalized_seqlogical": "[IN:DELETE_TIMER I HAVE A [SL:METHOD_TIMER TIMER ] NAMED [SL:TIMER_NAME GENERATOR ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR EIGHT HOURS ] ] ] CAN YOU CANCEL THAT ]", "decoupled_normalized_seqlogical": "[IN:DELETE_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME GENERATOR ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR EIGHT HOURS ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_timer", "arguments": {"timer_name": "generator", "method_timer": "cancel"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00003949.wav", "split": "test", "intent": "[IN:PAUSE_TIMER Pause the [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME two minute ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "Pause the two minute timer", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "PAUSE THE TWO MINUTE TIMER", "normalized_seqlogical": "[IN:PAUSE_TIMER PAUSE THE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWO MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00003949.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Pause the two minute timer", "seqlogical": "[IN:PAUSE_TIMER Pause the [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME two minute ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "PAUSE THE TWO MINUTE TIMER", "normalized_seqlogical": "[IN:PAUSE_TIMER PAUSE THE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWO MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:PAUSE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWO MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "pause_timer", "arguments": {"method_timer": "two minute timer"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00001479.wav", "split": "test", "intent": "[IN:DELETE_TIMER Delete [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 2 hours from now ] ] ] . ]", "parameters": {}, "sentence": "Delete timer 2 hours from now.", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "DELETE TIMER TWO HOURS FROM NOW", "normalized_seqlogical": "[IN:DELETE_TIMER DELETE [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWO HOURS FROM NOW ] ] ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00001479.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Delete timer 2 hours from now.", "seqlogical": "[IN:DELETE_TIMER Delete [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 2 hours from now ] ] ] . ]", "normalized_utterance": "DELETE TIMER TWO HOURS FROM NOW", "normalized_seqlogical": "[IN:DELETE_TIMER DELETE [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWO HOURS FROM NOW ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWO HOURS FROM NOW ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_timer", "arguments": {"method_timer": "timer", "date_time": "2 hours from now"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00003720.wav", "split": "test", "intent": "[IN:DELETE_TIMER Cancel my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME hour ] ] ] long [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "Cancel my hour long timer", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "CANCEL MY HOUR LONG TIMER", "normalized_seqlogical": "[IN:DELETE_TIMER CANCEL MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME HOUR ] ] ] LONG [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00003720.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Cancel my hour long timer", "seqlogical": "[IN:DELETE_TIMER Cancel my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME hour ] ] ] long [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "CANCEL MY HOUR LONG TIMER", "normalized_seqlogical": "[IN:DELETE_TIMER CANCEL MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME HOUR ] ] ] LONG [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME HOUR ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "delete_timer", "arguments": {"method_timer": "hour-long"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00004173.wav", "split": "test", "intent": "[IN:UPDATE_TIMER Change the [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME half hour ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "Change the half hour timer", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "CHANGE THE HALF HOUR TIMER", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE THE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME HALF HOUR ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_1/timer_test/00004173.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Change the half hour timer", "seqlogical": "[IN:UPDATE_TIMER Change the [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME half hour ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "CHANGE THE HALF HOUR TIMER", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE THE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME HALF HOUR ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME HALF HOUR ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"timer_name": "half hour timer", "method_timer": "update"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00001035.wav", "split": "test", "intent": "[IN:RESUME_TIMER Resume the [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME twenty minute ] ] ] [SL:METHOD_TIMER timer ] . ]", "parameters": {}, "sentence": "Resume the twenty minute timer.", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "RESUME THE TWENTY MINUTE TIMER", "normalized_seqlogical": "[IN:RESUME_TIMER RESUME THE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWENTY MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00001035.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Resume the twenty minute timer.", "seqlogical": "[IN:RESUME_TIMER Resume the [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME twenty minute ] ] ] [SL:METHOD_TIMER timer ] . ]", "normalized_utterance": "RESUME THE TWENTY MINUTE TIMER", "normalized_seqlogical": "[IN:RESUME_TIMER RESUME THE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWENTY MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:RESUME_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWENTY MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "resume_timer", "arguments": {"method_timer": "twenty minute timer"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00000950.wav", "split": "test", "intent": "[IN:RESTART_TIMER restart [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for 20 seconds ] ] ] ]", "parameters": {}, "sentence": "restart timer for 20 seconds", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "RESTART TIMER FOR TWENTY SECONDS", "normalized_seqlogical": "[IN:RESTART_TIMER RESTART [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR TWENTY SECONDS ] ] ] ]", "raw_data": {"file_id": "test_1/timer_test/00000950.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "restart timer for 20 seconds", "seqlogical": "[IN:RESTART_TIMER restart [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for 20 seconds ] ] ] ]", "normalized_utterance": "RESTART TIMER FOR TWENTY SECONDS", "normalized_seqlogical": "[IN:RESTART_TIMER RESTART [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR TWENTY SECONDS ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:RESTART_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR TWENTY SECONDS ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "restart_timer", "arguments": {"method_timer": "restart", "amount": 20}}]}
{"filename": "stop_data/stop/test_0/timer_test/00000292.wav", "split": "test", "intent": "[IN:RESTART_TIMER RESTART [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR 10 MINUTES ] ] ] ]", "parameters": {}, "sentence": "RESTART TIMER FOR 10 MINUTES", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "RESTART TIMER FOR TEN MINUTES", "normalized_seqlogical": "[IN:RESTART_TIMER RESTART [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR TEN MINUTES ] ] ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00000292.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "RESTART TIMER FOR 10 MINUTES", "seqlogical": "[IN:RESTART_TIMER RESTART [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR 10 MINUTES ] ] ] ]", "normalized_utterance": "RESTART TIMER FOR TEN MINUTES", "normalized_seqlogical": "[IN:RESTART_TIMER RESTART [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR TEN MINUTES ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:RESTART_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR TEN MINUTES ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "restart_timer", "arguments": {"method_timer": "timer", "amount": 10}}]}
{"filename": "stop_data/stop/test_0/timer_test/00004242.wav", "split": "test", "intent": "[IN:UPDATE_TIMER I need the [SL:METHOD_TIMER timer ] changed [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from two minutes ] ] ] [SL:DATE_TIME to three ] ]", "parameters": {}, "sentence": "I need the timer changed from two minutes to three", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "I NEED THE TIMER CHANGED FROM TWO MINUTES TO THREE", "normalized_seqlogical": "[IN:UPDATE_TIMER I NEED THE [SL:METHOD_TIMER TIMER ] CHANGED [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM TWO MINUTES ] ] ] [SL:DATE_TIME TO THREE ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00004242.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "I need the timer changed from two minutes to three", "seqlogical": "[IN:UPDATE_TIMER I need the [SL:METHOD_TIMER timer ] changed [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from two minutes ] ] ] [SL:DATE_TIME to three ] ]", "normalized_utterance": "I NEED THE TIMER CHANGED FROM TWO MINUTES TO THREE", "normalized_seqlogical": "[IN:UPDATE_TIMER I NEED THE [SL:METHOD_TIMER TIMER ] CHANGED [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM TWO MINUTES ] ] ] [SL:DATE_TIME TO THREE ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM TWO MINUTES ] ] ] [SL:DATE_TIME TO THREE ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"timer_name": "timer", "amount": 3, "method_timer": "minutes"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00000034.wav", "split": "test", "intent": "[IN:UPDATE_TIMER Change [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from 45 minutes ] ] ] [SL:DATE_TIME to 35 minutes ] ]", "parameters": {}, "sentence": "Change timer from 45 minutes to 35 minutes", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "CHANGE TIMER FROM FORTY FIVE MINUTES TO THIRTY FIVE MINUTES", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM FORTY FIVE MINUTES ] ] ] [SL:DATE_TIME TO THIRTY FIVE MINUTES ] ]", "raw_data": {"file_id": "test_1/timer_test/00000034.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Change timer from 45 minutes to 35 minutes", "seqlogical": "[IN:UPDATE_TIMER Change [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from 45 minutes ] ] ] [SL:DATE_TIME to 35 minutes ] ]", "normalized_utterance": "CHANGE TIMER FROM FORTY FIVE MINUTES TO THIRTY FIVE MINUTES", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM FORTY FIVE MINUTES ] ] ] [SL:DATE_TIME TO THIRTY FIVE MINUTES ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM FORTY FIVE MINUTES ] ] ] [SL:DATE_TIME TO THIRTY FIVE MINUTES ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"method_timer": "timer", "amount": 35}}]}
{"filename": "stop_data/stop/test_0/timer_test/00001601.wav", "split": "test", "intent": "[IN:GET_TIMER Do I still have [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME more than 5 minutes ] ] ] ? ]", "parameters": {}, "sentence": "Do I still have more than 5 minutes?", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "DO I STILL HAVE MORE THAN FIVE MINUTES", "normalized_seqlogical": "[IN:GET_TIMER DO I STILL HAVE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME MORE THAN FIVE MINUTES ] ] ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00001601.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Do I still have more than 5 minutes?", "seqlogical": "[IN:GET_TIMER Do I still have [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME more than 5 minutes ] ] ] ? ]", "normalized_utterance": "DO I STILL HAVE MORE THAN FIVE MINUTES", "normalized_seqlogical": "[IN:GET_TIMER DO I STILL HAVE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME MORE THAN FIVE MINUTES ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME MORE THAN FIVE MINUTES ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "remaining time"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00003743.wav", "split": "test", "intent": "[IN:DELETE_TIMER I have a [SL:TIMER_NAME generator ] [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for eight hours ] ] ] , can you cancel that for me ? ]", "parameters": {}, "sentence": "I have a generator timer for eight hours, can you cancel that for me?", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "I HAVE A GENERATOR TIMER FOR EIGHT HOURS CAN YOU CANCEL THAT FOR ME", "normalized_seqlogical": "[IN:DELETE_TIMER I HAVE A [SL:TIMER_NAME GENERATOR ] [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR EIGHT HOURS ] ] ] CAN YOU CANCEL THAT FOR ME ]", "raw_data": {"file_id": "test_0/timer_test_0/00003743.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "I have a generator timer for eight hours, can you cancel that for me?", "seqlogical": "[IN:DELETE_TIMER I have a [SL:TIMER_NAME generator ] [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for eight hours ] ] ] , can you cancel that for me ? ]", "normalized_utterance": "I HAVE A GENERATOR TIMER FOR EIGHT HOURS CAN YOU CANCEL THAT FOR ME", "normalized_seqlogical": "[IN:DELETE_TIMER I HAVE A [SL:TIMER_NAME GENERATOR ] [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR EIGHT HOURS ] ] ] CAN YOU CANCEL THAT FOR ME ]", "decoupled_normalized_seqlogical": "[IN:DELETE_TIMER [SL:TIMER_NAME GENERATOR ] [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR EIGHT HOURS ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_timer", "arguments": {"timer_name": "generator", "method_timer": "cancel"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00004246.wav", "split": "test", "intent": "[IN:UPDATE_TIMER I need the [SL:METHOD_TIMER timer ] changed [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from a 10 second ] ] ] [SL:DATE_TIME to a 15 minute ] one ]", "parameters": {}, "sentence": "I need the timer changed from a 10 second to a 15 minute one", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "I NEED THE TIMER CHANGED FROM A TEN SECOND TO A FIFTEEN MINUTE ONE", "normalized_seqlogical": "[IN:UPDATE_TIMER I NEED THE [SL:METHOD_TIMER TIMER ] CHANGED [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM A TEN SECOND ] ] ] [SL:DATE_TIME TO A FIFTEEN MINUTE ] ONE ]", "raw_data": {"file_id": "test_1/timer_test/00004246.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "I need the timer changed from a 10 second to a 15 minute one", "seqlogical": "[IN:UPDATE_TIMER I need the [SL:METHOD_TIMER timer ] changed [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from a 10 second ] ] ] [SL:DATE_TIME to a 15 minute ] one ]", "normalized_utterance": "I NEED THE TIMER CHANGED FROM A TEN SECOND TO A FIFTEEN MINUTE ONE", "normalized_seqlogical": "[IN:UPDATE_TIMER I NEED THE [SL:METHOD_TIMER TIMER ] CHANGED [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM A TEN SECOND ] ] ] [SL:DATE_TIME TO A FIFTEEN MINUTE ] ONE ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM A TEN SECOND ] ] ] [SL:DATE_TIME TO A FIFTEEN MINUTE ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"timer_name": "default", "amount": 15, "method_timer": "minute"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00003899.wav", "split": "test", "intent": "[IN:PAUSE_TIMER I want to pause the [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 30 second ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "I want to pause the 30 second timer", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "I WANT TO PAUSE THE THIRTY SECOND TIMER", "normalized_seqlogical": "[IN:PAUSE_TIMER I WANT TO PAUSE THE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THIRTY SECOND ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00003899.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "I want to pause the 30 second timer", "seqlogical": "[IN:PAUSE_TIMER I want to pause the [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 30 second ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "I WANT TO PAUSE THE THIRTY SECOND TIMER", "normalized_seqlogical": "[IN:PAUSE_TIMER I WANT TO PAUSE THE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THIRTY SECOND ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:PAUSE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THIRTY SECOND ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "pause_timer", "arguments": {"method_timer": "30-second timer"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00002621.wav", "split": "test", "intent": "[IN:GET_TIMER tell me when I have [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 15 minutes ] ] ] left on my [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "tell me when I have 15 minutes left on my timer", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "TELL ME WHEN I HAVE FIFTEEN MINUTES LEFT ON MY TIMER", "normalized_seqlogical": "[IN:GET_TIMER TELL ME WHEN I HAVE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FIFTEEN MINUTES ] ] ] LEFT ON MY [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00002621.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "tell me when I have 15 minutes left on my timer", "seqlogical": "[IN:GET_TIMER tell me when I have [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 15 minutes ] ] ] left on my [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "TELL ME WHEN I HAVE FIFTEEN MINUTES LEFT ON MY TIMER", "normalized_seqlogical": "[IN:GET_TIMER TELL ME WHEN I HAVE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FIFTEEN MINUTES ] ] ] LEFT ON MY [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FIFTEEN MINUTES ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "timer"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00000662.wav", "split": "test", "intent": "[IN:RESTART_TIMER reset [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for 30 minutes ] ] ] ]", "parameters": {}, "sentence": "reset timer for 30 minutes", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "RESET TIMER FOR THIRTY MINUTES", "normalized_seqlogical": "[IN:RESTART_TIMER RESET [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR THIRTY MINUTES ] ] ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00000662.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "reset timer for 30 minutes", "seqlogical": "[IN:RESTART_TIMER reset [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for 30 minutes ] ] ] ]", "normalized_utterance": "RESET TIMER FOR THIRTY MINUTES", "normalized_seqlogical": "[IN:RESTART_TIMER RESET [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR THIRTY MINUTES ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:RESTART_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR THIRTY MINUTES ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "restart_timer", "arguments": {"method_timer": "timer", "amount": 30}}]}
{"filename": "stop_data/stop/test_1/timer_test/00004242.wav", "split": "test", "intent": "[IN:UPDATE_TIMER I need the [SL:METHOD_TIMER timer ] changed [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from two minutes ] ] ] [SL:DATE_TIME to three ] ]", "parameters": {}, "sentence": "I need the timer changed from two minutes to three", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "I NEED THE TIMER CHANGED FROM TWO MINUTES TO THREE", "normalized_seqlogical": "[IN:UPDATE_TIMER I NEED THE [SL:METHOD_TIMER TIMER ] CHANGED [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM TWO MINUTES ] ] ] [SL:DATE_TIME TO THREE ] ]", "raw_data": {"file_id": "test_1/timer_test/00004242.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "I need the timer changed from two minutes to three", "seqlogical": "[IN:UPDATE_TIMER I need the [SL:METHOD_TIMER timer ] changed [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from two minutes ] ] ] [SL:DATE_TIME to three ] ]", "normalized_utterance": "I NEED THE TIMER CHANGED FROM TWO MINUTES TO THREE", "normalized_seqlogical": "[IN:UPDATE_TIMER I NEED THE [SL:METHOD_TIMER TIMER ] CHANGED [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM TWO MINUTES ] ] ] [SL:DATE_TIME TO THREE ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM TWO MINUTES ] ] ] [SL:DATE_TIME TO THREE ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"timer_name": "timer", "amount": 3, "method_timer": "minutes"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00004244.wav", "split": "test", "intent": "[IN:UPDATE_TIMER Please change my [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from 10 second ] ] ] [SL:DATE_TIME to 15 minutes ] ]", "parameters": {}, "sentence": "Please change my timer from 10 second to 15 minutes", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "PLEASE CHANGE MY TIMER FROM TEN SECOND TO FIFTEEN MINUTES", "normalized_seqlogical": "[IN:UPDATE_TIMER PLEASE CHANGE MY [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM TEN SECOND ] ] ] [SL:DATE_TIME TO FIFTEEN MINUTES ] ]", "raw_data": {"file_id": "test_1/timer_test/00004244.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Please change my timer from 10 second to 15 minutes", "seqlogical": "[IN:UPDATE_TIMER Please change my [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from 10 second ] ] ] [SL:DATE_TIME to 15 minutes ] ]", "normalized_utterance": "PLEASE CHANGE MY TIMER FROM TEN SECOND TO FIFTEEN MINUTES", "normalized_seqlogical": "[IN:UPDATE_TIMER PLEASE CHANGE MY [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM TEN SECOND ] ] ] [SL:DATE_TIME TO FIFTEEN MINUTES ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM TEN SECOND ] ] ] [SL:DATE_TIME TO FIFTEEN MINUTES ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"method_timer": "timer", "amount": 15, "timer_name": "timer"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00002004.wav", "split": "test", "intent": "[IN:RESTART_TIMER restart [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 20 minute ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "restart 20 minute timer", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "RESTART TWENTY MINUTE TIMER", "normalized_seqlogical": "[IN:RESTART_TIMER RESTART [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWENTY MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_1/timer_test/00002004.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "restart 20 minute timer", "seqlogical": "[IN:RESTART_TIMER restart [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 20 minute ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "RESTART TWENTY MINUTE TIMER", "normalized_seqlogical": "[IN:RESTART_TIMER RESTART [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWENTY MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:RESTART_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWENTY MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "create_timer", "arguments": {"method_timer": "twenty minute timer"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00000024.wav", "split": "test", "intent": "[IN:GET_TIMER What is the [SL:METHOD_TIMER timer ] I have set [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for tomorrow ] ] ] ]", "parameters": {}, "sentence": "What is the timer I have set for tomorrow", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "WHAT IS THE TIMER I HAVE SET FOR TOMORROW", "normalized_seqlogical": "[IN:GET_TIMER WHAT IS THE [SL:METHOD_TIMER TIMER ] I HAVE SET [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW ] ] ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00000024.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "What is the timer I have set for tomorrow", "seqlogical": "[IN:GET_TIMER What is the [SL:METHOD_TIMER timer ] I have set [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for tomorrow ] ] ] ]", "normalized_utterance": "WHAT IS THE TIMER I HAVE SET FOR TOMORROW", "normalized_seqlogical": "[IN:GET_TIMER WHAT IS THE [SL:METHOD_TIMER TIMER ] I HAVE SET [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR TOMORROW ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "timer"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00001354.wav", "split": "test", "intent": "[IN:GET_TIMER How much time is left on my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 2 hour ] ] ] [SL:METHOD_TIMER timer ] ? ]", "parameters": {}, "sentence": "How much time is left on my 2 hour timer?", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "HOW MUCH TIME IS LEFT ON MY TWO HOUR TIMER", "normalized_seqlogical": "[IN:GET_TIMER HOW MUCH TIME IS LEFT ON MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWO HOUR ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00001354.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "How much time is left on my 2 hour timer?", "seqlogical": "[IN:GET_TIMER How much time is left on my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 2 hour ] ] ] [SL:METHOD_TIMER timer ] ? ]", "normalized_utterance": "HOW MUCH TIME IS LEFT ON MY TWO HOUR TIMER", "normalized_seqlogical": "[IN:GET_TIMER HOW MUCH TIME IS LEFT ON MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWO HOUR ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWO HOUR ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "two hour timer"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00001221.wav", "split": "test", "intent": "[IN:GET_TIMER How may [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME minutes ] ] ] left on the [SL:METHOD_TIMER time ] ]", "parameters": {}, "sentence": "How may minutes left on the time", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "HOW MAY MINUTES LEFT ON THE TIME", "normalized_seqlogical": "[IN:GET_TIMER HOW MAY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME MINUTES ] ] ] LEFT ON THE [SL:METHOD_TIMER TIME ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00001221.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "How may minutes left on the time", "seqlogical": "[IN:GET_TIMER How may [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME minutes ] ] ] left on the [SL:METHOD_TIMER time ] ]", "normalized_utterance": "HOW MAY MINUTES LEFT ON THE TIME", "normalized_seqlogical": "[IN:GET_TIMER HOW MAY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME MINUTES ] ] ] LEFT ON THE [SL:METHOD_TIMER TIME ] ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME MINUTES ] ] ] [SL:METHOD_TIMER TIME ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "timer"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00002158.wav", "split": "test", "intent": "[IN:GET_TIMER Alert me when I have [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 10 seconds ] ] ] remaining on the [SL:METHOD_TIMER timer ] . ]", "parameters": {}, "sentence": "Alert me when I have 10 seconds remaining on the timer.", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "ALERT ME WHEN I HAVE TEN SECONDS REMAINING ON THE TIMER", "normalized_seqlogical": "[IN:GET_TIMER ALERT ME WHEN I HAVE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TEN SECONDS ] ] ] REMAINING ON THE [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_1/timer_test/00002158.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Alert me when I have 10 seconds remaining on the timer.", "seqlogical": "[IN:GET_TIMER Alert me when I have [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 10 seconds ] ] ] remaining on the [SL:METHOD_TIMER timer ] . ]", "normalized_utterance": "ALERT ME WHEN I HAVE TEN SECONDS REMAINING ON THE TIMER", "normalized_seqlogical": "[IN:GET_TIMER ALERT ME WHEN I HAVE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TEN SECONDS ] ] ] REMAINING ON THE [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TEN SECONDS ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "unsupported_timer", "arguments": {"method_timer": "timer"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00003590.wav", "split": "test", "intent": "[IN:UPDATE_TIMER Change my [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from 30 seconds ] ] ] [SL:DATE_TIME to two minutes ] ]", "parameters": {}, "sentence": "Change my timer from 30 seconds to two minutes", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "CHANGE MY TIMER FROM THIRTY SECONDS TO TWO MINUTES", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE MY [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM THIRTY SECONDS ] ] ] [SL:DATE_TIME TO TWO MINUTES ] ]", "raw_data": {"file_id": "test_1/timer_test/00003590.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Change my timer from 30 seconds to two minutes", "seqlogical": "[IN:UPDATE_TIMER Change my [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from 30 seconds ] ] ] [SL:DATE_TIME to two minutes ] ]", "normalized_utterance": "CHANGE MY TIMER FROM THIRTY SECONDS TO TWO MINUTES", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE MY [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM THIRTY SECONDS ] ] ] [SL:DATE_TIME TO TWO MINUTES ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM THIRTY SECONDS ] ] ] [SL:DATE_TIME TO TWO MINUTES ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"amount": 2, "method_timer": "minutes"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00004243.wav", "split": "test", "intent": "[IN:UPDATE_TIMER Change the [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from 10 second ] ] ] [SL:DATE_TIME to a 15 minute ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "Change the timer from 10 second to a 15 minute timer", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "CHANGE THE TIMER FROM TEN SECOND TO A FIFTEEN MINUTE TIMER", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE THE [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM TEN SECOND ] ] ] [SL:DATE_TIME TO A FIFTEEN MINUTE ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_1/timer_test/00004243.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Change the timer from 10 second to a 15 minute timer", "seqlogical": "[IN:UPDATE_TIMER Change the [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from 10 second ] ] ] [SL:DATE_TIME to a 15 minute ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "CHANGE THE TIMER FROM TEN SECOND TO A FIFTEEN MINUTE TIMER", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE THE [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM TEN SECOND ] ] ] [SL:DATE_TIME TO A FIFTEEN MINUTE ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM TEN SECOND ] ] ] [SL:DATE_TIME TO A FIFTEEN MINUTE ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"timer_name": "ten seconds", "amount": 15, "method_timer": "minute"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00004245.wav", "split": "test", "intent": "[IN:UPDATE_TIMER The [SL:METHOD_TIMER timer ] needs to be changed [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from 10 second ] ] ] [SL:DATE_TIME to a 15 minute ] one ]", "parameters": {}, "sentence": "The timer needs to be changed from 10 second to a 15 minute one", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "THE TIMER NEEDS TO BE CHANGED FROM TEN SECOND TO A FIFTEEN MINUTE ONE", "normalized_seqlogical": "[IN:UPDATE_TIMER THE [SL:METHOD_TIMER TIMER ] NEEDS TO BE CHANGED [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM TEN SECOND ] ] ] [SL:DATE_TIME TO A FIFTEEN MINUTE ] ONE ]", "raw_data": {"file_id": "test_1/timer_test/00004245.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "The timer needs to be changed from 10 second to a 15 minute one", "seqlogical": "[IN:UPDATE_TIMER The [SL:METHOD_TIMER timer ] needs to be changed [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from 10 second ] ] ] [SL:DATE_TIME to a 15 minute ] one ]", "normalized_utterance": "THE TIMER NEEDS TO BE CHANGED FROM TEN SECOND TO A FIFTEEN MINUTE ONE", "normalized_seqlogical": "[IN:UPDATE_TIMER THE [SL:METHOD_TIMER TIMER ] NEEDS TO BE CHANGED [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM TEN SECOND ] ] ] [SL:DATE_TIME TO A FIFTEEN MINUTE ] ONE ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM TEN SECOND ] ] ] [SL:DATE_TIME TO A FIFTEEN MINUTE ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"timer_name": "default", "amount": 15, "method_timer": "minutes"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00001257.wav", "split": "test", "intent": "[IN:RESTART_TIMER repeat my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 1 minute ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "repeat my 1 minute timer", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "REPEAT MY ONE MINUTE TIMER", "normalized_seqlogical": "[IN:RESTART_TIMER REPEAT MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME ONE MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00001257.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "repeat my 1 minute timer", "seqlogical": "[IN:RESTART_TIMER repeat my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 1 minute ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "REPEAT MY ONE MINUTE TIMER", "normalized_seqlogical": "[IN:RESTART_TIMER REPEAT MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME ONE MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:RESTART_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME ONE MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "restart_timer", "arguments": {"method_timer": "one minute"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00004171.wav", "split": "test", "intent": "[IN:UPDATE_TIMER I have an [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 11 minute ] ] ] [SL:METHOD_TIMER timer ] , please change it ]", "parameters": {}, "sentence": "I have an 11 minute timer, please change it", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "I HAVE AN ELEVEN MINUTE TIMER PLEASE CHANGE IT", "normalized_seqlogical": "[IN:UPDATE_TIMER I HAVE AN [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME ELEVEN MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] PLEASE CHANGE IT ]", "raw_data": {"file_id": "test_1/timer_test/00004171.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "I have an 11 minute timer, please change it", "seqlogical": "[IN:UPDATE_TIMER I have an [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 11 minute ] ] ] [SL:METHOD_TIMER timer ] , please change it ]", "normalized_utterance": "I HAVE AN ELEVEN MINUTE TIMER PLEASE CHANGE IT", "normalized_seqlogical": "[IN:UPDATE_TIMER I HAVE AN [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME ELEVEN MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] PLEASE CHANGE IT ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME ELEVEN MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"timer_name": "eleven minute timer", "method_timer": "update"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00004173.wav", "split": "test", "intent": "[IN:UPDATE_TIMER Change the [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME half hour ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "Change the half hour timer", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "CHANGE THE HALF HOUR TIMER", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE THE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME HALF HOUR ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00004173.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Change the half hour timer", "seqlogical": "[IN:UPDATE_TIMER Change the [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME half hour ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "CHANGE THE HALF HOUR TIMER", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE THE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME HALF HOUR ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME HALF HOUR ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"method_timer": "half-hour timer"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00002008.wav", "split": "test", "intent": "[IN:RESTART_TIMER Reset [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for one hour ] ] ] ]", "parameters": {}, "sentence": "Reset timer for one hour", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "RESET TIMER FOR ONE HOUR", "normalized_seqlogical": "[IN:RESTART_TIMER RESET [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR ONE HOUR ] ] ] ]", "raw_data": {"file_id": "test_1/timer_test/00002008.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Reset timer for one hour", "seqlogical": "[IN:RESTART_TIMER Reset [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for one hour ] ] ] ]", "normalized_utterance": "RESET TIMER FOR ONE HOUR", "normalized_seqlogical": "[IN:RESTART_TIMER RESET [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR ONE HOUR ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:RESTART_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR ONE HOUR ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "create_timer", "arguments": {"method_timer": "one hour"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00004247.wav", "split": "test", "intent": "[IN:UPDATE_TIMER Change the [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from a 10 second ] ] ] [SL:DATE_TIME to a 15 minute ] one ]", "parameters": {}, "sentence": "Change the timer from a 10 second to a 15 minute one", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "CHANGE THE TIMER FROM A TEN SECOND TO A FIFTEEN MINUTE ONE", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE THE [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM A TEN SECOND ] ] ] [SL:DATE_TIME TO A FIFTEEN MINUTE ] ONE ]", "raw_data": {"file_id": "test_1/timer_test/00004247.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Change the timer from a 10 second to a 15 minute one", "seqlogical": "[IN:UPDATE_TIMER Change the [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from a 10 second ] ] ] [SL:DATE_TIME to a 15 minute ] one ]", "normalized_utterance": "CHANGE THE TIMER FROM A TEN SECOND TO A FIFTEEN MINUTE ONE", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE THE [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM A TEN SECOND ] ] ] [SL:DATE_TIME TO A FIFTEEN MINUTE ] ONE ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM A TEN SECOND ] ] ] [SL:DATE_TIME TO A FIFTEEN MINUTE ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"method_timer": "timer", "amount": 15, "timer_name": "timer"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00003636.wav", "split": "test", "intent": "[IN:UPDATE_TIMER I have a [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 20 minute ] ] ] [SL:METHOD_TIMER timer ] , please change it [SL:DATE_TIME to a 40 minute ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "I have a 20 minute timer, please change it to a 40 minute timer", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "I HAVE A TWENTY MINUTE TIMER PLEASE CHANGE IT TO A FORTY MINUTE TIMER", "normalized_seqlogical": "[IN:UPDATE_TIMER I HAVE A [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWENTY MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] PLEASE CHANGE IT [SL:DATE_TIME TO A FORTY MINUTE ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_1/timer_test/00003636.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "I have a 20 minute timer, please change it to a 40 minute timer", "seqlogical": "[IN:UPDATE_TIMER I have a [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 20 minute ] ] ] [SL:METHOD_TIMER timer ] , please change it [SL:DATE_TIME to a 40 minute ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "I HAVE A TWENTY MINUTE TIMER PLEASE CHANGE IT TO A FORTY MINUTE TIMER", "normalized_seqlogical": "[IN:UPDATE_TIMER I HAVE A [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWENTY MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] PLEASE CHANGE IT [SL:DATE_TIME TO A FORTY MINUTE ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWENTY MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] [SL:DATE_TIME TO A FORTY MINUTE ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"amount": 40, "method_timer": "timer"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00001751.wav", "split": "test", "intent": "[IN:RESTART_TIMER Reset this [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for 10 minutes ] ] ] ]", "parameters": {}, "sentence": "Reset this timer for 10 minutes", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "RESET THIS TIMER FOR TEN MINUTES", "normalized_seqlogical": "[IN:RESTART_TIMER RESET THIS [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR TEN MINUTES ] ] ] ]", "raw_data": {"file_id": "test_1/timer_test/00001751.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Reset this timer for 10 minutes", "seqlogical": "[IN:RESTART_TIMER Reset this [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for 10 minutes ] ] ] ]", "normalized_utterance": "RESET THIS TIMER FOR TEN MINUTES", "normalized_seqlogical": "[IN:RESTART_TIMER RESET THIS [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR TEN MINUTES ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:RESTART_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR TEN MINUTES ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "restart_timer", "arguments": {"method_timer": "timer"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00003313.wav", "split": "test", "intent": "[IN:UPDATE_TIMER Change my [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from two minutes ] ] ] [SL:DATE_TIME to three ] ]", "parameters": {}, "sentence": "Change my timer from two minutes to three", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "CHANGE MY TIMER FROM TWO MINUTES TO THREE", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE MY [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM TWO MINUTES ] ] ] [SL:DATE_TIME TO THREE ] ]", "raw_data": {"file_id": "test_1/timer_test/00003313.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Change my timer from two minutes to three", "seqlogical": "[IN:UPDATE_TIMER Change my [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from two minutes ] ] ] [SL:DATE_TIME to three ] ]", "normalized_utterance": "CHANGE MY TIMER FROM TWO MINUTES TO THREE", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE MY [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM TWO MINUTES ] ] ] [SL:DATE_TIME TO THREE ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM TWO MINUTES ] ] ] [SL:DATE_TIME TO THREE ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"method_timer": "timer", "amount": 3}}]}
{"filename": "stop_data/stop/test_0/timer_test/00004247.wav", "split": "test", "intent": "[IN:UPDATE_TIMER Change the [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from a 10 second ] ] ] [SL:DATE_TIME to a 15 minute ] one ]", "parameters": {}, "sentence": "Change the timer from a 10 second to a 15 minute one", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "CHANGE THE TIMER FROM A TEN SECOND TO A FIFTEEN MINUTE ONE", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE THE [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM A TEN SECOND ] ] ] [SL:DATE_TIME TO A FIFTEEN MINUTE ] ONE ]", "raw_data": {"file_id": "test_0/timer_test_0/00004247.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Change the timer from a 10 second to a 15 minute one", "seqlogical": "[IN:UPDATE_TIMER Change the [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from a 10 second ] ] ] [SL:DATE_TIME to a 15 minute ] one ]", "normalized_utterance": "CHANGE THE TIMER FROM A TEN SECOND TO A FIFTEEN MINUTE ONE", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE THE [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM A TEN SECOND ] ] ] [SL:DATE_TIME TO A FIFTEEN MINUTE ] ONE ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM A TEN SECOND ] ] ] [SL:DATE_TIME TO A FIFTEEN MINUTE ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"amount": 15, "method_timer": "minute"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00003312.wav", "split": "test", "intent": "[IN:UPDATE_TIMER Change my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME one hour ] ] ] [SL:METHOD_TIMER timer ] [SL:DATE_TIME to one minute and thirty seconds ] ]", "parameters": {}, "sentence": "Change my one hour timer to one minute and thirty seconds", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "CHANGE MY ONE HOUR TIMER TO ONE MINUTE AND THIRTY SECONDS", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME ONE HOUR ] ] ] [SL:METHOD_TIMER TIMER ] [SL:DATE_TIME TO ONE MINUTE AND THIRTY SECONDS ] ]", "raw_data": {"file_id": "test_1/timer_test/00003312.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Change my one hour timer to one minute and thirty seconds", "seqlogical": "[IN:UPDATE_TIMER Change my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME one hour ] ] ] [SL:METHOD_TIMER timer ] [SL:DATE_TIME to one minute and thirty seconds ] ]", "normalized_utterance": "CHANGE MY ONE HOUR TIMER TO ONE MINUTE AND THIRTY SECONDS", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME ONE HOUR ] ] ] [SL:METHOD_TIMER TIMER ] [SL:DATE_TIME TO ONE MINUTE AND THIRTY SECONDS ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME ONE HOUR ] ] ] [SL:METHOD_TIMER TIMER ] [SL:DATE_TIME TO ONE MINUTE AND THIRTY SECONDS ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"timer_name": "one-hour timer", "amount": 90, "method_timer": "seconds"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00001987.wav", "split": "test", "intent": "[IN:RESTART_TIMER Reset [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for 80 seconds ] ] ] . ]", "parameters": {}, "sentence": "Reset timer for 80 seconds.", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "RESET TIMER FOR EIGHTY SECONDS", "normalized_seqlogical": "[IN:RESTART_TIMER RESET [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR EIGHTY SECONDS ] ] ] ]", "raw_data": {"file_id": "test_1/timer_test/00001987.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Reset timer for 80 seconds.", "seqlogical": "[IN:RESTART_TIMER Reset [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for 80 seconds ] ] ] . ]", "normalized_utterance": "RESET TIMER FOR EIGHTY SECONDS", "normalized_seqlogical": "[IN:RESTART_TIMER RESET [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR EIGHTY SECONDS ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:RESTART_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR EIGHTY SECONDS ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "restart_timer", "arguments": {"method_timer": "reset"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00001396.wav", "split": "test", "intent": "[IN:GET_TIMER How much [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME time ] ] ] on [SL:METHOD_TIMER timer ] ? ]", "parameters": {}, "sentence": "How much time on timer?", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "HOW MUCH TIME ON TIMER", "normalized_seqlogical": "[IN:GET_TIMER HOW MUCH [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TIME ] ] ] ON [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00001396.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "How much time on timer?", "seqlogical": "[IN:GET_TIMER How much [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME time ] ] ] on [SL:METHOD_TIMER timer ] ? ]", "normalized_utterance": "HOW MUCH TIME ON TIMER", "normalized_seqlogical": "[IN:GET_TIMER HOW MUCH [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TIME ] ] ] ON [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TIME ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "timer"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00003270.wav", "split": "test", "intent": "[IN:GET_TIMER How much time is left on my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 30 second ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "How much time is left on my 30 second timer", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "HOW MUCH TIME IS LEFT ON MY THIRTY SECOND TIMER", "normalized_seqlogical": "[IN:GET_TIMER HOW MUCH TIME IS LEFT ON MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THIRTY SECOND ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_1/timer_test/00003270.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "How much time is left on my 30 second timer", "seqlogical": "[IN:GET_TIMER How much time is left on my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 30 second ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "HOW MUCH TIME IS LEFT ON MY THIRTY SECOND TIMER", "normalized_seqlogical": "[IN:GET_TIMER HOW MUCH TIME IS LEFT ON MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THIRTY SECOND ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THIRTY SECOND ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "30-second timer"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00003281.wav", "split": "test", "intent": "[IN:PAUSE_TIMER Pause my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 90 second ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "Pause my 90 second timer", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "PAUSE MY NINETY SECOND TIMER", "normalized_seqlogical": "[IN:PAUSE_TIMER PAUSE MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME NINETY SECOND ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_1/timer_test/00003281.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Pause my 90 second timer", "seqlogical": "[IN:PAUSE_TIMER Pause my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 90 second ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "PAUSE MY NINETY SECOND TIMER", "normalized_seqlogical": "[IN:PAUSE_TIMER PAUSE MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME NINETY SECOND ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:PAUSE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME NINETY SECOND ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "pause_timer", "arguments": {"method_timer": "90 second timer"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00004150.wav", "split": "test", "intent": "[IN:UPDATE_TIMER Please change my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 30 second ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "Please change my 30 second timer", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "PLEASE CHANGE MY THIRTY SECOND TIMER", "normalized_seqlogical": "[IN:UPDATE_TIMER PLEASE CHANGE MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THIRTY SECOND ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00004150.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Please change my 30 second timer", "seqlogical": "[IN:UPDATE_TIMER Please change my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 30 second ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "PLEASE CHANGE MY THIRTY SECOND TIMER", "normalized_seqlogical": "[IN:UPDATE_TIMER PLEASE CHANGE MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THIRTY SECOND ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME THIRTY SECOND ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "timer"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00004174.wav", "split": "test", "intent": "[IN:UPDATE_TIMER Please change my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME half hour ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "Please change my half hour timer", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "PLEASE CHANGE MY HALF HOUR TIMER", "normalized_seqlogical": "[IN:UPDATE_TIMER PLEASE CHANGE MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME HALF HOUR ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_1/timer_test/00004174.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Please change my half hour timer", "seqlogical": "[IN:UPDATE_TIMER Please change my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME half hour ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "PLEASE CHANGE MY HALF HOUR TIMER", "normalized_seqlogical": "[IN:UPDATE_TIMER PLEASE CHANGE MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME HALF HOUR ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME HALF HOUR ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "timer"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00000853.wav", "split": "test", "intent": "[IN:RESTART_TIMER Reset the [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for 20 minutes ] ] ] ]", "parameters": {}, "sentence": "Reset the timer for 20 minutes", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "RESET THE TIMER FOR TWENTY MINUTES", "normalized_seqlogical": "[IN:RESTART_TIMER RESET THE [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR TWENTY MINUTES ] ] ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00000853.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Reset the timer for 20 minutes", "seqlogical": "[IN:RESTART_TIMER Reset the [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for 20 minutes ] ] ] ]", "normalized_utterance": "RESET THE TIMER FOR TWENTY MINUTES", "normalized_seqlogical": "[IN:RESTART_TIMER RESET THE [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR TWENTY MINUTES ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:RESTART_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR TWENTY MINUTES ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "restart_timer", "arguments": {"method_timer": "timer", "amount": 20}}]}
{"filename": "stop_data/stop/test_1/timer_test/00001838.wav", "split": "test", "intent": "[IN:RESTART_TIMER Restart the [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for 10 minutes ] ] ] . ]", "parameters": {}, "sentence": "Restart the timer for 10 minutes.", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "RESTART THE TIMER FOR TEN MINUTES", "normalized_seqlogical": "[IN:RESTART_TIMER RESTART THE [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR TEN MINUTES ] ] ] ]", "raw_data": {"file_id": "test_1/timer_test/00001838.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Restart the timer for 10 minutes.", "seqlogical": "[IN:RESTART_TIMER Restart the [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for 10 minutes ] ] ] . ]", "normalized_utterance": "RESTART THE TIMER FOR TEN MINUTES", "normalized_seqlogical": "[IN:RESTART_TIMER RESTART THE [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR TEN MINUTES ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:RESTART_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR TEN MINUTES ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "restart_timer", "arguments": {"method_timer": "timer", "amount": 10}}]}
{"filename": "stop_data/stop/test_1/timer_test/00003220.wav", "split": "test", "intent": "[IN:DELETE_TIMER cancel the [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 15 minute ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "cancel the 15 minute timer", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "CANCEL THE FIFTEEN MINUTE TIMER", "normalized_seqlogical": "[IN:DELETE_TIMER CANCEL THE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FIFTEEN MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_1/timer_test/00003220.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "cancel the 15 minute timer", "seqlogical": "[IN:DELETE_TIMER cancel the [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 15 minute ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "CANCEL THE FIFTEEN MINUTE TIMER", "normalized_seqlogical": "[IN:DELETE_TIMER CANCEL THE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FIFTEEN MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FIFTEEN MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "delete_timer", "arguments": {"method_timer": "15-minute timer"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00002885.wav", "split": "test", "intent": "[IN:GET_TIMER How [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME time ] ] ] is left on [SL:TIMER_NAME workout ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "How time is left on workout timer", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "HOW TIME IS LEFT ON WORKOUT TIMER", "normalized_seqlogical": "[IN:GET_TIMER HOW [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TIME ] ] ] IS LEFT ON [SL:TIMER_NAME WORKOUT ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_1/timer_test/00002885.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "How time is left on workout timer", "seqlogical": "[IN:GET_TIMER How [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME time ] ] ] is left on [SL:TIMER_NAME workout ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "HOW TIME IS LEFT ON WORKOUT TIMER", "normalized_seqlogical": "[IN:GET_TIMER HOW [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TIME ] ] ] IS LEFT ON [SL:TIMER_NAME WORKOUT ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TIME ] ] ] [SL:TIMER_NAME WORKOUT ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "workout"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00000599.wav", "split": "test", "intent": "[IN:GET_TIMER how much time left [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME on 60 minute ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "how much time left on 60 minute timer", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "HOW MUCH TIME LEFT ON SIXTY MINUTE TIMER", "normalized_seqlogical": "[IN:GET_TIMER HOW MUCH TIME LEFT [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME ON SIXTY MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00000599.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "how much time left on 60 minute timer", "seqlogical": "[IN:GET_TIMER how much time left [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME on 60 minute ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "HOW MUCH TIME LEFT ON SIXTY MINUTE TIMER", "normalized_seqlogical": "[IN:GET_TIMER HOW MUCH TIME LEFT [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME ON SIXTY MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME ON SIXTY MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "60 minute timer"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00000563.wav", "split": "test", "intent": "[IN:RESTART_TIMER Restart the [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 5 minute ] ] ] [SL:METHOD_TIMER timer ] . ]", "parameters": {}, "sentence": "Restart the 5 minute timer.", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "RESTART THE FIVE MINUTE TIMER", "normalized_seqlogical": "[IN:RESTART_TIMER RESTART THE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FIVE MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_1/timer_test/00000563.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Restart the 5 minute timer.", "seqlogical": "[IN:RESTART_TIMER Restart the [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 5 minute ] ] ] [SL:METHOD_TIMER timer ] . ]", "normalized_utterance": "RESTART THE FIVE MINUTE TIMER", "normalized_seqlogical": "[IN:RESTART_TIMER RESTART THE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FIVE MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:RESTART_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FIVE MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "restart_timer", "arguments": {"method_timer": "timer", "amount": 5}}]}
{"filename": "stop_data/stop/test_0/timer_test/00003745.wav", "split": "test", "intent": "[IN:DELETE_TIMER Can you cancel my [SL:TIMER_NAME generator ] [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for eight hours ] ] ] ? ]", "parameters": {}, "sentence": "Can you cancel my generator timer for eight hours?", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "CAN YOU CANCEL MY GENERATOR TIMER FOR EIGHT HOURS", "normalized_seqlogical": "[IN:DELETE_TIMER CAN YOU CANCEL MY [SL:TIMER_NAME GENERATOR ] [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR EIGHT HOURS ] ] ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00003745.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Can you cancel my generator timer for eight hours?", "seqlogical": "[IN:DELETE_TIMER Can you cancel my [SL:TIMER_NAME generator ] [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for eight hours ] ] ] ? ]", "normalized_utterance": "CAN YOU CANCEL MY GENERATOR TIMER FOR EIGHT HOURS", "normalized_seqlogical": "[IN:DELETE_TIMER CAN YOU CANCEL MY [SL:TIMER_NAME GENERATOR ] [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR EIGHT HOURS ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:DELETE_TIMER [SL:TIMER_NAME GENERATOR ] [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR EIGHT HOURS ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "delete_timer", "arguments": {"method_timer": "generator", "date_time": "in 8 hours"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00004176.wav", "split": "test", "intent": "[IN:UPDATE_TIMER I need my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME half hour ] ] ] [SL:METHOD_TIMER timer ] changed ]", "parameters": {}, "sentence": "I need my half hour timer changed", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "I NEED MY HALF HOUR TIMER CHANGED", "normalized_seqlogical": "[IN:UPDATE_TIMER I NEED MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME HALF HOUR ] ] ] [SL:METHOD_TIMER TIMER ] CHANGED ]", "raw_data": {"file_id": "test_1/timer_test/00004176.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "I need my half hour timer changed", "seqlogical": "[IN:UPDATE_TIMER I need my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME half hour ] ] ] [SL:METHOD_TIMER timer ] changed ]", "normalized_utterance": "I NEED MY HALF HOUR TIMER CHANGED", "normalized_seqlogical": "[IN:UPDATE_TIMER I NEED MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME HALF HOUR ] ] ] [SL:METHOD_TIMER TIMER ] CHANGED ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME HALF HOUR ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"method_timer": "timer", "amount": 30}}]}
{"filename": "stop_data/stop/test_1/timer_test/00001962.wav", "split": "test", "intent": "[IN:GET_TIMER is there [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 4 minutes ] ] ] left on [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "is there 4 minutes left on timer", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "IS THERE FOUR MINUTES LEFT ON TIMER", "normalized_seqlogical": "[IN:GET_TIMER IS THERE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOUR MINUTES ] ] ] LEFT ON [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_1/timer_test/00001962.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "is there 4 minutes left on timer", "seqlogical": "[IN:GET_TIMER is there [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME 4 minutes ] ] ] left on [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "IS THERE FOUR MINUTES LEFT ON TIMER", "normalized_seqlogical": "[IN:GET_TIMER IS THERE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOUR MINUTES ] ] ] LEFT ON [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOUR MINUTES ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "timer"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00000621.wav", "split": "test", "intent": "[IN:GET_TIMER Is there a [SL:METHOD_TIMER timer ] set [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for 5 p.m . ] ] ] ? ]", "parameters": {}, "sentence": "Is there a timer set for 5 p.m.?", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "IS THERE A TIMER SET FOR FIVE PM", "normalized_seqlogical": "[IN:GET_TIMER IS THERE A [SL:METHOD_TIMER TIMER ] SET [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR FIVE PM ] ] ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00000621.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Is there a timer set for 5 p.m.?", "seqlogical": "[IN:GET_TIMER Is there a [SL:METHOD_TIMER timer ] set [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for 5 p.m . ] ] ] ? ]", "normalized_utterance": "IS THERE A TIMER SET FOR FIVE PM", "normalized_seqlogical": "[IN:GET_TIMER IS THERE A [SL:METHOD_TIMER TIMER ] SET [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR FIVE PM ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR FIVE PM ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "check"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00004174.wav", "split": "test", "intent": "[IN:UPDATE_TIMER Please change my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME half hour ] ] ] [SL:METHOD_TIMER timer ] ]", "parameters": {}, "sentence": "Please change my half hour timer", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "PLEASE CHANGE MY HALF HOUR TIMER", "normalized_seqlogical": "[IN:UPDATE_TIMER PLEASE CHANGE MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME HALF HOUR ] ] ] [SL:METHOD_TIMER TIMER ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00004174.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Please change my half hour timer", "seqlogical": "[IN:UPDATE_TIMER Please change my [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME half hour ] ] ] [SL:METHOD_TIMER timer ] ]", "normalized_utterance": "PLEASE CHANGE MY HALF HOUR TIMER", "normalized_seqlogical": "[IN:UPDATE_TIMER PLEASE CHANGE MY [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME HALF HOUR ] ] ] [SL:METHOD_TIMER TIMER ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME HALF HOUR ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "timer"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00003951.wav", "split": "test", "intent": "[IN:PAUSE_TIMER Pause [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME two minute ] ] ] [SL:METHOD_TIMER timer ] for me ]", "parameters": {}, "sentence": "Pause two minute timer for me", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "PAUSE TWO MINUTE TIMER FOR ME", "normalized_seqlogical": "[IN:PAUSE_TIMER PAUSE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWO MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] FOR ME ]", "raw_data": {"file_id": "test_1/timer_test/00003951.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Pause two minute timer for me", "seqlogical": "[IN:PAUSE_TIMER Pause [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME two minute ] ] ] [SL:METHOD_TIMER timer ] for me ]", "normalized_utterance": "PAUSE TWO MINUTE TIMER FOR ME", "normalized_seqlogical": "[IN:PAUSE_TIMER PAUSE [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWO MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] FOR ME ]", "decoupled_normalized_seqlogical": "[IN:PAUSE_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TWO MINUTE ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "pause_timer", "arguments": {"method_timer": "two minute timer"}}]}
{"filename": "stop_data/stop/test_1/timer_test/00001404.wav", "split": "test", "intent": "[IN:GET_TIMER how much [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME time ] ] ] is left on my [SL:METHOD_TIMER timer ] please ]", "parameters": {}, "sentence": "how much time is left on my timer please", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "HOW MUCH TIME IS LEFT ON MY TIMER PLEASE", "normalized_seqlogical": "[IN:GET_TIMER HOW MUCH [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TIME ] ] ] IS LEFT ON MY [SL:METHOD_TIMER TIMER ] PLEASE ]", "raw_data": {"file_id": "test_1/timer_test/00001404.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "how much time is left on my timer please", "seqlogical": "[IN:GET_TIMER how much [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME time ] ] ] is left on my [SL:METHOD_TIMER timer ] please ]", "normalized_utterance": "HOW MUCH TIME IS LEFT ON MY TIMER PLEASE", "normalized_seqlogical": "[IN:GET_TIMER HOW MUCH [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TIME ] ] ] IS LEFT ON MY [SL:METHOD_TIMER TIMER ] PLEASE ]", "decoupled_normalized_seqlogical": "[IN:GET_TIMER [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME TIME ] ] ] [SL:METHOD_TIMER TIMER ] ]"}, "prediction": "", "function_calls": [{"name": "get_timer", "arguments": {"method_timer": "timer"}}]}
{"filename": "stop_data/stop/test_0/timer_test/00001627.wav", "split": "test", "intent": "[IN:RESTART_TIMER Reset the [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for 3 minutes ] ] ] ]", "parameters": {}, "sentence": "Reset the timer for 3 minutes", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "RESET THE TIMER FOR THREE MINUTES", "normalized_seqlogical": "[IN:RESTART_TIMER RESET THE [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR THREE MINUTES ] ] ] ]", "raw_data": {"file_id": "test_0/timer_test_0/00001627.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Reset the timer for 3 minutes", "seqlogical": "[IN:RESTART_TIMER Reset the [SL:METHOD_TIMER timer ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME for 3 minutes ] ] ] ]", "normalized_utterance": "RESET THE TIMER FOR THREE MINUTES", "normalized_seqlogical": "[IN:RESTART_TIMER RESET THE [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR THREE MINUTES ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:RESTART_TIMER [SL:METHOD_TIMER TIMER ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FOR THREE MINUTES ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "restart_timer", "arguments": {"method_timer": "timer", "amount": 3}}]}
{"filename": "stop_data/stop/test_1/timer_test/00003638.wav", "split": "test", "intent": "[IN:UPDATE_TIMER Change my [SL:METHOD_TIMER timer ] [SL:DATE_TIME to 40 minute ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from 20 minute ] ] ] ]", "parameters": {}, "sentence": "Change my timer to 40 minute from 20 minute", "domain": "timer", "gender": "Female", "native": "Yes", "normalized_utterance": "CHANGE MY TIMER TO FORTY MINUTE FROM TWENTY MINUTE", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE MY [SL:METHOD_TIMER TIMER ] [SL:DATE_TIME TO FORTY MINUTE ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM TWENTY MINUTE ] ] ] ]", "raw_data": {"file_id": "test_1/timer_test/00003638.wav", "domain": "timer", "gender": "Female", "native": "Yes", "utterance": "Change my timer to 40 minute from 20 minute", "seqlogical": "[IN:UPDATE_TIMER Change my [SL:METHOD_TIMER timer ] [SL:DATE_TIME to 40 minute ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME from 20 minute ] ] ] ]", "normalized_utterance": "CHANGE MY TIMER TO FORTY MINUTE FROM TWENTY MINUTE", "normalized_seqlogical": "[IN:UPDATE_TIMER CHANGE MY [SL:METHOD_TIMER TIMER ] [SL:DATE_TIME TO FORTY MINUTE ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM TWENTY MINUTE ] ] ] ]", "decoupled_normalized_seqlogical": "[IN:UPDATE_TIMER [SL:METHOD_TIMER TIMER ] [SL:DATE_TIME TO FORTY MINUTE ] [SL:TIMER_NAME [IN:GET_TIME [SL:DATE_TIME FROM TWENTY MINUTE ] ] ] ]"}, "prediction": "", "function_calls": [{"name": "update_timer", "arguments": {"amount": 40, "method_timer": "timer"}}]}
